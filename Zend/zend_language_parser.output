Terminals unused in grammar

   "comment (T_COMMENT)"
   "doc comment (T_DOC_COMMENT)"
   "open tag (T_OPEN_TAG)"
   "open tag with echo (T_OPEN_TAG_WITH_ECHO)"
   "close tag (T_CLOSE_TAG)"
   "whitespace (T_WHITESPACE)"
   T_ERROR


Grammar

    0 $accept: start "end of file"

    1 start: top_statement_list

    2 reserved_non_modifiers: "include (T_INCLUDE)"
    3                       | "include_once (T_INCLUDE_ONCE)"
    4                       | "eval (T_EVAL)"
    5                       | "require (T_REQUIRE)"
    6                       | "require_once (T_REQUIRE_ONCE)"
    7                       | "or (T_LOGICAL_OR)"
    8                       | "xor (T_LOGICAL_XOR)"
    9                       | "and (T_LOGICAL_AND)"
   10                       | "instanceof (T_INSTANCEOF)"
   11                       | "new (T_NEW)"
   12                       | "clone (T_CLONE)"
   13                       | "exit (T_EXIT)"
   14                       | "if (T_IF)"
   15                       | "elseif (T_ELSEIF)"
   16                       | "else (T_ELSE)"
   17                       | "endif (T_ENDIF)"
   18                       | "echo (T_ECHO)"
   19                       | "do (T_DO)"
   20                       | "while (T_WHILE)"
   21                       | "endwhile (T_ENDWHILE)"
   22                       | "for (T_FOR)"
   23                       | "endfor (T_ENDFOR)"
   24                       | "foreach (T_FOREACH)"
   25                       | "endforeach (T_ENDFOREACH)"
   26                       | "declare (T_DECLARE)"
   27                       | "enddeclare (T_ENDDECLARE)"
   28                       | "as (T_AS)"
   29                       | "try (T_TRY)"
   30                       | "catch (T_CATCH)"
   31                       | "finally (T_FINALLY)"
   32                       | "throw (T_THROW)"
   33                       | "use (T_USE)"
   34                       | "insteadof (T_INSTEADOF)"
   35                       | "global (T_GLOBAL)"
   36                       | "var (T_VAR)"
   37                       | "unset (T_UNSET)"
   38                       | "isset (T_ISSET)"
   39                       | "empty (T_EMPTY)"
   40                       | "continue (T_CONTINUE)"
   41                       | "goto (T_GOTO)"
   42                       | "function (T_FUNCTION)"
   43                       | "const (T_CONST)"
   44                       | "return (T_RETURN)"
   45                       | "print (T_PRINT)"
   46                       | "yield (T_YIELD)"
   47                       | "list (T_LIST)"
   48                       | "switch (T_SWITCH)"
   49                       | "endswitch (T_ENDSWITCH)"
   50                       | "case (T_CASE)"
   51                       | "default (T_DEFAULT)"
   52                       | "break (T_BREAK)"
   53                       | "array (T_ARRAY)"
   54                       | "callable (T_CALLABLE)"
   55                       | "extends (T_EXTENDS)"
   56                       | "implements (T_IMPLEMENTS)"
   57                       | "namespace (T_NAMESPACE)"
   58                       | "trait (T_TRAIT)"
   59                       | "interface (T_INTERFACE)"
   60                       | "class (T_CLASS)"

   61 semi_reserved: reserved_non_modifiers
   62              | "static (T_STATIC)"
   63              | "abstract (T_ABSTRACT)"
   64              | "final (T_FINAL)"
   65              | "private (T_PRIVATE)"
   66              | "protected (T_PROTECTED)"
   67              | "public (T_PUBLIC)"

   68 identifier: "identifier (T_STRING)"
   69           | semi_reserved

   70 top_statement_list: top_statement_list top_statement
   71                   | %empty

   72 namespace_name: "identifier (T_STRING)"
   73               | namespace_name "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"

   74 name: namespace_name
   75     | "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name
   76     | "\\ (T_NS_SEPARATOR)" namespace_name

   77 top_statement: statement
   78              | function_declaration_statement
   79              | class_declaration_statement
   80              | trait_declaration_statement
   81              | interface_declaration_statement
   82              | "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';'
   83              | "namespace (T_NAMESPACE)" namespace_name ';'

   84 $@1: %empty

   85 top_statement: "namespace (T_NAMESPACE)" namespace_name $@1 '{' top_statement_list '}'

   86 $@2: %empty

   87 top_statement: "namespace (T_NAMESPACE)" $@2 '{' top_statement_list '}'
   88              | "use (T_USE)" mixed_group_use_declaration ';'
   89              | "use (T_USE)" use_type group_use_declaration ';'
   90              | "use (T_USE)" use_declarations ';'
   91              | "use (T_USE)" use_type use_declarations ';'
   92              | "const (T_CONST)" const_list ';'

   93 use_type: "function (T_FUNCTION)"
   94         | "const (T_CONST)"

   95 group_use_declaration: namespace_name "\\ (T_NS_SEPARATOR)" '{' unprefixed_use_declarations '}'
   96                      | "\\ (T_NS_SEPARATOR)" namespace_name "\\ (T_NS_SEPARATOR)" '{' unprefixed_use_declarations '}'

   97 mixed_group_use_declaration: namespace_name "\\ (T_NS_SEPARATOR)" '{' inline_use_declarations '}'
   98                            | "\\ (T_NS_SEPARATOR)" namespace_name "\\ (T_NS_SEPARATOR)" '{' inline_use_declarations '}'

   99 inline_use_declarations: inline_use_declarations ',' inline_use_declaration
  100                        | inline_use_declaration

  101 unprefixed_use_declarations: unprefixed_use_declarations ',' unprefixed_use_declaration
  102                            | unprefixed_use_declaration

  103 use_declarations: use_declarations ',' use_declaration
  104                 | use_declaration

  105 inline_use_declaration: unprefixed_use_declaration
  106                       | use_type unprefixed_use_declaration

  107 unprefixed_use_declaration: namespace_name
  108                           | namespace_name "as (T_AS)" "identifier (T_STRING)"

  109 use_declaration: unprefixed_use_declaration
  110                | "\\ (T_NS_SEPARATOR)" unprefixed_use_declaration

  111 const_list: const_list ',' const_decl
  112           | const_decl

  113 inner_statement_list: inner_statement_list inner_statement
  114                     | %empty

  115 inner_statement: statement
  116                | function_declaration_statement
  117                | class_declaration_statement
  118                | trait_declaration_statement
  119                | interface_declaration_statement
  120                | "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';'

  121 statement: '{' inner_statement_list '}'
  122          | if_stmt
  123          | alt_if_stmt
  124          | "while (T_WHILE)" '(' expr ')' while_statement
  125          | "do (T_DO)" statement "while (T_WHILE)" '(' expr ')' ';'
  126          | "for (T_FOR)" '(' for_exprs ';' for_exprs ';' for_exprs ')' for_statement
  127          | "switch (T_SWITCH)" '(' expr ')' switch_case_list
  128          | "break (T_BREAK)" optional_expr ';'
  129          | "continue (T_CONTINUE)" optional_expr ';'
  130          | "return (T_RETURN)" optional_expr ';'
  131          | "global (T_GLOBAL)" global_var_list ';'
  132          | "static (T_STATIC)" static_var_list ';'
  133          | "echo (T_ECHO)" echo_expr_list ';'
  134          | T_INLINE_HTML
  135          | expr ';'
  136          | "unset (T_UNSET)" '(' unset_variables ')' ';'
  137          | "foreach (T_FOREACH)" '(' expr "as (T_AS)" foreach_variable ')' foreach_statement
  138          | "foreach (T_FOREACH)" '(' expr "as (T_AS)" foreach_variable "=> (T_DOUBLE_ARROW)" foreach_variable ')' foreach_statement

  139 $@3: %empty

  140 statement: "declare (T_DECLARE)" '(' const_list ')' $@3 declare_statement
  141          | ';'
  142          | "try (T_TRY)" '{' inner_statement_list '}' catch_list finally_statement
  143          | "throw (T_THROW)" expr ';'
  144          | "goto (T_GOTO)" "identifier (T_STRING)" ';'
  145          | "identifier (T_STRING)" ':'

  146 catch_list: %empty
  147           | catch_list "catch (T_CATCH)" '(' name "variable (T_VARIABLE)" ')' '{' inner_statement_list '}'

  148 finally_statement: %empty
  149                  | "finally (T_FINALLY)" '{' inner_statement_list '}'

  150 unset_variables: unset_variable
  151                | unset_variables ',' unset_variable

  152 unset_variable: variable

  153 function_declaration_statement: function returns_ref "identifier (T_STRING)" '(' parameter_list ')' return_type backup_doc_comment '{' inner_statement_list '}'

  154 is_reference: %empty
  155             | '&'

  156 is_variadic: %empty
  157            | "... (T_ELLIPSIS)"

  158 @4: %empty

  159 class_declaration_statement: class_modifiers "class (T_CLASS)" @4 "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' class_statement_list '}'

  160 @5: %empty

  161 class_declaration_statement: "class (T_CLASS)" @5 "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' class_statement_list '}'

  162 class_modifiers: class_modifier
  163                | class_modifiers class_modifier

  164 class_modifier: "abstract (T_ABSTRACT)"
  165               | "final (T_FINAL)"

  166 @6: %empty

  167 trait_declaration_statement: "trait (T_TRAIT)" @6 "identifier (T_STRING)" backup_doc_comment '{' class_statement_list '}'

  168 @7: %empty

  169 interface_declaration_statement: "interface (T_INTERFACE)" @7 "identifier (T_STRING)" interface_extends_list backup_doc_comment '{' class_statement_list '}'

  170 extends_from: %empty
  171             | "extends (T_EXTENDS)" name

  172 interface_extends_list: %empty
  173                       | "extends (T_EXTENDS)" name_list

  174 implements_list: %empty
  175                | "implements (T_IMPLEMENTS)" name_list

  176 foreach_variable: variable
  177                 | '&' variable
  178                 | "list (T_LIST)" '(' assignment_list ')'

  179 for_statement: statement
  180              | ':' inner_statement_list "endfor (T_ENDFOR)" ';'

  181 foreach_statement: statement
  182                  | ':' inner_statement_list "endforeach (T_ENDFOREACH)" ';'

  183 declare_statement: statement
  184                  | ':' inner_statement_list "enddeclare (T_ENDDECLARE)" ';'

  185 switch_case_list: '{' case_list '}'
  186                 | '{' ';' case_list '}'
  187                 | ':' case_list "endswitch (T_ENDSWITCH)" ';'
  188                 | ':' ';' case_list "endswitch (T_ENDSWITCH)" ';'

  189 case_list: %empty
  190          | case_list "case (T_CASE)" expr case_separator inner_statement_list
  191          | case_list "default (T_DEFAULT)" case_separator inner_statement_list

  192 case_separator: ':'
  193               | ';'

  194 while_statement: statement
  195                | ':' inner_statement_list "endwhile (T_ENDWHILE)" ';'

  196 if_stmt_without_else: "if (T_IF)" '(' expr ')' statement
  197                     | if_stmt_without_else "elseif (T_ELSEIF)" '(' expr ')' statement

  198 if_stmt: if_stmt_without_else
  199        | if_stmt_without_else "else (T_ELSE)" statement

  200 alt_if_stmt_without_else: "if (T_IF)" '(' expr ')' ':' inner_statement_list
  201                         | alt_if_stmt_without_else "elseif (T_ELSEIF)" '(' expr ')' ':' inner_statement_list

  202 alt_if_stmt: alt_if_stmt_without_else "endif (T_ENDIF)" ';'
  203            | alt_if_stmt_without_else "else (T_ELSE)" ':' inner_statement_list "endif (T_ENDIF)" ';'

  204 parameter_list: non_empty_parameter_list
  205               | %empty

  206 non_empty_parameter_list: parameter
  207                         | non_empty_parameter_list ',' parameter

  208 parameter: optional_type is_reference is_variadic "variable (T_VARIABLE)"
  209          | optional_type is_reference is_variadic "variable (T_VARIABLE)" '=' expr

  210 optional_type: %empty
  211              | type

  212 type: "array (T_ARRAY)"
  213     | "callable (T_CALLABLE)"
  214     | name

  215 return_type: %empty
  216            | ':' type

  217 argument_list: '(' ')'
  218              | '(' non_empty_argument_list ')'

  219 non_empty_argument_list: argument
  220                        | non_empty_argument_list ',' argument

  221 argument: expr
  222         | "... (T_ELLIPSIS)" expr

  223 global_var_list: global_var_list ',' global_var
  224                | global_var

  225 global_var: simple_variable

  226 static_var_list: static_var_list ',' static_var
  227                | static_var

  228 static_var: "variable (T_VARIABLE)"
  229           | "variable (T_VARIABLE)" '=' expr

  230 class_statement_list: class_statement_list class_statement
  231                     | %empty

  232 class_statement: variable_modifiers property_list ';'
  233                | "const (T_CONST)" class_const_list ';'
  234                | "use (T_USE)" name_list trait_adaptations
  235                | method_modifiers function returns_ref identifier '(' parameter_list ')' return_type backup_doc_comment method_body

  236 name_list: name
  237          | name_list ',' name

  238 trait_adaptations: ';'
  239                  | '{' '}'
  240                  | '{' trait_adaptation_list '}'

  241 trait_adaptation_list: trait_adaptation
  242                      | trait_adaptation_list trait_adaptation

  243 trait_adaptation: trait_precedence ';'
  244                 | trait_alias ';'

  245 trait_precedence: absolute_trait_method_reference "insteadof (T_INSTEADOF)" name_list

  246 trait_alias: trait_method_reference "as (T_AS)" "identifier (T_STRING)"
  247            | trait_method_reference "as (T_AS)" reserved_non_modifiers
  248            | trait_method_reference "as (T_AS)" member_modifier identifier
  249            | trait_method_reference "as (T_AS)" member_modifier

  250 trait_method_reference: identifier
  251                       | absolute_trait_method_reference

  252 absolute_trait_method_reference: name ":: (T_PAAMAYIM_NEKUDOTAYIM)" identifier

  253 method_body: ';'
  254            | '{' inner_statement_list '}'

  255 variable_modifiers: non_empty_member_modifiers
  256                   | "var (T_VAR)"

  257 method_modifiers: %empty
  258                 | non_empty_member_modifiers

  259 non_empty_member_modifiers: member_modifier
  260                           | non_empty_member_modifiers member_modifier

  261 member_modifier: "public (T_PUBLIC)"
  262                | "protected (T_PROTECTED)"
  263                | "private (T_PRIVATE)"
  264                | "static (T_STATIC)"
  265                | "abstract (T_ABSTRACT)"
  266                | "final (T_FINAL)"

  267 property_list: property_list ',' property
  268              | property

  269 property: "variable (T_VARIABLE)"
  270         | "variable (T_VARIABLE)" '=' expr

  271 class_const_list: class_const_list ',' class_const_decl
  272                 | class_const_decl

  273 class_const_decl: identifier '=' expr

  274 const_decl: "identifier (T_STRING)" '=' expr

  275 echo_expr_list: echo_expr_list ',' echo_expr
  276               | echo_expr

  277 echo_expr: expr

  278 for_exprs: %empty
  279          | non_empty_for_exprs

  280 non_empty_for_exprs: non_empty_for_exprs ',' expr
  281                    | expr

  282 @8: %empty

  283 anonymous_class: "class (T_CLASS)" @8 ctor_arguments extends_from implements_list backup_doc_comment '{' class_statement_list '}'

  284 new_expr: "new (T_NEW)" class_name_reference ctor_arguments
  285         | "new (T_NEW)" anonymous_class

  286 expr_without_variable: "list (T_LIST)" '(' assignment_list ')' '=' expr
  287                      | variable '=' expr
  288                      | variable '=' '&' variable
  289                      | "clone (T_CLONE)" expr
  290                      | variable "+= (T_PLUS_EQUAL)" expr
  291                      | variable "-= (T_MINUS_EQUAL)" expr
  292                      | variable "*= (T_MUL_EQUAL)" expr
  293                      | variable "**= (T_POW_EQUAL)" expr
  294                      | variable "/= (T_DIV_EQUAL)" expr
  295                      | variable ".= (T_CONCAT_EQUAL)" expr
  296                      | variable "%= (T_MOD_EQUAL)" expr
  297                      | variable "&= (T_AND_EQUAL)" expr
  298                      | variable "|= (T_OR_EQUAL)" expr
  299                      | variable "^= (T_XOR_EQUAL)" expr
  300                      | variable "<<= (T_SL_EQUAL)" expr
  301                      | variable ">>= (T_SR_EQUAL)" expr
  302                      | variable "++ (T_INC)"
  303                      | "++ (T_INC)" variable
  304                      | variable "-- (T_DEC)"
  305                      | "-- (T_DEC)" variable
  306                      | expr "|| (T_BOOLEAN_OR)" expr
  307                      | expr "&& (T_BOOLEAN_AND)" expr
  308                      | expr "or (T_LOGICAL_OR)" expr
  309                      | expr "and (T_LOGICAL_AND)" expr
  310                      | expr "xor (T_LOGICAL_XOR)" expr
  311                      | expr '|' expr
  312                      | expr '&' expr
  313                      | expr '^' expr
  314                      | expr '.' expr
  315                      | expr '+' expr
  316                      | expr '-' expr
  317                      | expr '*' expr
  318                      | expr "** (T_POW)" expr
  319                      | expr '/' expr
  320                      | expr '%' expr
  321                      | expr "<< (T_SL)" expr
  322                      | expr ">> (T_SR)" expr
  323                      | '+' expr
  324                      | '-' expr
  325                      | '!' expr
  326                      | '~' expr
  327                      | expr "=== (T_IS_IDENTICAL)" expr
  328                      | expr "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr "== (T_IS_EQUAL)" expr
  330                      | expr "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr '<' expr
  332                      | expr "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr '>' expr
  334                      | expr ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr "<=> (T_SPACESHIP)" expr
  336                      | expr "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | '(' expr ')'
  338                      | new_expr
  339                      | expr '?' expr ':' expr
  340                      | expr '?' ':' expr
  341                      | expr "?? (T_COALESCE)" expr
  342                      | internal_functions_in_yacc
  343                      | "(int) (T_INT_CAST)" expr
  344                      | "(double) (T_DOUBLE_CAST)" expr
  345                      | "(string) (T_STRING_CAST)" expr
  346                      | "(array) (T_ARRAY_CAST)" expr
  347                      | "(object) (T_OBJECT_CAST)" expr
  348                      | "(bool) (T_BOOL_CAST)" expr
  349                      | "(unset) (T_UNSET_CAST)" expr
  350                      | "exit (T_EXIT)" exit_expr
  351                      | '@' expr
  352                      | scalar
  353                      | '`' backticks_expr '`'
  354                      | "print (T_PRINT)" expr
  355                      | "yield (T_YIELD)"
  356                      | "yield (T_YIELD)" expr
  357                      | "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" expr
  358                      | "yield from (T_YIELD_FROM)" expr
  359                      | function returns_ref '(' parameter_list ')' lexical_vars return_type backup_doc_comment '{' inner_statement_list '}'
  360                      | "static (T_STATIC)" function returns_ref '(' parameter_list ')' lexical_vars return_type backup_doc_comment '{' inner_statement_list '}'

  361 function: "function (T_FUNCTION)"

  362 backup_doc_comment: %empty

  363 returns_ref: %empty
  364            | '&'

  365 lexical_vars: %empty
  366             | "use (T_USE)" '(' lexical_var_list ')'

  367 lexical_var_list: lexical_var_list ',' lexical_var
  368                 | lexical_var

  369 lexical_var: "variable (T_VARIABLE)"
  370            | '&' "variable (T_VARIABLE)"

  371 function_call: name argument_list
  372              | class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" member_name argument_list
  373              | variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" member_name argument_list
  374              | callable_expr argument_list

  375 class_name: "static (T_STATIC)"
  376           | name

  377 class_name_reference: class_name
  378                     | new_variable

  379 exit_expr: %empty
  380          | '(' optional_expr ')'

  381 backticks_expr: %empty
  382               | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"
  383               | encaps_list

  384 ctor_arguments: %empty
  385               | argument_list

  386 dereferencable_scalar: "array (T_ARRAY)" '(' array_pair_list ')'
  387                      | '[' array_pair_list ']'
  388                      | "quoted-string (T_CONSTANT_ENCAPSED_STRING)"

  389 scalar: "integer number (T_LNUMBER)"
  390       | "floating-point number (T_DNUMBER)"
  391       | "__LINE__ (T_LINE)"
  392       | "__FILE__ (T_FILE)"
  393       | "__DIR__ (T_DIR)"
  394       | "__TRAIT__ (T_TRAIT_C)"
  395       | "__METHOD__ (T_METHOD_C)"
  396       | "__FUNCTION__ (T_FUNC_C)"
  397       | "__NAMESPACE__ (T_NS_C)"
  398       | "__CLASS__ (T_CLASS_C)"
  399       | "heredoc start (T_START_HEREDOC)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "heredoc end (T_END_HEREDOC)"
  400       | "heredoc start (T_START_HEREDOC)" "heredoc end (T_END_HEREDOC)"
  401       | '"' encaps_list '"'
  402       | "heredoc start (T_START_HEREDOC)" encaps_list "heredoc end (T_END_HEREDOC)"
  403       | dereferencable_scalar
  404       | constant

  405 constant: name
  406         | class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" identifier
  407         | variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" identifier

  408 possible_comma: %empty
  409               | ','

  410 expr: variable
  411     | expr_without_variable

  412 optional_expr: %empty
  413              | expr

  414 variable_class_name: dereferencable

  415 dereferencable: variable
  416               | '(' expr ')'
  417               | dereferencable_scalar

  418 callable_expr: callable_variable
  419              | '(' expr ')'
  420              | dereferencable_scalar

  421 callable_variable: simple_variable
  422                  | dereferencable '[' optional_expr ']'
  423                  | constant '[' optional_expr ']'
  424                  | dereferencable '{' expr '}'
  425                  | dereferencable "-> (T_OBJECT_OPERATOR)" property_name argument_list
  426                  | function_call

  427 variable: callable_variable
  428         | static_member
  429         | dereferencable "-> (T_OBJECT_OPERATOR)" property_name

  430 simple_variable: "variable (T_VARIABLE)"
  431                | '$' '{' expr '}'
  432                | '$' simple_variable

  433 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable
  434              | variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable

  435 new_variable: simple_variable
  436             | new_variable '[' optional_expr ']'
  437             | new_variable '{' expr '}'
  438             | new_variable "-> (T_OBJECT_OPERATOR)" property_name
  439             | class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable
  440             | new_variable ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable

  441 member_name: identifier
  442            | '{' expr '}'
  443            | simple_variable

  444 property_name: "identifier (T_STRING)"
  445              | '{' expr '}'
  446              | simple_variable

  447 assignment_list: assignment_list ',' assignment_list_element
  448                | assignment_list_element

  449 assignment_list_element: variable
  450                        | "list (T_LIST)" '(' assignment_list ')'
  451                        | %empty

  452 array_pair_list: %empty
  453                | non_empty_array_pair_list possible_comma

  454 non_empty_array_pair_list: non_empty_array_pair_list ',' array_pair
  455                          | array_pair

  456 array_pair: expr "=> (T_DOUBLE_ARROW)" expr
  457           | expr
  458           | expr "=> (T_DOUBLE_ARROW)" '&' variable
  459           | '&' variable

  460 encaps_list: encaps_list encaps_var
  461            | encaps_list "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"
  462            | encaps_var
  463            | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" encaps_var

  464 encaps_var: "variable (T_VARIABLE)"
  465           | "variable (T_VARIABLE)" '[' encaps_var_offset ']'
  466           | "variable (T_VARIABLE)" "-> (T_OBJECT_OPERATOR)" "identifier (T_STRING)"
  467           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" expr '}'
  468           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '}'
  469           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr ']' '}'
  470           | "{$ (T_CURLY_OPEN)" variable '}'

  471 encaps_var_offset: "identifier (T_STRING)"
  472                  | "number (T_NUM_STRING)"
  473                  | "variable (T_VARIABLE)"

  474 internal_functions_in_yacc: "isset (T_ISSET)" '(' isset_variables ')'
  475                           | "empty (T_EMPTY)" '(' expr ')'
  476                           | "include (T_INCLUDE)" expr
  477                           | "include_once (T_INCLUDE_ONCE)" expr
  478                           | "eval (T_EVAL)" '(' expr ')'
  479                           | "require (T_REQUIRE)" expr
  480                           | "require_once (T_REQUIRE_ONCE)" expr

  481 isset_variables: isset_variable
  482                | isset_variables ',' isset_variable

  483 isset_variable: expr


Terminals, with rules where they appear

"end of file" (0) 0
'!' (33) 325
'"' (34) 401
'$' (36) 431 432
'%' (37) 320
'&' (38) 155 177 288 312 364 370 458 459
'(' (40) 82 120 124 125 126 127 136 137 138 140 147 153 178 196 197
    200 201 217 218 235 286 337 359 360 366 380 386 416 419 450 474
    475 478
')' (41) 82 120 124 125 126 127 136 137 138 140 147 153 178 196 197
    200 201 217 218 235 286 337 359 360 366 380 386 416 419 450 474
    475 478
'*' (42) 317
'+' (43) 315 323
',' (44) 99 101 103 111 151 207 220 223 226 237 267 271 275 280 367
    409 447 454 482
'-' (45) 316 324
'.' (46) 314
'/' (47) 319
':' (58) 145 180 182 184 187 188 192 195 200 201 203 216 339 340
';' (59) 82 83 88 89 90 91 92 120 125 126 128 129 130 131 132 133 135
    136 141 143 144 180 182 184 186 187 188 193 195 202 203 232 233
    238 243 244 253
'<' (60) 331
'=' (61) 209 229 270 273 274 286 287 288
'>' (62) 333
'?' (63) 339 340
'@' (64) 351
'[' (91) 387 422 423 436 465 469
']' (93) 387 422 423 436 465 469
'^' (94) 313
'`' (96) 353
'{' (123) 85 87 95 96 97 98 121 142 147 149 153 159 161 167 169 185
    186 239 240 254 283 359 360 424 431 437 442 445
'|' (124) 311
'}' (125) 85 87 95 96 97 98 121 142 147 149 153 159 161 167 169 185
    186 239 240 254 283 359 360 424 431 437 442 445 467 468 469 470
'~' (126) 326
error (256)
"include (T_INCLUDE)" (258) 2 476
"include_once (T_INCLUDE_ONCE)" (259) 3 477
"eval (T_EVAL)" (260) 4 478
"require (T_REQUIRE)" (261) 5 479
"require_once (T_REQUIRE_ONCE)" (262) 6 480
"or (T_LOGICAL_OR)" (263) 7 308
"xor (T_LOGICAL_XOR)" (264) 8 310
"and (T_LOGICAL_AND)" (265) 9 309
"print (T_PRINT)" (266) 45 354
"yield (T_YIELD)" (267) 46 355 356 357
"=> (T_DOUBLE_ARROW)" (268) 138 357 456 458
"yield from (T_YIELD_FROM)" (269) 358
"+= (T_PLUS_EQUAL)" (270) 290
"-= (T_MINUS_EQUAL)" (271) 291
"*= (T_MUL_EQUAL)" (272) 292
"/= (T_DIV_EQUAL)" (273) 294
".= (T_CONCAT_EQUAL)" (274) 295
"%= (T_MOD_EQUAL)" (275) 296
"&= (T_AND_EQUAL)" (276) 297
"|= (T_OR_EQUAL)" (277) 298
"^= (T_XOR_EQUAL)" (278) 299
"<<= (T_SL_EQUAL)" (279) 300
">>= (T_SR_EQUAL)" (280) 301
"**= (T_POW_EQUAL)" (281) 293
"?? (T_COALESCE)" (282) 341
"|| (T_BOOLEAN_OR)" (283) 306
"&& (T_BOOLEAN_AND)" (284) 307
"== (T_IS_EQUAL)" (285) 329
"!= (T_IS_NOT_EQUAL)" (286) 330
"=== (T_IS_IDENTICAL)" (287) 327
"!== (T_IS_NOT_IDENTICAL)" (288) 328
"<=> (T_SPACESHIP)" (289) 335
"<= (T_IS_SMALLER_OR_EQUAL)" (290) 332
">= (T_IS_GREATER_OR_EQUAL)" (291) 334
"<< (T_SL)" (292) 321
">> (T_SR)" (293) 322
"instanceof (T_INSTANCEOF)" (294) 10 336
"++ (T_INC)" (295) 302 303
"-- (T_DEC)" (296) 304 305
"(int) (T_INT_CAST)" (297) 343
"(double) (T_DOUBLE_CAST)" (298) 344
"(string) (T_STRING_CAST)" (299) 345
"(array) (T_ARRAY_CAST)" (300) 346
"(object) (T_OBJECT_CAST)" (301) 347
"(bool) (T_BOOL_CAST)" (302) 348
"(unset) (T_UNSET_CAST)" (303) 349
"** (T_POW)" (304) 318
"new (T_NEW)" (305) 11 284 285
"clone (T_CLONE)" (306) 12 289
T_NOELSE (307)
"elseif (T_ELSEIF)" (308) 15 197 201
"else (T_ELSE)" (309) 16 199 203
"endif (T_ENDIF)" (310) 17 202 203
"static (T_STATIC)" (311) 62 132 264 360 375
"abstract (T_ABSTRACT)" (312) 63 164 265
"final (T_FINAL)" (313) 64 165 266
"private (T_PRIVATE)" (314) 65 263
"protected (T_PROTECTED)" (315) 66 262
"public (T_PUBLIC)" (316) 67 261
"integer number (T_LNUMBER)" (317) 389
"floating-point number (T_DNUMBER)" (318) 390
"identifier (T_STRING)" (319) 68 72 73 108 144 145 153 159 161 167
    169 246 274 444 466 471
"variable (T_VARIABLE)" (320) 147 208 209 228 229 269 270 369 370 430
    464 465 466 473
T_INLINE_HTML (321) 134
"quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" (322) 382
    399 461 463
"quoted-string (T_CONSTANT_ENCAPSED_STRING)" (323) 388
"variable name (T_STRING_VARNAME)" (324) 468 469
"number (T_NUM_STRING)" (325) 472
"exit (T_EXIT)" (326) 13 350
"if (T_IF)" (327) 14 196 200
"echo (T_ECHO)" (328) 18 133
"do (T_DO)" (329) 19 125
"while (T_WHILE)" (330) 20 124 125
"endwhile (T_ENDWHILE)" (331) 21 195
"for (T_FOR)" (332) 22 126
"endfor (T_ENDFOR)" (333) 23 180
"foreach (T_FOREACH)" (334) 24 137 138
"endforeach (T_ENDFOREACH)" (335) 25 182
"declare (T_DECLARE)" (336) 26 140
"enddeclare (T_ENDDECLARE)" (337) 27 184
"as (T_AS)" (338) 28 108 137 138 246 247 248 249
"switch (T_SWITCH)" (339) 48 127
"endswitch (T_ENDSWITCH)" (340) 49 187 188
"case (T_CASE)" (341) 50 190
"default (T_DEFAULT)" (342) 51 191
"break (T_BREAK)" (343) 52 128
"continue (T_CONTINUE)" (344) 40 129
"goto (T_GOTO)" (345) 41 144
"function (T_FUNCTION)" (346) 42 93 361
"const (T_CONST)" (347) 43 92 94 233
"return (T_RETURN)" (348) 44 130
"try (T_TRY)" (349) 29 142
"catch (T_CATCH)" (350) 30 147
"finally (T_FINALLY)" (351) 31 149
"throw (T_THROW)" (352) 32 143
"use (T_USE)" (353) 33 88 89 90 91 234 366
"insteadof (T_INSTEADOF)" (354) 34 245
"global (T_GLOBAL)" (355) 35 131
"var (T_VAR)" (356) 36 256
"unset (T_UNSET)" (357) 37 136
"isset (T_ISSET)" (358) 38 474
"empty (T_EMPTY)" (359) 39 475
"__halt_compiler (T_HALT_COMPILER)" (360) 82 120
"class (T_CLASS)" (361) 60 159 161 283
"trait (T_TRAIT)" (362) 58 167
"interface (T_INTERFACE)" (363) 59 169
"extends (T_EXTENDS)" (364) 55 171 173
"implements (T_IMPLEMENTS)" (365) 56 175
"-> (T_OBJECT_OPERATOR)" (366) 425 429 438 466
"list (T_LIST)" (367) 47 178 286 450
"array (T_ARRAY)" (368) 53 212 386
"callable (T_CALLABLE)" (369) 54 213
"__LINE__ (T_LINE)" (370) 391
"__FILE__ (T_FILE)" (371) 392
"__DIR__ (T_DIR)" (372) 393
"__CLASS__ (T_CLASS_C)" (373) 398
"__TRAIT__ (T_TRAIT_C)" (374) 394
"__METHOD__ (T_METHOD_C)" (375) 395
"__FUNCTION__ (T_FUNC_C)" (376) 396
"comment (T_COMMENT)" (377)
"doc comment (T_DOC_COMMENT)" (378)
"open tag (T_OPEN_TAG)" (379)
"open tag with echo (T_OPEN_TAG_WITH_ECHO)" (380)
"close tag (T_CLOSE_TAG)" (381)
"whitespace (T_WHITESPACE)" (382)
"heredoc start (T_START_HEREDOC)" (383) 399 400 402
"heredoc end (T_END_HEREDOC)" (384) 399 400 402
"${ (T_DOLLAR_OPEN_CURLY_BRACES)" (385) 467 468 469
"{$ (T_CURLY_OPEN)" (386) 470
":: (T_PAAMAYIM_NEKUDOTAYIM)" (387) 252 372 373 406 407 433 434 439
    440
"namespace (T_NAMESPACE)" (388) 57 75 83 85 87
"__NAMESPACE__ (T_NS_C)" (389) 397
"\\ (T_NS_SEPARATOR)" (390) 73 75 76 95 96 97 98 110
"... (T_ELLIPSIS)" (391) 157 222
T_ERROR (392)


Nonterminals, with rules where they appear

$accept (166)
    on left: 0
start (167)
    on left: 1, on right: 0
reserved_non_modifiers (168)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43
    44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60, on right: 61
    247
semi_reserved (169)
    on left: 61 62 63 64 65 66 67, on right: 69
identifier (170)
    on left: 68 69, on right: 235 248 250 252 273 406 407 441
top_statement_list (171)
    on left: 70 71, on right: 1 70 85 87
namespace_name (172)
    on left: 72 73, on right: 73 74 75 76 83 85 95 96 97 98 107 108
name (173)
    on left: 74 75 76, on right: 147 171 214 236 237 252 371 376 405
top_statement (174)
    on left: 77 78 79 80 81 82 83 85 87 88 89 90 91 92, on right: 70
$@1 (175)
    on left: 84, on right: 85
$@2 (176)
    on left: 86, on right: 87
use_type (177)
    on left: 93 94, on right: 89 91 106
group_use_declaration (178)
    on left: 95 96, on right: 89
mixed_group_use_declaration (179)
    on left: 97 98, on right: 88
inline_use_declarations (180)
    on left: 99 100, on right: 97 98 99
unprefixed_use_declarations (181)
    on left: 101 102, on right: 95 96 101
use_declarations (182)
    on left: 103 104, on right: 90 91 103
inline_use_declaration (183)
    on left: 105 106, on right: 99 100
unprefixed_use_declaration (184)
    on left: 107 108, on right: 101 102 105 106 109 110
use_declaration (185)
    on left: 109 110, on right: 103 104
const_list (186)
    on left: 111 112, on right: 92 111 140
inner_statement_list (187)
    on left: 113 114, on right: 113 121 142 147 149 153 180 182 184
    190 191 195 200 201 203 254 359 360
inner_statement (188)
    on left: 115 116 117 118 119 120, on right: 113
statement (189)
    on left: 121 122 123 124 125 126 127 128 129 130 131 132 133 134
    135 136 137 138 140 141 142 143 144 145, on right: 77 115 125 179
    181 183 194 196 197 199
$@3 (190)
    on left: 139, on right: 140
catch_list (191)
    on left: 146 147, on right: 142 147
finally_statement (192)
    on left: 148 149, on right: 142
unset_variables (193)
    on left: 150 151, on right: 136 151
unset_variable (194)
    on left: 152, on right: 150 151
function_declaration_statement (195)
    on left: 153, on right: 78 116
is_reference (196)
    on left: 154 155, on right: 208 209
is_variadic (197)
    on left: 156 157, on right: 208 209
class_declaration_statement (198)
    on left: 159 161, on right: 79 117
@4 (199)
    on left: 158, on right: 159
@5 (200)
    on left: 160, on right: 161
class_modifiers (201)
    on left: 162 163, on right: 159 163
class_modifier (202)
    on left: 164 165, on right: 162 163
trait_declaration_statement (203)
    on left: 167, on right: 80 118
@6 (204)
    on left: 166, on right: 167
interface_declaration_statement (205)
    on left: 169, on right: 81 119
@7 (206)
    on left: 168, on right: 169
extends_from (207)
    on left: 170 171, on right: 159 161 283
interface_extends_list (208)
    on left: 172 173, on right: 169
implements_list (209)
    on left: 174 175, on right: 159 161 283
foreach_variable (210)
    on left: 176 177 178, on right: 137 138
for_statement (211)
    on left: 179 180, on right: 126
foreach_statement (212)
    on left: 181 182, on right: 137 138
declare_statement (213)
    on left: 183 184, on right: 140
switch_case_list (214)
    on left: 185 186 187 188, on right: 127
case_list (215)
    on left: 189 190 191, on right: 185 186 187 188 190 191
case_separator (216)
    on left: 192 193, on right: 190 191
while_statement (217)
    on left: 194 195, on right: 124
if_stmt_without_else (218)
    on left: 196 197, on right: 197 198 199
if_stmt (219)
    on left: 198 199, on right: 122
alt_if_stmt_without_else (220)
    on left: 200 201, on right: 201 202 203
alt_if_stmt (221)
    on left: 202 203, on right: 123
parameter_list (222)
    on left: 204 205, on right: 153 235 359 360
non_empty_parameter_list (223)
    on left: 206 207, on right: 204 207
parameter (224)
    on left: 208 209, on right: 206 207
optional_type (225)
    on left: 210 211, on right: 208 209
type (226)
    on left: 212 213 214, on right: 211 216
return_type (227)
    on left: 215 216, on right: 153 235 359 360
argument_list (228)
    on left: 217 218, on right: 371 372 373 374 385 425
non_empty_argument_list (229)
    on left: 219 220, on right: 218 220
argument (230)
    on left: 221 222, on right: 219 220
global_var_list (231)
    on left: 223 224, on right: 131 223
global_var (232)
    on left: 225, on right: 223 224
static_var_list (233)
    on left: 226 227, on right: 132 226
static_var (234)
    on left: 228 229, on right: 226 227
class_statement_list (235)
    on left: 230 231, on right: 159 161 167 169 230 283
class_statement (236)
    on left: 232 233 234 235, on right: 230
name_list (237)
    on left: 236 237, on right: 173 175 234 237 245
trait_adaptations (238)
    on left: 238 239 240, on right: 234
trait_adaptation_list (239)
    on left: 241 242, on right: 240 242
trait_adaptation (240)
    on left: 243 244, on right: 241 242
trait_precedence (241)
    on left: 245, on right: 243
trait_alias (242)
    on left: 246 247 248 249, on right: 244
trait_method_reference (243)
    on left: 250 251, on right: 246 247 248 249
absolute_trait_method_reference (244)
    on left: 252, on right: 245 251
method_body (245)
    on left: 253 254, on right: 235
variable_modifiers (246)
    on left: 255 256, on right: 232
method_modifiers (247)
    on left: 257 258, on right: 235
non_empty_member_modifiers (248)
    on left: 259 260, on right: 255 258 260
member_modifier (249)
    on left: 261 262 263 264 265 266, on right: 248 249 259 260
property_list (250)
    on left: 267 268, on right: 232 267
property (251)
    on left: 269 270, on right: 267 268
class_const_list (252)
    on left: 271 272, on right: 233 271
class_const_decl (253)
    on left: 273, on right: 271 272
const_decl (254)
    on left: 274, on right: 111 112
echo_expr_list (255)
    on left: 275 276, on right: 133 275
echo_expr (256)
    on left: 277, on right: 275 276
for_exprs (257)
    on left: 278 279, on right: 126
non_empty_for_exprs (258)
    on left: 280 281, on right: 279 280
anonymous_class (259)
    on left: 283, on right: 285
@8 (260)
    on left: 282, on right: 283
new_expr (261)
    on left: 284 285, on right: 338
expr_without_variable (262)
    on left: 286 287 288 289 290 291 292 293 294 295 296 297 298 299
    300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315
    316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331
    332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347
    348 349 350 351 352 353 354 355 356 357 358 359 360, on right:
    411
function (263)
    on left: 361, on right: 153 235 359 360
backup_doc_comment (264)
    on left: 362, on right: 153 159 161 167 169 235 283 359 360
returns_ref (265)
    on left: 363 364, on right: 153 235 359 360
lexical_vars (266)
    on left: 365 366, on right: 359 360
lexical_var_list (267)
    on left: 367 368, on right: 366 367
lexical_var (268)
    on left: 369 370, on right: 367 368
function_call (269)
    on left: 371 372 373 374, on right: 426
class_name (270)
    on left: 375 376, on right: 372 377 406 433 439
class_name_reference (271)
    on left: 377 378, on right: 284 336
exit_expr (272)
    on left: 379 380, on right: 350
backticks_expr (273)
    on left: 381 382 383, on right: 353
ctor_arguments (274)
    on left: 384 385, on right: 283 284
dereferencable_scalar (275)
    on left: 386 387 388, on right: 403 417 420
scalar (276)
    on left: 389 390 391 392 393 394 395 396 397 398 399 400 401 402
    403 404, on right: 352
constant (277)
    on left: 405 406 407, on right: 404 423
possible_comma (278)
    on left: 408 409, on right: 453
expr (279)
    on left: 410 411, on right: 124 125 127 135 137 138 143 190 196
    197 200 201 209 221 222 229 270 273 274 277 280 281 286 287 289
    290 291 292 293 294 295 296 297 298 299 300 301 306 307 308 309
    310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325
    326 327 328 329 330 331 332 333 334 335 336 337 339 340 341 343
    344 345 346 347 348 349 351 354 356 357 358 413 416 419 424 431
    437 442 445 456 457 458 467 469 475 476 477 478 479 480 483
optional_expr (280)
    on left: 412 413, on right: 128 129 130 380 422 423 436
variable_class_name (281)
    on left: 414, on right: 373 407 434
dereferencable (282)
    on left: 415 416 417, on right: 414 422 424 425 429
callable_expr (283)
    on left: 418 419 420, on right: 374
callable_variable (284)
    on left: 421 422 423 424 425 426, on right: 418 427
variable (285)
    on left: 427 428 429, on right: 152 176 177 287 288 290 291 292
    293 294 295 296 297 298 299 300 301 302 303 304 305 410 415 449
    458 459 470
simple_variable (286)
    on left: 430 431 432, on right: 225 421 432 433 434 435 439 440
    443 446
static_member (287)
    on left: 433 434, on right: 428
new_variable (288)
    on left: 435 436 437 438 439 440, on right: 378 436 437 438 440
member_name (289)
    on left: 441 442 443, on right: 372 373
property_name (290)
    on left: 444 445 446, on right: 425 429 438
assignment_list (291)
    on left: 447 448, on right: 178 286 447 450
assignment_list_element (292)
    on left: 449 450 451, on right: 447 448
array_pair_list (293)
    on left: 452 453, on right: 386 387
non_empty_array_pair_list (294)
    on left: 454 455, on right: 453 454
array_pair (295)
    on left: 456 457 458 459, on right: 454 455
encaps_list (296)
    on left: 460 461 462 463, on right: 383 401 402 460 461
encaps_var (297)
    on left: 464 465 466 467 468 469 470, on right: 460 462 463
encaps_var_offset (298)
    on left: 471 472 473, on right: 465
internal_functions_in_yacc (299)
    on left: 474 475 476 477 478 479 480, on right: 342
isset_variables (300)
    on left: 481 482, on right: 474 482
isset_variable (301)
    on left: 483, on right: 481 482


State 0

    0 $accept: . start "end of file"

    $default  reduce using rule 71 (top_statement_list)

    start               go to state 1
    top_statement_list  go to state 2


State 1

    0 $accept: start . "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 start: top_statement_list .
   70 top_statement_list: top_statement_list . top_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "const (T_CONST)"                             shift, and go to state 51
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "use (T_USE)"                                 shift, and go to state 55
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 60
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 74
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 1 (start)

    namespace_name                   go to state 83
    name                             go to state 84
    top_statement                    go to state 85
    statement                        go to state 86
    function_declaration_statement   go to state 87
    class_declaration_statement      go to state 88
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 91
    interface_declaration_statement  go to state 92
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 3

    0 $accept: start "end of file" .

    $default  accept


State 4

  476 internal_functions_in_yacc: "include (T_INCLUDE)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 118
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 5

  477 internal_functions_in_yacc: "include_once (T_INCLUDE_ONCE)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 119
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 6

  478 internal_functions_in_yacc: "eval (T_EVAL)" . '(' expr ')'

    '('  shift, and go to state 120


State 7

  479 internal_functions_in_yacc: "require (T_REQUIRE)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 121
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 8

  480 internal_functions_in_yacc: "require_once (T_REQUIRE_ONCE)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 122
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 9

  354 expr_without_variable: "print (T_PRINT)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 123
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 10

  355 expr_without_variable: "yield (T_YIELD)" .
  356                      | "yield (T_YIELD)" . expr
  357                      | "yield (T_YIELD)" . expr "=> (T_DOUBLE_ARROW)" expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 355 (expr_without_variable)

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 124
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 11

  358 expr_without_variable: "yield from (T_YIELD_FROM)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 125
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 12

  323 expr_without_variable: '+' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 126
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 13

  324 expr_without_variable: '-' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 127
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 14

  325 expr_without_variable: '!' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 128
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 15

  326 expr_without_variable: '~' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 129
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 16

  303 expr_without_variable: "++ (T_INC)" . variable

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    namespace_name         go to state 83
    name                   go to state 84
    function_call          go to state 100
    class_name             go to state 101
    dereferencable_scalar  go to state 132
    constant               go to state 133
    variable_class_name    go to state 106
    dereferencable         go to state 107
    callable_expr          go to state 108
    callable_variable      go to state 109
    variable               go to state 134
    simple_variable        go to state 111
    static_member          go to state 112


State 17

  305 expr_without_variable: "-- (T_DEC)" . variable

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    namespace_name         go to state 83
    name                   go to state 84
    function_call          go to state 100
    class_name             go to state 101
    dereferencable_scalar  go to state 132
    constant               go to state 133
    variable_class_name    go to state 106
    dereferencable         go to state 107
    callable_expr          go to state 108
    callable_variable      go to state 109
    variable               go to state 135
    simple_variable        go to state 111
    static_member          go to state 112


State 18

  343 expr_without_variable: "(int) (T_INT_CAST)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 136
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 19

  344 expr_without_variable: "(double) (T_DOUBLE_CAST)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 137
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 20

  345 expr_without_variable: "(string) (T_STRING_CAST)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 138
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 21

  346 expr_without_variable: "(array) (T_ARRAY_CAST)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 139
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 22

  347 expr_without_variable: "(object) (T_OBJECT_CAST)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 140
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 23

  348 expr_without_variable: "(bool) (T_BOOL_CAST)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 141
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 24

  349 expr_without_variable: "(unset) (T_UNSET_CAST)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 142
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 25

  351 expr_without_variable: '@' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 143
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 26

  387 dereferencable_scalar: '[' . array_pair_list ']'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '&'                                           shift, and go to state 144
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 452 (array_pair_list)

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 145
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    array_pair_list             go to state 146
    non_empty_array_pair_list   go to state 147
    array_pair                  go to state 148
    internal_functions_in_yacc  go to state 113


State 27

  284 new_expr: "new (T_NEW)" . class_name_reference ctor_arguments
  285         | "new (T_NEW)" . anonymous_class

    "static (T_STATIC)"        shift, and go to state 130
    "identifier (T_STRING)"    shift, and go to state 115
    "variable (T_VARIABLE)"    shift, and go to state 35
    "class (T_CLASS)"          shift, and go to state 149
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76
    '$'                        shift, and go to state 82

    namespace_name        go to state 83
    name                  go to state 150
    anonymous_class       go to state 151
    class_name            go to state 152
    class_name_reference  go to state 153
    simple_variable       go to state 154
    new_variable          go to state 155


State 28

  289 expr_without_variable: "clone (T_CLONE)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 156
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 29

  132 statement: "static (T_STATIC)" . static_var_list ';'
  360 expr_without_variable: "static (T_STATIC)" . function returns_ref '(' parameter_list ')' lexical_vars return_type backup_doc_comment '{' inner_statement_list '}'
  375 class_name: "static (T_STATIC)" .

    "variable (T_VARIABLE)"  shift, and go to state 157
    "function (T_FUNCTION)"  shift, and go to state 50

    $default  reduce using rule 375 (class_name)

    static_var_list  go to state 158
    static_var       go to state 159
    function         go to state 160


State 30

  164 class_modifier: "abstract (T_ABSTRACT)" .

    $default  reduce using rule 164 (class_modifier)


State 31

  165 class_modifier: "final (T_FINAL)" .

    $default  reduce using rule 165 (class_modifier)


State 32

  389 scalar: "integer number (T_LNUMBER)" .

    $default  reduce using rule 389 (scalar)


State 33

  390 scalar: "floating-point number (T_DNUMBER)" .

    $default  reduce using rule 390 (scalar)


State 34

   72 namespace_name: "identifier (T_STRING)" .
  145 statement: "identifier (T_STRING)" . ':'

    ':'  shift, and go to state 161

    $default  reduce using rule 72 (namespace_name)


State 35

  430 simple_variable: "variable (T_VARIABLE)" .

    $default  reduce using rule 430 (simple_variable)


State 36

  134 statement: T_INLINE_HTML .

    $default  reduce using rule 134 (statement)


State 37

  388 dereferencable_scalar: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" .

    $default  reduce using rule 388 (dereferencable_scalar)


State 38

  350 expr_without_variable: "exit (T_EXIT)" . exit_expr

    '('  shift, and go to state 162

    $default  reduce using rule 379 (exit_expr)

    exit_expr  go to state 163


State 39

  196 if_stmt_without_else: "if (T_IF)" . '(' expr ')' statement
  200 alt_if_stmt_without_else: "if (T_IF)" . '(' expr ')' ':' inner_statement_list

    '('  shift, and go to state 164


State 40

  133 statement: "echo (T_ECHO)" . echo_expr_list ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    echo_expr_list              go to state 165
    echo_expr                   go to state 166
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 167
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 41

  125 statement: "do (T_DO)" . statement "while (T_WHILE)" '(' expr ')' ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    statement                   go to state 168
    if_stmt_without_else        go to state 93
    if_stmt                     go to state 94
    alt_if_stmt_without_else    go to state 95
    alt_if_stmt                 go to state 96
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 105
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 42

  124 statement: "while (T_WHILE)" . '(' expr ')' while_statement

    '('  shift, and go to state 169


State 43

  126 statement: "for (T_FOR)" . '(' for_exprs ';' for_exprs ';' for_exprs ')' for_statement

    '('  shift, and go to state 170


State 44

  137 statement: "foreach (T_FOREACH)" . '(' expr "as (T_AS)" foreach_variable ')' foreach_statement
  138          | "foreach (T_FOREACH)" . '(' expr "as (T_AS)" foreach_variable "=> (T_DOUBLE_ARROW)" foreach_variable ')' foreach_statement

    '('  shift, and go to state 171


State 45

  140 statement: "declare (T_DECLARE)" . '(' const_list ')' $@3 declare_statement

    '('  shift, and go to state 172


State 46

  127 statement: "switch (T_SWITCH)" . '(' expr ')' switch_case_list

    '('  shift, and go to state 173


State 47

  128 statement: "break (T_BREAK)" . optional_expr ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 412 (optional_expr)

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 174
    optional_expr               go to state 175
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 48

  129 statement: "continue (T_CONTINUE)" . optional_expr ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 412 (optional_expr)

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 174
    optional_expr               go to state 176
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 49

  144 statement: "goto (T_GOTO)" . "identifier (T_STRING)" ';'

    "identifier (T_STRING)"  shift, and go to state 177


State 50

  361 function: "function (T_FUNCTION)" .

    $default  reduce using rule 361 (function)


State 51

   92 top_statement: "const (T_CONST)" . const_list ';'

    "identifier (T_STRING)"  shift, and go to state 178

    const_list  go to state 179
    const_decl  go to state 180


State 52

  130 statement: "return (T_RETURN)" . optional_expr ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 412 (optional_expr)

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 174
    optional_expr               go to state 181
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 53

  142 statement: "try (T_TRY)" . '{' inner_statement_list '}' catch_list finally_statement

    '{'  shift, and go to state 182


State 54

  143 statement: "throw (T_THROW)" . expr ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 183
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 55

   88 top_statement: "use (T_USE)" . mixed_group_use_declaration ';'
   89              | "use (T_USE)" . use_type group_use_declaration ';'
   90              | "use (T_USE)" . use_declarations ';'
   91              | "use (T_USE)" . use_type use_declarations ';'

    "identifier (T_STRING)"  shift, and go to state 115
    "function (T_FUNCTION)"  shift, and go to state 184
    "const (T_CONST)"        shift, and go to state 185
    "\\ (T_NS_SEPARATOR)"    shift, and go to state 186

    namespace_name               go to state 187
    use_type                     go to state 188
    mixed_group_use_declaration  go to state 189
    use_declarations             go to state 190
    unprefixed_use_declaration   go to state 191
    use_declaration              go to state 192


State 56

  131 statement: "global (T_GLOBAL)" . global_var_list ';'

    "variable (T_VARIABLE)"  shift, and go to state 35
    '$'                      shift, and go to state 82

    global_var_list  go to state 193
    global_var       go to state 194
    simple_variable  go to state 195


State 57

  136 statement: "unset (T_UNSET)" . '(' unset_variables ')' ';'

    '('  shift, and go to state 196


State 58

  474 internal_functions_in_yacc: "isset (T_ISSET)" . '(' isset_variables ')'

    '('  shift, and go to state 197


State 59

  475 internal_functions_in_yacc: "empty (T_EMPTY)" . '(' expr ')'

    '('  shift, and go to state 198


State 60

   82 top_statement: "__halt_compiler (T_HALT_COMPILER)" . '(' ')' ';'

    '('  shift, and go to state 199


State 61

  161 class_declaration_statement: "class (T_CLASS)" . @5 "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' class_statement_list '}'

    $default  reduce using rule 160 (@5)

    @5  go to state 200


State 62

  167 trait_declaration_statement: "trait (T_TRAIT)" . @6 "identifier (T_STRING)" backup_doc_comment '{' class_statement_list '}'

    $default  reduce using rule 166 (@6)

    @6  go to state 201


State 63

  169 interface_declaration_statement: "interface (T_INTERFACE)" . @7 "identifier (T_STRING)" interface_extends_list backup_doc_comment '{' class_statement_list '}'

    $default  reduce using rule 168 (@7)

    @7  go to state 202


State 64

  286 expr_without_variable: "list (T_LIST)" . '(' assignment_list ')' '=' expr

    '('  shift, and go to state 203


State 65

  386 dereferencable_scalar: "array (T_ARRAY)" . '(' array_pair_list ')'

    '('  shift, and go to state 204


State 66

  391 scalar: "__LINE__ (T_LINE)" .

    $default  reduce using rule 391 (scalar)


State 67

  392 scalar: "__FILE__ (T_FILE)" .

    $default  reduce using rule 392 (scalar)


State 68

  393 scalar: "__DIR__ (T_DIR)" .

    $default  reduce using rule 393 (scalar)


State 69

  398 scalar: "__CLASS__ (T_CLASS_C)" .

    $default  reduce using rule 398 (scalar)


State 70

  394 scalar: "__TRAIT__ (T_TRAIT_C)" .

    $default  reduce using rule 394 (scalar)


State 71

  395 scalar: "__METHOD__ (T_METHOD_C)" .

    $default  reduce using rule 395 (scalar)


State 72

  396 scalar: "__FUNCTION__ (T_FUNC_C)" .

    $default  reduce using rule 396 (scalar)


State 73

  399 scalar: "heredoc start (T_START_HEREDOC)" . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "heredoc end (T_END_HEREDOC)"
  400       | "heredoc start (T_START_HEREDOC)" . "heredoc end (T_END_HEREDOC)"
  402       | "heredoc start (T_START_HEREDOC)" . encaps_list "heredoc end (T_END_HEREDOC)"

    "variable (T_VARIABLE)"                                     shift, and go to state 205
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 206
    "heredoc end (T_END_HEREDOC)"                               shift, and go to state 207
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 208
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 209

    encaps_list  go to state 210
    encaps_var   go to state 211


State 74

   75 name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name
   83 top_statement: "namespace (T_NAMESPACE)" . namespace_name ';'
   85              | "namespace (T_NAMESPACE)" . namespace_name $@1 '{' top_statement_list '}'
   87              | "namespace (T_NAMESPACE)" . $@2 '{' top_statement_list '}'

    "identifier (T_STRING)"  shift, and go to state 115
    "\\ (T_NS_SEPARATOR)"    shift, and go to state 212

    $default  reduce using rule 86 ($@2)

    namespace_name  go to state 213
    $@2             go to state 214


State 75

  397 scalar: "__NAMESPACE__ (T_NS_C)" .

    $default  reduce using rule 397 (scalar)


State 76

   76 name: "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 115

    namespace_name  go to state 215


State 77

  337 expr_without_variable: '(' . expr ')'
  416 dereferencable: '(' . expr ')'
  419 callable_expr: '(' . expr ')'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 216
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 78

  141 statement: ';' .

    $default  reduce using rule 141 (statement)


State 79

  121 statement: '{' . inner_statement_list '}'

    $default  reduce using rule 114 (inner_statement_list)

    inner_statement_list  go to state 217


State 80

  353 expr_without_variable: '`' . backticks_expr '`'

    "variable (T_VARIABLE)"                                     shift, and go to state 205
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 218
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 208
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 209

    $default  reduce using rule 381 (backticks_expr)

    backticks_expr  go to state 219
    encaps_list     go to state 220
    encaps_var      go to state 211


State 81

  401 scalar: '"' . encaps_list '"'

    "variable (T_VARIABLE)"                                     shift, and go to state 205
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 221
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 208
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 209

    encaps_list  go to state 222
    encaps_var   go to state 211


State 82

  431 simple_variable: '$' . '{' expr '}'
  432                | '$' . simple_variable

    "variable (T_VARIABLE)"  shift, and go to state 35
    '{'                      shift, and go to state 223
    '$'                      shift, and go to state 82

    simple_variable  go to state 224


State 83

   73 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   74 name: namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 225

    $default  reduce using rule 74 (name)


State 84

  371 function_call: name . argument_list
  376 class_name: name .
  405 constant: name .

    '('  shift, and go to state 226

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 376 (class_name)
    $default                       reduce using rule 405 (constant)

    argument_list  go to state 227


State 85

   70 top_statement_list: top_statement_list top_statement .

    $default  reduce using rule 70 (top_statement_list)


State 86

   77 top_statement: statement .

    $default  reduce using rule 77 (top_statement)


State 87

   78 top_statement: function_declaration_statement .

    $default  reduce using rule 78 (top_statement)


State 88

   79 top_statement: class_declaration_statement .

    $default  reduce using rule 79 (top_statement)


State 89

  159 class_declaration_statement: class_modifiers . "class (T_CLASS)" @4 "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' class_statement_list '}'
  163 class_modifiers: class_modifiers . class_modifier

    "abstract (T_ABSTRACT)"  shift, and go to state 30
    "final (T_FINAL)"        shift, and go to state 31
    "class (T_CLASS)"        shift, and go to state 228

    class_modifier  go to state 229


State 90

  162 class_modifiers: class_modifier .

    $default  reduce using rule 162 (class_modifiers)


State 91

   80 top_statement: trait_declaration_statement .

    $default  reduce using rule 80 (top_statement)


State 92

   81 top_statement: interface_declaration_statement .

    $default  reduce using rule 81 (top_statement)


State 93

  197 if_stmt_without_else: if_stmt_without_else . "elseif (T_ELSEIF)" '(' expr ')' statement
  198 if_stmt: if_stmt_without_else .
  199        | if_stmt_without_else . "else (T_ELSE)" statement

    "elseif (T_ELSEIF)"  shift, and go to state 230
    "else (T_ELSE)"      shift, and go to state 231

    $default  reduce using rule 198 (if_stmt)


State 94

  122 statement: if_stmt .

    $default  reduce using rule 122 (statement)


State 95

  201 alt_if_stmt_without_else: alt_if_stmt_without_else . "elseif (T_ELSEIF)" '(' expr ')' ':' inner_statement_list
  202 alt_if_stmt: alt_if_stmt_without_else . "endif (T_ENDIF)" ';'
  203            | alt_if_stmt_without_else . "else (T_ELSE)" ':' inner_statement_list "endif (T_ENDIF)" ';'

    "elseif (T_ELSEIF)"  shift, and go to state 232
    "else (T_ELSE)"      shift, and go to state 233
    "endif (T_ENDIF)"    shift, and go to state 234


State 96

  123 statement: alt_if_stmt .

    $default  reduce using rule 123 (statement)


State 97

  338 expr_without_variable: new_expr .

    $default  reduce using rule 338 (expr_without_variable)


State 98

  411 expr: expr_without_variable .

    $default  reduce using rule 411 (expr)


State 99

  153 function_declaration_statement: function . returns_ref "identifier (T_STRING)" '(' parameter_list ')' return_type backup_doc_comment '{' inner_statement_list '}'
  359 expr_without_variable: function . returns_ref '(' parameter_list ')' lexical_vars return_type backup_doc_comment '{' inner_statement_list '}'

    '&'  shift, and go to state 235

    $default  reduce using rule 363 (returns_ref)

    returns_ref  go to state 236


State 100

  426 callable_variable: function_call .

    $default  reduce using rule 426 (callable_variable)


State 101

  372 function_call: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" member_name argument_list
  406 constant: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" identifier
  433 static_member: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 237


State 102

  403 scalar: dereferencable_scalar .
  417 dereferencable: dereferencable_scalar .
  420 callable_expr: dereferencable_scalar .

    '['                            reduce using rule 417 (dereferencable)
    "-> (T_OBJECT_OPERATOR)"       reduce using rule 417 (dereferencable)
    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 417 (dereferencable)
    '('                            reduce using rule 420 (callable_expr)
    '{'                            reduce using rule 417 (dereferencable)
    $default                       reduce using rule 403 (scalar)


State 103

  352 expr_without_variable: scalar .

    $default  reduce using rule 352 (expr_without_variable)


State 104

  404 scalar: constant .
  423 callable_variable: constant . '[' optional_expr ']'

    '['  shift, and go to state 238

    $default  reduce using rule 404 (scalar)


State 105

  135 statement: expr . ';'
  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ';'                           shift, and go to state 268


State 106

  373 function_call: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" member_name argument_list
  407 constant: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" identifier
  434 static_member: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 269


State 107

  414 variable_class_name: dereferencable .
  422 callable_variable: dereferencable . '[' optional_expr ']'
  424                  | dereferencable . '{' expr '}'
  425                  | dereferencable . "-> (T_OBJECT_OPERATOR)" property_name argument_list
  429 variable: dereferencable . "-> (T_OBJECT_OPERATOR)" property_name

    '['                       shift, and go to state 270
    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 271
    '{'                       shift, and go to state 272

    $default  reduce using rule 414 (variable_class_name)


State 108

  374 function_call: callable_expr . argument_list

    '('  shift, and go to state 226

    argument_list  go to state 273


State 109

  418 callable_expr: callable_variable .
  427 variable: callable_variable .

    '('       reduce using rule 418 (callable_expr)
    $default  reduce using rule 427 (variable)


State 110

  287 expr_without_variable: variable . '=' expr
  288                      | variable . '=' '&' variable
  290                      | variable . "+= (T_PLUS_EQUAL)" expr
  291                      | variable . "-= (T_MINUS_EQUAL)" expr
  292                      | variable . "*= (T_MUL_EQUAL)" expr
  293                      | variable . "**= (T_POW_EQUAL)" expr
  294                      | variable . "/= (T_DIV_EQUAL)" expr
  295                      | variable . ".= (T_CONCAT_EQUAL)" expr
  296                      | variable . "%= (T_MOD_EQUAL)" expr
  297                      | variable . "&= (T_AND_EQUAL)" expr
  298                      | variable . "|= (T_OR_EQUAL)" expr
  299                      | variable . "^= (T_XOR_EQUAL)" expr
  300                      | variable . "<<= (T_SL_EQUAL)" expr
  301                      | variable . ">>= (T_SR_EQUAL)" expr
  302                      | variable . "++ (T_INC)"
  304                      | variable . "-- (T_DEC)"
  410 expr: variable .
  415 dereferencable: variable .

    '='                    shift, and go to state 274
    "+= (T_PLUS_EQUAL)"    shift, and go to state 275
    "-= (T_MINUS_EQUAL)"   shift, and go to state 276
    "*= (T_MUL_EQUAL)"     shift, and go to state 277
    "/= (T_DIV_EQUAL)"     shift, and go to state 278
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 279
    "%= (T_MOD_EQUAL)"     shift, and go to state 280
    "&= (T_AND_EQUAL)"     shift, and go to state 281
    "|= (T_OR_EQUAL)"      shift, and go to state 282
    "^= (T_XOR_EQUAL)"     shift, and go to state 283
    "<<= (T_SL_EQUAL)"     shift, and go to state 284
    ">>= (T_SR_EQUAL)"     shift, and go to state 285
    "**= (T_POW_EQUAL)"    shift, and go to state 286
    "++ (T_INC)"           shift, and go to state 287
    "-- (T_DEC)"           shift, and go to state 288

    '['                            reduce using rule 415 (dereferencable)
    "-> (T_OBJECT_OPERATOR)"       reduce using rule 415 (dereferencable)
    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 415 (dereferencable)
    '{'                            reduce using rule 415 (dereferencable)
    $default                       reduce using rule 410 (expr)


State 111

  421 callable_variable: simple_variable .

    $default  reduce using rule 421 (callable_variable)


State 112

  428 variable: static_member .

    $default  reduce using rule 428 (variable)


State 113

  342 expr_without_variable: internal_functions_in_yacc .

    $default  reduce using rule 342 (expr_without_variable)


State 114

  360 expr_without_variable: "static (T_STATIC)" . function returns_ref '(' parameter_list ')' lexical_vars return_type backup_doc_comment '{' inner_statement_list '}'
  375 class_name: "static (T_STATIC)" .

    "function (T_FUNCTION)"  shift, and go to state 50

    $default  reduce using rule 375 (class_name)

    function  go to state 160


State 115

   72 namespace_name: "identifier (T_STRING)" .

    $default  reduce using rule 72 (namespace_name)


State 116

   75 name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 212


State 117

  359 expr_without_variable: function . returns_ref '(' parameter_list ')' lexical_vars return_type backup_doc_comment '{' inner_statement_list '}'

    '&'  shift, and go to state 235

    $default  reduce using rule 363 (returns_ref)

    returns_ref  go to state 289


State 118

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  476 internal_functions_in_yacc: "include (T_INCLUDE)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 476 (internal_functions_in_yacc)


State 119

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  477 internal_functions_in_yacc: "include_once (T_INCLUDE_ONCE)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 477 (internal_functions_in_yacc)


State 120

  478 internal_functions_in_yacc: "eval (T_EVAL)" '(' . expr ')'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 290
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 121

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  479 internal_functions_in_yacc: "require (T_REQUIRE)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 479 (internal_functions_in_yacc)


State 122

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  480 internal_functions_in_yacc: "require_once (T_REQUIRE_ONCE)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 480 (internal_functions_in_yacc)


State 123

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  354                      | "print (T_PRINT)" expr .

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 354 (expr_without_variable)


State 124

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  356                      | "yield (T_YIELD)" expr .
  357                      | "yield (T_YIELD)" expr . "=> (T_DOUBLE_ARROW)" expr

    "=> (T_DOUBLE_ARROW)"         shift, and go to state 291
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 356 (expr_without_variable)


State 125

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  358                      | "yield from (T_YIELD_FROM)" expr .

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 358 (expr_without_variable)


State 126

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  323                      | '+' expr .
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 323 (expr_without_variable)


State 127

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  324                      | '-' expr .
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 324 (expr_without_variable)


State 128

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  325                      | '!' expr .
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    $default  reduce using rule 325 (expr_without_variable)


State 129

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  326                      | '~' expr .
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 326 (expr_without_variable)


State 130

  375 class_name: "static (T_STATIC)" .

    $default  reduce using rule 375 (class_name)


State 131

  416 dereferencable: '(' . expr ')'
  419 callable_expr: '(' . expr ')'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 292
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 132

  417 dereferencable: dereferencable_scalar .
  420 callable_expr: dereferencable_scalar .

    '('       reduce using rule 420 (callable_expr)
    $default  reduce using rule 417 (dereferencable)


State 133

  423 callable_variable: constant . '[' optional_expr ']'

    '['  shift, and go to state 238


State 134

  303 expr_without_variable: "++ (T_INC)" variable .
  415 dereferencable: variable .

    '['                            reduce using rule 415 (dereferencable)
    "-> (T_OBJECT_OPERATOR)"       reduce using rule 415 (dereferencable)
    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 415 (dereferencable)
    '{'                            reduce using rule 415 (dereferencable)
    $default                       reduce using rule 303 (expr_without_variable)


State 135

  305 expr_without_variable: "-- (T_DEC)" variable .
  415 dereferencable: variable .

    '['                            reduce using rule 415 (dereferencable)
    "-> (T_OBJECT_OPERATOR)"       reduce using rule 415 (dereferencable)
    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 415 (dereferencable)
    '{'                            reduce using rule 415 (dereferencable)
    $default                       reduce using rule 305 (expr_without_variable)


State 136

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  343                      | "(int) (T_INT_CAST)" expr .

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 343 (expr_without_variable)


State 137

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  344                      | "(double) (T_DOUBLE_CAST)" expr .

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 344 (expr_without_variable)


State 138

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  345                      | "(string) (T_STRING_CAST)" expr .

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 345 (expr_without_variable)


State 139

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  346                      | "(array) (T_ARRAY_CAST)" expr .

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 346 (expr_without_variable)


State 140

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  347                      | "(object) (T_OBJECT_CAST)" expr .

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 347 (expr_without_variable)


State 141

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  348                      | "(bool) (T_BOOL_CAST)" expr .

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 348 (expr_without_variable)


State 142

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  349                      | "(unset) (T_UNSET_CAST)" expr .

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 349 (expr_without_variable)


State 143

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  351                      | '@' expr .

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 351 (expr_without_variable)


State 144

  459 array_pair: '&' . variable

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    namespace_name         go to state 83
    name                   go to state 84
    function_call          go to state 100
    class_name             go to state 101
    dereferencable_scalar  go to state 132
    constant               go to state 133
    variable_class_name    go to state 106
    dereferencable         go to state 107
    callable_expr          go to state 108
    callable_variable      go to state 109
    variable               go to state 293
    simple_variable        go to state 111
    static_member          go to state 112


State 145

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  456 array_pair: expr . "=> (T_DOUBLE_ARROW)" expr
  457           | expr .
  458           | expr . "=> (T_DOUBLE_ARROW)" '&' variable

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    "=> (T_DOUBLE_ARROW)"         shift, and go to state 294
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 457 (array_pair)


State 146

  387 dereferencable_scalar: '[' array_pair_list . ']'

    ']'  shift, and go to state 295


State 147

  453 array_pair_list: non_empty_array_pair_list . possible_comma
  454 non_empty_array_pair_list: non_empty_array_pair_list . ',' array_pair

    ','  shift, and go to state 296

    $default  reduce using rule 408 (possible_comma)

    possible_comma  go to state 297


State 148

  455 non_empty_array_pair_list: array_pair .

    $default  reduce using rule 455 (non_empty_array_pair_list)


State 149

  283 anonymous_class: "class (T_CLASS)" . @8 ctor_arguments extends_from implements_list backup_doc_comment '{' class_statement_list '}'

    $default  reduce using rule 282 (@8)

    @8  go to state 298


State 150

  376 class_name: name .

    $default  reduce using rule 376 (class_name)


State 151

  285 new_expr: "new (T_NEW)" anonymous_class .

    $default  reduce using rule 285 (new_expr)


State 152

  377 class_name_reference: class_name .
  439 new_variable: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 299

    $default  reduce using rule 377 (class_name_reference)


State 153

  284 new_expr: "new (T_NEW)" class_name_reference . ctor_arguments

    '('  shift, and go to state 226

    $default  reduce using rule 384 (ctor_arguments)

    argument_list   go to state 300
    ctor_arguments  go to state 301


State 154

  435 new_variable: simple_variable .

    $default  reduce using rule 435 (new_variable)


State 155

  378 class_name_reference: new_variable .
  436 new_variable: new_variable . '[' optional_expr ']'
  437             | new_variable . '{' expr '}'
  438             | new_variable . "-> (T_OBJECT_OPERATOR)" property_name
  440             | new_variable . ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable

    '['                            shift, and go to state 302
    "-> (T_OBJECT_OPERATOR)"       shift, and go to state 303
    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 304
    '{'                            shift, and go to state 305

    $default  reduce using rule 378 (class_name_reference)


State 156

  289 expr_without_variable: "clone (T_CLONE)" expr .
  306                      | expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    $default  reduce using rule 289 (expr_without_variable)


State 157

  228 static_var: "variable (T_VARIABLE)" .
  229           | "variable (T_VARIABLE)" . '=' expr

    '='  shift, and go to state 306

    $default  reduce using rule 228 (static_var)


State 158

  132 statement: "static (T_STATIC)" static_var_list . ';'
  226 static_var_list: static_var_list . ',' static_var

    ','  shift, and go to state 307
    ';'  shift, and go to state 308


State 159

  227 static_var_list: static_var .

    $default  reduce using rule 227 (static_var_list)


State 160

  360 expr_without_variable: "static (T_STATIC)" function . returns_ref '(' parameter_list ')' lexical_vars return_type backup_doc_comment '{' inner_statement_list '}'

    '&'  shift, and go to state 235

    $default  reduce using rule 363 (returns_ref)

    returns_ref  go to state 309


State 161

  145 statement: "identifier (T_STRING)" ':' .

    $default  reduce using rule 145 (statement)


State 162

  380 exit_expr: '(' . optional_expr ')'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 412 (optional_expr)

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 174
    optional_expr               go to state 310
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 163

  350 expr_without_variable: "exit (T_EXIT)" exit_expr .

    $default  reduce using rule 350 (expr_without_variable)


State 164

  196 if_stmt_without_else: "if (T_IF)" '(' . expr ')' statement
  200 alt_if_stmt_without_else: "if (T_IF)" '(' . expr ')' ':' inner_statement_list

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 311
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 165

  133 statement: "echo (T_ECHO)" echo_expr_list . ';'
  275 echo_expr_list: echo_expr_list . ',' echo_expr

    ','  shift, and go to state 312
    ';'  shift, and go to state 313


State 166

  276 echo_expr_list: echo_expr .

    $default  reduce using rule 276 (echo_expr_list)


State 167

  277 echo_expr: expr .
  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 277 (echo_expr)


State 168

  125 statement: "do (T_DO)" statement . "while (T_WHILE)" '(' expr ')' ';'

    "while (T_WHILE)"  shift, and go to state 314


State 169

  124 statement: "while (T_WHILE)" '(' . expr ')' while_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 315
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 170

  126 statement: "for (T_FOR)" '(' . for_exprs ';' for_exprs ';' for_exprs ')' for_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 278 (for_exprs)

    namespace_name              go to state 83
    name                        go to state 84
    for_exprs                   go to state 316
    non_empty_for_exprs         go to state 317
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 318
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 171

  137 statement: "foreach (T_FOREACH)" '(' . expr "as (T_AS)" foreach_variable ')' foreach_statement
  138          | "foreach (T_FOREACH)" '(' . expr "as (T_AS)" foreach_variable "=> (T_DOUBLE_ARROW)" foreach_variable ')' foreach_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 319
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 172

  140 statement: "declare (T_DECLARE)" '(' . const_list ')' $@3 declare_statement

    "identifier (T_STRING)"  shift, and go to state 178

    const_list  go to state 320
    const_decl  go to state 180


State 173

  127 statement: "switch (T_SWITCH)" '(' . expr ')' switch_case_list

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 321
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 174

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  413 optional_expr: expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 413 (optional_expr)


State 175

  128 statement: "break (T_BREAK)" optional_expr . ';'

    ';'  shift, and go to state 322


State 176

  129 statement: "continue (T_CONTINUE)" optional_expr . ';'

    ';'  shift, and go to state 323


State 177

  144 statement: "goto (T_GOTO)" "identifier (T_STRING)" . ';'

    ';'  shift, and go to state 324


State 178

  274 const_decl: "identifier (T_STRING)" . '=' expr

    '='  shift, and go to state 325


State 179

   92 top_statement: "const (T_CONST)" const_list . ';'
  111 const_list: const_list . ',' const_decl

    ','  shift, and go to state 326
    ';'  shift, and go to state 327


State 180

  112 const_list: const_decl .

    $default  reduce using rule 112 (const_list)


State 181

  130 statement: "return (T_RETURN)" optional_expr . ';'

    ';'  shift, and go to state 328


State 182

  142 statement: "try (T_TRY)" '{' . inner_statement_list '}' catch_list finally_statement

    $default  reduce using rule 114 (inner_statement_list)

    inner_statement_list  go to state 329


State 183

  143 statement: "throw (T_THROW)" expr . ';'
  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ';'                           shift, and go to state 330


State 184

   93 use_type: "function (T_FUNCTION)" .

    $default  reduce using rule 93 (use_type)


State 185

   94 use_type: "const (T_CONST)" .

    $default  reduce using rule 94 (use_type)


State 186

   98 mixed_group_use_declaration: "\\ (T_NS_SEPARATOR)" . namespace_name "\\ (T_NS_SEPARATOR)" '{' inline_use_declarations '}'
  110 use_declaration: "\\ (T_NS_SEPARATOR)" . unprefixed_use_declaration

    "identifier (T_STRING)"  shift, and go to state 115

    namespace_name              go to state 331
    unprefixed_use_declaration  go to state 332


State 187

   73 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   97 mixed_group_use_declaration: namespace_name . "\\ (T_NS_SEPARATOR)" '{' inline_use_declarations '}'
  107 unprefixed_use_declaration: namespace_name .
  108                           | namespace_name . "as (T_AS)" "identifier (T_STRING)"

    "as (T_AS)"            shift, and go to state 333
    "\\ (T_NS_SEPARATOR)"  shift, and go to state 334

    $default  reduce using rule 107 (unprefixed_use_declaration)


State 188

   89 top_statement: "use (T_USE)" use_type . group_use_declaration ';'
   91              | "use (T_USE)" use_type . use_declarations ';'

    "identifier (T_STRING)"  shift, and go to state 115
    "\\ (T_NS_SEPARATOR)"    shift, and go to state 335

    namespace_name              go to state 336
    group_use_declaration       go to state 337
    use_declarations            go to state 338
    unprefixed_use_declaration  go to state 191
    use_declaration             go to state 192


State 189

   88 top_statement: "use (T_USE)" mixed_group_use_declaration . ';'

    ';'  shift, and go to state 339


State 190

   90 top_statement: "use (T_USE)" use_declarations . ';'
  103 use_declarations: use_declarations . ',' use_declaration

    ','  shift, and go to state 340
    ';'  shift, and go to state 341


State 191

  109 use_declaration: unprefixed_use_declaration .

    $default  reduce using rule 109 (use_declaration)


State 192

  104 use_declarations: use_declaration .

    $default  reduce using rule 104 (use_declarations)


State 193

  131 statement: "global (T_GLOBAL)" global_var_list . ';'
  223 global_var_list: global_var_list . ',' global_var

    ','  shift, and go to state 342
    ';'  shift, and go to state 343


State 194

  224 global_var_list: global_var .

    $default  reduce using rule 224 (global_var_list)


State 195

  225 global_var: simple_variable .

    $default  reduce using rule 225 (global_var)


State 196

  136 statement: "unset (T_UNSET)" '(' . unset_variables ')' ';'

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    namespace_name         go to state 83
    name                   go to state 84
    unset_variables        go to state 344
    unset_variable         go to state 345
    function_call          go to state 100
    class_name             go to state 101
    dereferencable_scalar  go to state 132
    constant               go to state 133
    variable_class_name    go to state 106
    dereferencable         go to state 107
    callable_expr          go to state 108
    callable_variable      go to state 109
    variable               go to state 346
    simple_variable        go to state 111
    static_member          go to state 112


State 197

  474 internal_functions_in_yacc: "isset (T_ISSET)" '(' . isset_variables ')'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 347
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113
    isset_variables             go to state 348
    isset_variable              go to state 349


State 198

  475 internal_functions_in_yacc: "empty (T_EMPTY)" '(' . expr ')'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 350
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 199

   82 top_statement: "__halt_compiler (T_HALT_COMPILER)" '(' . ')' ';'

    ')'  shift, and go to state 351


State 200

  161 class_declaration_statement: "class (T_CLASS)" @5 . "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' class_statement_list '}'

    "identifier (T_STRING)"  shift, and go to state 352


State 201

  167 trait_declaration_statement: "trait (T_TRAIT)" @6 . "identifier (T_STRING)" backup_doc_comment '{' class_statement_list '}'

    "identifier (T_STRING)"  shift, and go to state 353


State 202

  169 interface_declaration_statement: "interface (T_INTERFACE)" @7 . "identifier (T_STRING)" interface_extends_list backup_doc_comment '{' class_statement_list '}'

    "identifier (T_STRING)"  shift, and go to state 354


State 203

  286 expr_without_variable: "list (T_LIST)" '(' . assignment_list ')' '=' expr

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "list (T_LIST)"                               shift, and go to state 355
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    $default  reduce using rule 451 (assignment_list_element)

    namespace_name           go to state 83
    name                     go to state 84
    function_call            go to state 100
    class_name               go to state 101
    dereferencable_scalar    go to state 132
    constant                 go to state 133
    variable_class_name      go to state 106
    dereferencable           go to state 107
    callable_expr            go to state 108
    callable_variable        go to state 109
    variable                 go to state 356
    simple_variable          go to state 111
    static_member            go to state 112
    assignment_list          go to state 357
    assignment_list_element  go to state 358


State 204

  386 dereferencable_scalar: "array (T_ARRAY)" '(' . array_pair_list ')'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '&'                                           shift, and go to state 144
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 452 (array_pair_list)

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 145
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    array_pair_list             go to state 359
    non_empty_array_pair_list   go to state 147
    array_pair                  go to state 148
    internal_functions_in_yacc  go to state 113


State 205

  464 encaps_var: "variable (T_VARIABLE)" .
  465           | "variable (T_VARIABLE)" . '[' encaps_var_offset ']'
  466           | "variable (T_VARIABLE)" . "-> (T_OBJECT_OPERATOR)" "identifier (T_STRING)"

    '['                       shift, and go to state 360
    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 361

    $default  reduce using rule 464 (encaps_var)


State 206

  399 scalar: "heredoc start (T_START_HEREDOC)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . "heredoc end (T_END_HEREDOC)"
  463 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . encaps_var

    "variable (T_VARIABLE)"            shift, and go to state 205
    "heredoc end (T_END_HEREDOC)"      shift, and go to state 362
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"  shift, and go to state 208
    "{$ (T_CURLY_OPEN)"                shift, and go to state 209

    encaps_var  go to state 363


State 207

  400 scalar: "heredoc start (T_START_HEREDOC)" "heredoc end (T_END_HEREDOC)" .

    $default  reduce using rule 400 (scalar)


State 208

  467 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" . expr '}'
  468           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" . "variable name (T_STRING_VARNAME)" '}'
  469           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" . "variable name (T_STRING_VARNAME)" '[' expr ']' '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "variable name (T_STRING_VARNAME)"            shift, and go to state 364
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 365
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 209

  470 encaps_var: "{$ (T_CURLY_OPEN)" . variable '}'

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    namespace_name         go to state 83
    name                   go to state 84
    function_call          go to state 100
    class_name             go to state 101
    dereferencable_scalar  go to state 132
    constant               go to state 133
    variable_class_name    go to state 106
    dereferencable         go to state 107
    callable_expr          go to state 108
    callable_variable      go to state 109
    variable               go to state 366
    simple_variable        go to state 111
    static_member          go to state 112


State 210

  402 scalar: "heredoc start (T_START_HEREDOC)" encaps_list . "heredoc end (T_END_HEREDOC)"
  460 encaps_list: encaps_list . encaps_var
  461            | encaps_list . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"

    "variable (T_VARIABLE)"                                     shift, and go to state 205
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 367
    "heredoc end (T_END_HEREDOC)"                               shift, and go to state 368
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 208
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 209

    encaps_var  go to state 369


State 211

  462 encaps_list: encaps_var .

    $default  reduce using rule 462 (encaps_list)


State 212

   75 name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 115

    namespace_name  go to state 370


State 213

   73 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   83 top_statement: "namespace (T_NAMESPACE)" namespace_name . ';'
   85              | "namespace (T_NAMESPACE)" namespace_name . $@1 '{' top_statement_list '}'

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 225
    ';'                    shift, and go to state 371

    $default  reduce using rule 84 ($@1)

    $@1  go to state 372


State 214

   87 top_statement: "namespace (T_NAMESPACE)" $@2 . '{' top_statement_list '}'

    '{'  shift, and go to state 373


State 215

   73 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   76 name: "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 225

    $default  reduce using rule 76 (name)


State 216

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  337                      | '(' expr . ')'
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  416 dereferencable: '(' expr . ')'
  419 callable_expr: '(' expr . ')'

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ')'                           shift, and go to state 374


State 217

  113 inner_statement_list: inner_statement_list . inner_statement
  121 statement: '{' inner_statement_list . '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '}'                                           shift, and go to state 376
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 218

  382 backticks_expr: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" .
  463 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . encaps_var

    "variable (T_VARIABLE)"            shift, and go to state 205
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"  shift, and go to state 208
    "{$ (T_CURLY_OPEN)"                shift, and go to state 209

    $default  reduce using rule 382 (backticks_expr)

    encaps_var  go to state 363


State 219

  353 expr_without_variable: '`' backticks_expr . '`'

    '`'  shift, and go to state 383


State 220

  383 backticks_expr: encaps_list .
  460 encaps_list: encaps_list . encaps_var
  461            | encaps_list . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"

    "variable (T_VARIABLE)"                                     shift, and go to state 205
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 367
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 208
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 209

    $default  reduce using rule 383 (backticks_expr)

    encaps_var  go to state 369


State 221

  463 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . encaps_var

    "variable (T_VARIABLE)"            shift, and go to state 205
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"  shift, and go to state 208
    "{$ (T_CURLY_OPEN)"                shift, and go to state 209

    encaps_var  go to state 363


State 222

  401 scalar: '"' encaps_list . '"'
  460 encaps_list: encaps_list . encaps_var
  461            | encaps_list . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"

    "variable (T_VARIABLE)"                                     shift, and go to state 205
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 367
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 208
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 209
    '"'                                                         shift, and go to state 384

    encaps_var  go to state 369


State 223

  431 simple_variable: '$' '{' . expr '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 385
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 224

  432 simple_variable: '$' simple_variable .

    $default  reduce using rule 432 (simple_variable)


State 225

   73 namespace_name: namespace_name "\\ (T_NS_SEPARATOR)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 386


State 226

  217 argument_list: '(' . ')'
  218              | '(' . non_empty_argument_list ')'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    "... (T_ELLIPSIS)"                            shift, and go to state 387
    '('                                           shift, and go to state 77
    ')'                                           shift, and go to state 388
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    non_empty_argument_list     go to state 389
    argument                    go to state 390
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 391
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 227

  371 function_call: name argument_list .

    $default  reduce using rule 371 (function_call)


State 228

  159 class_declaration_statement: class_modifiers "class (T_CLASS)" . @4 "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' class_statement_list '}'

    $default  reduce using rule 158 (@4)

    @4  go to state 392


State 229

  163 class_modifiers: class_modifiers class_modifier .

    $default  reduce using rule 163 (class_modifiers)


State 230

  197 if_stmt_without_else: if_stmt_without_else "elseif (T_ELSEIF)" . '(' expr ')' statement

    '('  shift, and go to state 393


State 231

  199 if_stmt: if_stmt_without_else "else (T_ELSE)" . statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    statement                   go to state 394
    if_stmt_without_else        go to state 93
    if_stmt                     go to state 94
    alt_if_stmt_without_else    go to state 95
    alt_if_stmt                 go to state 96
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 105
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 232

  201 alt_if_stmt_without_else: alt_if_stmt_without_else "elseif (T_ELSEIF)" . '(' expr ')' ':' inner_statement_list

    '('  shift, and go to state 395


State 233

  203 alt_if_stmt: alt_if_stmt_without_else "else (T_ELSE)" . ':' inner_statement_list "endif (T_ENDIF)" ';'

    ':'  shift, and go to state 396


State 234

  202 alt_if_stmt: alt_if_stmt_without_else "endif (T_ENDIF)" . ';'

    ';'  shift, and go to state 397


State 235

  364 returns_ref: '&' .

    $default  reduce using rule 364 (returns_ref)


State 236

  153 function_declaration_statement: function returns_ref . "identifier (T_STRING)" '(' parameter_list ')' return_type backup_doc_comment '{' inner_statement_list '}'
  359 expr_without_variable: function returns_ref . '(' parameter_list ')' lexical_vars return_type backup_doc_comment '{' inner_statement_list '}'

    "identifier (T_STRING)"  shift, and go to state 398
    '('                      shift, and go to state 399


State 237

  372 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . member_name argument_list
  406 constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . identifier
  433 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . simple_variable

    "include (T_INCLUDE)"            shift, and go to state 400
    "include_once (T_INCLUDE_ONCE)"  shift, and go to state 401
    "eval (T_EVAL)"                  shift, and go to state 402
    "require (T_REQUIRE)"            shift, and go to state 403
    "require_once (T_REQUIRE_ONCE)"  shift, and go to state 404
    "or (T_LOGICAL_OR)"              shift, and go to state 405
    "xor (T_LOGICAL_XOR)"            shift, and go to state 406
    "and (T_LOGICAL_AND)"            shift, and go to state 407
    "print (T_PRINT)"                shift, and go to state 408
    "yield (T_YIELD)"                shift, and go to state 409
    "instanceof (T_INSTANCEOF)"      shift, and go to state 410
    "new (T_NEW)"                    shift, and go to state 411
    "clone (T_CLONE)"                shift, and go to state 412
    "elseif (T_ELSEIF)"              shift, and go to state 413
    "else (T_ELSE)"                  shift, and go to state 414
    "endif (T_ENDIF)"                shift, and go to state 415
    "static (T_STATIC)"              shift, and go to state 416
    "abstract (T_ABSTRACT)"          shift, and go to state 417
    "final (T_FINAL)"                shift, and go to state 418
    "private (T_PRIVATE)"            shift, and go to state 419
    "protected (T_PROTECTED)"        shift, and go to state 420
    "public (T_PUBLIC)"              shift, and go to state 421
    "identifier (T_STRING)"          shift, and go to state 422
    "variable (T_VARIABLE)"          shift, and go to state 35
    "exit (T_EXIT)"                  shift, and go to state 423
    "if (T_IF)"                      shift, and go to state 424
    "echo (T_ECHO)"                  shift, and go to state 425
    "do (T_DO)"                      shift, and go to state 426
    "while (T_WHILE)"                shift, and go to state 427
    "endwhile (T_ENDWHILE)"          shift, and go to state 428
    "for (T_FOR)"                    shift, and go to state 429
    "endfor (T_ENDFOR)"              shift, and go to state 430
    "foreach (T_FOREACH)"            shift, and go to state 431
    "endforeach (T_ENDFOREACH)"      shift, and go to state 432
    "declare (T_DECLARE)"            shift, and go to state 433
    "enddeclare (T_ENDDECLARE)"      shift, and go to state 434
    "as (T_AS)"                      shift, and go to state 435
    "switch (T_SWITCH)"              shift, and go to state 436
    "endswitch (T_ENDSWITCH)"        shift, and go to state 437
    "case (T_CASE)"                  shift, and go to state 438
    "default (T_DEFAULT)"            shift, and go to state 439
    "break (T_BREAK)"                shift, and go to state 440
    "continue (T_CONTINUE)"          shift, and go to state 441
    "goto (T_GOTO)"                  shift, and go to state 442
    "function (T_FUNCTION)"          shift, and go to state 443
    "const (T_CONST)"                shift, and go to state 444
    "return (T_RETURN)"              shift, and go to state 445
    "try (T_TRY)"                    shift, and go to state 446
    "catch (T_CATCH)"                shift, and go to state 447
    "finally (T_FINALLY)"            shift, and go to state 448
    "throw (T_THROW)"                shift, and go to state 449
    "use (T_USE)"                    shift, and go to state 450
    "insteadof (T_INSTEADOF)"        shift, and go to state 451
    "global (T_GLOBAL)"              shift, and go to state 452
    "var (T_VAR)"                    shift, and go to state 453
    "unset (T_UNSET)"                shift, and go to state 454
    "isset (T_ISSET)"                shift, and go to state 455
    "empty (T_EMPTY)"                shift, and go to state 456
    "class (T_CLASS)"                shift, and go to state 457
    "trait (T_TRAIT)"                shift, and go to state 458
    "interface (T_INTERFACE)"        shift, and go to state 459
    "extends (T_EXTENDS)"            shift, and go to state 460
    "implements (T_IMPLEMENTS)"      shift, and go to state 461
    "list (T_LIST)"                  shift, and go to state 462
    "array (T_ARRAY)"                shift, and go to state 463
    "callable (T_CALLABLE)"          shift, and go to state 464
    "namespace (T_NAMESPACE)"        shift, and go to state 465
    '{'                              shift, and go to state 466
    '$'                              shift, and go to state 82

    reserved_non_modifiers  go to state 467
    semi_reserved           go to state 468
    identifier              go to state 469
    simple_variable         go to state 470
    member_name             go to state 471


State 238

  423 callable_variable: constant '[' . optional_expr ']'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 412 (optional_expr)

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 174
    optional_expr               go to state 472
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 239

  308 expr_without_variable: expr "or (T_LOGICAL_OR)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 473
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 240

  310 expr_without_variable: expr "xor (T_LOGICAL_XOR)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 474
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 241

  309 expr_without_variable: expr "and (T_LOGICAL_AND)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 475
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 242

  339 expr_without_variable: expr '?' . expr ':' expr
  340                      | expr '?' . ':' expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    ':'                                           shift, and go to state 476
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 477
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 243

  341 expr_without_variable: expr "?? (T_COALESCE)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 478
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 244

  306 expr_without_variable: expr "|| (T_BOOLEAN_OR)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 479
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 245

  307 expr_without_variable: expr "&& (T_BOOLEAN_AND)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 480
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 246

  311 expr_without_variable: expr '|' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 481
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 247

  313 expr_without_variable: expr '^' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 482
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 248

  312 expr_without_variable: expr '&' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 483
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 249

  329 expr_without_variable: expr "== (T_IS_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 484
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 250

  330 expr_without_variable: expr "!= (T_IS_NOT_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 485
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 251

  327 expr_without_variable: expr "=== (T_IS_IDENTICAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 486
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 252

  328 expr_without_variable: expr "!== (T_IS_NOT_IDENTICAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 487
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 253

  335 expr_without_variable: expr "<=> (T_SPACESHIP)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 488
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 254

  331 expr_without_variable: expr '<' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 489
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 255

  332 expr_without_variable: expr "<= (T_IS_SMALLER_OR_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 490
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 256

  333 expr_without_variable: expr '>' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 491
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 257

  334 expr_without_variable: expr ">= (T_IS_GREATER_OR_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 492
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 258

  321 expr_without_variable: expr "<< (T_SL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 493
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 259

  322 expr_without_variable: expr ">> (T_SR)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 494
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 260

  315 expr_without_variable: expr '+' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 495
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 261

  316 expr_without_variable: expr '-' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 496
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 262

  314 expr_without_variable: expr '.' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 497
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 263

  317 expr_without_variable: expr '*' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 498
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 264

  319 expr_without_variable: expr '/' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 499
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 265

  320 expr_without_variable: expr '%' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 500
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 266

  336 expr_without_variable: expr "instanceof (T_INSTANCEOF)" . class_name_reference

    "static (T_STATIC)"        shift, and go to state 130
    "identifier (T_STRING)"    shift, and go to state 115
    "variable (T_VARIABLE)"    shift, and go to state 35
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76
    '$'                        shift, and go to state 82

    namespace_name        go to state 83
    name                  go to state 150
    class_name            go to state 152
    class_name_reference  go to state 501
    simple_variable       go to state 154
    new_variable          go to state 155


State 267

  318 expr_without_variable: expr "** (T_POW)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 502
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 268

  135 statement: expr ';' .

    $default  reduce using rule 135 (statement)


State 269

  373 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . member_name argument_list
  407 constant: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . identifier
  434 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . simple_variable

    "include (T_INCLUDE)"            shift, and go to state 400
    "include_once (T_INCLUDE_ONCE)"  shift, and go to state 401
    "eval (T_EVAL)"                  shift, and go to state 402
    "require (T_REQUIRE)"            shift, and go to state 403
    "require_once (T_REQUIRE_ONCE)"  shift, and go to state 404
    "or (T_LOGICAL_OR)"              shift, and go to state 405
    "xor (T_LOGICAL_XOR)"            shift, and go to state 406
    "and (T_LOGICAL_AND)"            shift, and go to state 407
    "print (T_PRINT)"                shift, and go to state 408
    "yield (T_YIELD)"                shift, and go to state 409
    "instanceof (T_INSTANCEOF)"      shift, and go to state 410
    "new (T_NEW)"                    shift, and go to state 411
    "clone (T_CLONE)"                shift, and go to state 412
    "elseif (T_ELSEIF)"              shift, and go to state 413
    "else (T_ELSE)"                  shift, and go to state 414
    "endif (T_ENDIF)"                shift, and go to state 415
    "static (T_STATIC)"              shift, and go to state 416
    "abstract (T_ABSTRACT)"          shift, and go to state 417
    "final (T_FINAL)"                shift, and go to state 418
    "private (T_PRIVATE)"            shift, and go to state 419
    "protected (T_PROTECTED)"        shift, and go to state 420
    "public (T_PUBLIC)"              shift, and go to state 421
    "identifier (T_STRING)"          shift, and go to state 422
    "variable (T_VARIABLE)"          shift, and go to state 35
    "exit (T_EXIT)"                  shift, and go to state 423
    "if (T_IF)"                      shift, and go to state 424
    "echo (T_ECHO)"                  shift, and go to state 425
    "do (T_DO)"                      shift, and go to state 426
    "while (T_WHILE)"                shift, and go to state 427
    "endwhile (T_ENDWHILE)"          shift, and go to state 428
    "for (T_FOR)"                    shift, and go to state 429
    "endfor (T_ENDFOR)"              shift, and go to state 430
    "foreach (T_FOREACH)"            shift, and go to state 431
    "endforeach (T_ENDFOREACH)"      shift, and go to state 432
    "declare (T_DECLARE)"            shift, and go to state 433
    "enddeclare (T_ENDDECLARE)"      shift, and go to state 434
    "as (T_AS)"                      shift, and go to state 435
    "switch (T_SWITCH)"              shift, and go to state 436
    "endswitch (T_ENDSWITCH)"        shift, and go to state 437
    "case (T_CASE)"                  shift, and go to state 438
    "default (T_DEFAULT)"            shift, and go to state 439
    "break (T_BREAK)"                shift, and go to state 440
    "continue (T_CONTINUE)"          shift, and go to state 441
    "goto (T_GOTO)"                  shift, and go to state 442
    "function (T_FUNCTION)"          shift, and go to state 443
    "const (T_CONST)"                shift, and go to state 444
    "return (T_RETURN)"              shift, and go to state 445
    "try (T_TRY)"                    shift, and go to state 446
    "catch (T_CATCH)"                shift, and go to state 447
    "finally (T_FINALLY)"            shift, and go to state 448
    "throw (T_THROW)"                shift, and go to state 449
    "use (T_USE)"                    shift, and go to state 450
    "insteadof (T_INSTEADOF)"        shift, and go to state 451
    "global (T_GLOBAL)"              shift, and go to state 452
    "var (T_VAR)"                    shift, and go to state 453
    "unset (T_UNSET)"                shift, and go to state 454
    "isset (T_ISSET)"                shift, and go to state 455
    "empty (T_EMPTY)"                shift, and go to state 456
    "class (T_CLASS)"                shift, and go to state 457
    "trait (T_TRAIT)"                shift, and go to state 458
    "interface (T_INTERFACE)"        shift, and go to state 459
    "extends (T_EXTENDS)"            shift, and go to state 460
    "implements (T_IMPLEMENTS)"      shift, and go to state 461
    "list (T_LIST)"                  shift, and go to state 462
    "array (T_ARRAY)"                shift, and go to state 463
    "callable (T_CALLABLE)"          shift, and go to state 464
    "namespace (T_NAMESPACE)"        shift, and go to state 465
    '{'                              shift, and go to state 466
    '$'                              shift, and go to state 82

    reserved_non_modifiers  go to state 467
    semi_reserved           go to state 468
    identifier              go to state 503
    simple_variable         go to state 504
    member_name             go to state 505


State 270

  422 callable_variable: dereferencable '[' . optional_expr ']'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 412 (optional_expr)

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 174
    optional_expr               go to state 506
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 271

  425 callable_variable: dereferencable "-> (T_OBJECT_OPERATOR)" . property_name argument_list
  429 variable: dereferencable "-> (T_OBJECT_OPERATOR)" . property_name

    "identifier (T_STRING)"  shift, and go to state 507
    "variable (T_VARIABLE)"  shift, and go to state 35
    '{'                      shift, and go to state 508
    '$'                      shift, and go to state 82

    simple_variable  go to state 509
    property_name    go to state 510


State 272

  424 callable_variable: dereferencable '{' . expr '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 511
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 273

  374 function_call: callable_expr argument_list .

    $default  reduce using rule 374 (function_call)


State 274

  287 expr_without_variable: variable '=' . expr
  288                      | variable '=' . '&' variable

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '&'                                           shift, and go to state 512
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 513
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 275

  290 expr_without_variable: variable "+= (T_PLUS_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 514
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 276

  291 expr_without_variable: variable "-= (T_MINUS_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 515
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 277

  292 expr_without_variable: variable "*= (T_MUL_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 516
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 278

  294 expr_without_variable: variable "/= (T_DIV_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 517
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 279

  295 expr_without_variable: variable ".= (T_CONCAT_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 518
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 280

  296 expr_without_variable: variable "%= (T_MOD_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 519
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 281

  297 expr_without_variable: variable "&= (T_AND_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 520
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 282

  298 expr_without_variable: variable "|= (T_OR_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 521
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 283

  299 expr_without_variable: variable "^= (T_XOR_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 522
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 284

  300 expr_without_variable: variable "<<= (T_SL_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 523
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 285

  301 expr_without_variable: variable ">>= (T_SR_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 524
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 286

  293 expr_without_variable: variable "**= (T_POW_EQUAL)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 525
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 287

  302 expr_without_variable: variable "++ (T_INC)" .

    $default  reduce using rule 302 (expr_without_variable)


State 288

  304 expr_without_variable: variable "-- (T_DEC)" .

    $default  reduce using rule 304 (expr_without_variable)


State 289

  359 expr_without_variable: function returns_ref . '(' parameter_list ')' lexical_vars return_type backup_doc_comment '{' inner_statement_list '}'

    '('  shift, and go to state 399


State 290

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  478 internal_functions_in_yacc: "eval (T_EVAL)" '(' expr . ')'

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ')'                           shift, and go to state 526


State 291

  357 expr_without_variable: "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 527
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 292

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  416 dereferencable: '(' expr . ')'
  419 callable_expr: '(' expr . ')'

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ')'                           shift, and go to state 528


State 293

  415 dereferencable: variable .
  459 array_pair: '&' variable .

    ','       reduce using rule 459 (array_pair)
    ')'       reduce using rule 459 (array_pair)
    ']'       reduce using rule 459 (array_pair)
    $default  reduce using rule 415 (dereferencable)


State 294

  456 array_pair: expr "=> (T_DOUBLE_ARROW)" . expr
  458           | expr "=> (T_DOUBLE_ARROW)" . '&' variable

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '&'                                           shift, and go to state 529
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 530
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 295

  387 dereferencable_scalar: '[' array_pair_list ']' .

    $default  reduce using rule 387 (dereferencable_scalar)


State 296

  409 possible_comma: ',' .
  454 non_empty_array_pair_list: non_empty_array_pair_list ',' . array_pair

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '&'                                           shift, and go to state 144
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 409 (possible_comma)

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 145
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    array_pair                  go to state 531
    internal_functions_in_yacc  go to state 113


State 297

  453 array_pair_list: non_empty_array_pair_list possible_comma .

    $default  reduce using rule 453 (array_pair_list)


State 298

  283 anonymous_class: "class (T_CLASS)" @8 . ctor_arguments extends_from implements_list backup_doc_comment '{' class_statement_list '}'

    '('  shift, and go to state 226

    $default  reduce using rule 384 (ctor_arguments)

    argument_list   go to state 300
    ctor_arguments  go to state 532


State 299

  439 new_variable: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . simple_variable

    "variable (T_VARIABLE)"  shift, and go to state 35
    '$'                      shift, and go to state 82

    simple_variable  go to state 533


State 300

  385 ctor_arguments: argument_list .

    $default  reduce using rule 385 (ctor_arguments)


State 301

  284 new_expr: "new (T_NEW)" class_name_reference ctor_arguments .

    $default  reduce using rule 284 (new_expr)


State 302

  436 new_variable: new_variable '[' . optional_expr ']'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 412 (optional_expr)

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 174
    optional_expr               go to state 534
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 303

  438 new_variable: new_variable "-> (T_OBJECT_OPERATOR)" . property_name

    "identifier (T_STRING)"  shift, and go to state 507
    "variable (T_VARIABLE)"  shift, and go to state 35
    '{'                      shift, and go to state 508
    '$'                      shift, and go to state 82

    simple_variable  go to state 509
    property_name    go to state 535


State 304

  440 new_variable: new_variable ":: (T_PAAMAYIM_NEKUDOTAYIM)" . simple_variable

    "variable (T_VARIABLE)"  shift, and go to state 35
    '$'                      shift, and go to state 82

    simple_variable  go to state 536


State 305

  437 new_variable: new_variable '{' . expr '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 537
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 306

  229 static_var: "variable (T_VARIABLE)" '=' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 538
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 307

  226 static_var_list: static_var_list ',' . static_var

    "variable (T_VARIABLE)"  shift, and go to state 157

    static_var  go to state 539


State 308

  132 statement: "static (T_STATIC)" static_var_list ';' .

    $default  reduce using rule 132 (statement)


State 309

  360 expr_without_variable: "static (T_STATIC)" function returns_ref . '(' parameter_list ')' lexical_vars return_type backup_doc_comment '{' inner_statement_list '}'

    '('  shift, and go to state 540


State 310

  380 exit_expr: '(' optional_expr . ')'

    ')'  shift, and go to state 541


State 311

  196 if_stmt_without_else: "if (T_IF)" '(' expr . ')' statement
  200 alt_if_stmt_without_else: "if (T_IF)" '(' expr . ')' ':' inner_statement_list
  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ')'                           shift, and go to state 542


State 312

  275 echo_expr_list: echo_expr_list ',' . echo_expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    echo_expr                   go to state 543
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 167
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 313

  133 statement: "echo (T_ECHO)" echo_expr_list ';' .

    $default  reduce using rule 133 (statement)


State 314

  125 statement: "do (T_DO)" statement "while (T_WHILE)" . '(' expr ')' ';'

    '('  shift, and go to state 544


State 315

  124 statement: "while (T_WHILE)" '(' expr . ')' while_statement
  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ')'                           shift, and go to state 545


State 316

  126 statement: "for (T_FOR)" '(' for_exprs . ';' for_exprs ';' for_exprs ')' for_statement

    ';'  shift, and go to state 546


State 317

  279 for_exprs: non_empty_for_exprs .
  280 non_empty_for_exprs: non_empty_for_exprs . ',' expr

    ','  shift, and go to state 547

    $default  reduce using rule 279 (for_exprs)


State 318

  281 non_empty_for_exprs: expr .
  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 281 (non_empty_for_exprs)


State 319

  137 statement: "foreach (T_FOREACH)" '(' expr . "as (T_AS)" foreach_variable ')' foreach_statement
  138          | "foreach (T_FOREACH)" '(' expr . "as (T_AS)" foreach_variable "=> (T_DOUBLE_ARROW)" foreach_variable ')' foreach_statement
  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    "as (T_AS)"                   shift, and go to state 548


State 320

  111 const_list: const_list . ',' const_decl
  140 statement: "declare (T_DECLARE)" '(' const_list . ')' $@3 declare_statement

    ','  shift, and go to state 326
    ')'  shift, and go to state 549


State 321

  127 statement: "switch (T_SWITCH)" '(' expr . ')' switch_case_list
  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ')'                           shift, and go to state 550


State 322

  128 statement: "break (T_BREAK)" optional_expr ';' .

    $default  reduce using rule 128 (statement)


State 323

  129 statement: "continue (T_CONTINUE)" optional_expr ';' .

    $default  reduce using rule 129 (statement)


State 324

  144 statement: "goto (T_GOTO)" "identifier (T_STRING)" ';' .

    $default  reduce using rule 144 (statement)


State 325

  274 const_decl: "identifier (T_STRING)" '=' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 551
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 326

  111 const_list: const_list ',' . const_decl

    "identifier (T_STRING)"  shift, and go to state 178

    const_decl  go to state 552


State 327

   92 top_statement: "const (T_CONST)" const_list ';' .

    $default  reduce using rule 92 (top_statement)


State 328

  130 statement: "return (T_RETURN)" optional_expr ';' .

    $default  reduce using rule 130 (statement)


State 329

  113 inner_statement_list: inner_statement_list . inner_statement
  142 statement: "try (T_TRY)" '{' inner_statement_list . '}' catch_list finally_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '}'                                           shift, and go to state 553
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 330

  143 statement: "throw (T_THROW)" expr ';' .

    $default  reduce using rule 143 (statement)


State 331

   73 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   98 mixed_group_use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name . "\\ (T_NS_SEPARATOR)" '{' inline_use_declarations '}'
  107 unprefixed_use_declaration: namespace_name .
  108                           | namespace_name . "as (T_AS)" "identifier (T_STRING)"

    "as (T_AS)"            shift, and go to state 333
    "\\ (T_NS_SEPARATOR)"  shift, and go to state 554

    $default  reduce using rule 107 (unprefixed_use_declaration)


State 332

  110 use_declaration: "\\ (T_NS_SEPARATOR)" unprefixed_use_declaration .

    $default  reduce using rule 110 (use_declaration)


State 333

  108 unprefixed_use_declaration: namespace_name "as (T_AS)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 555


State 334

   73 namespace_name: namespace_name "\\ (T_NS_SEPARATOR)" . "identifier (T_STRING)"
   97 mixed_group_use_declaration: namespace_name "\\ (T_NS_SEPARATOR)" . '{' inline_use_declarations '}'

    "identifier (T_STRING)"  shift, and go to state 386
    '{'                      shift, and go to state 556


State 335

   96 group_use_declaration: "\\ (T_NS_SEPARATOR)" . namespace_name "\\ (T_NS_SEPARATOR)" '{' unprefixed_use_declarations '}'
  110 use_declaration: "\\ (T_NS_SEPARATOR)" . unprefixed_use_declaration

    "identifier (T_STRING)"  shift, and go to state 115

    namespace_name              go to state 557
    unprefixed_use_declaration  go to state 332


State 336

   73 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   95 group_use_declaration: namespace_name . "\\ (T_NS_SEPARATOR)" '{' unprefixed_use_declarations '}'
  107 unprefixed_use_declaration: namespace_name .
  108                           | namespace_name . "as (T_AS)" "identifier (T_STRING)"

    "as (T_AS)"            shift, and go to state 333
    "\\ (T_NS_SEPARATOR)"  shift, and go to state 558

    $default  reduce using rule 107 (unprefixed_use_declaration)


State 337

   89 top_statement: "use (T_USE)" use_type group_use_declaration . ';'

    ';'  shift, and go to state 559


State 338

   91 top_statement: "use (T_USE)" use_type use_declarations . ';'
  103 use_declarations: use_declarations . ',' use_declaration

    ','  shift, and go to state 340
    ';'  shift, and go to state 560


State 339

   88 top_statement: "use (T_USE)" mixed_group_use_declaration ';' .

    $default  reduce using rule 88 (top_statement)


State 340

  103 use_declarations: use_declarations ',' . use_declaration

    "identifier (T_STRING)"  shift, and go to state 115
    "\\ (T_NS_SEPARATOR)"    shift, and go to state 561

    namespace_name              go to state 562
    unprefixed_use_declaration  go to state 191
    use_declaration             go to state 563


State 341

   90 top_statement: "use (T_USE)" use_declarations ';' .

    $default  reduce using rule 90 (top_statement)


State 342

  223 global_var_list: global_var_list ',' . global_var

    "variable (T_VARIABLE)"  shift, and go to state 35
    '$'                      shift, and go to state 82

    global_var       go to state 564
    simple_variable  go to state 195


State 343

  131 statement: "global (T_GLOBAL)" global_var_list ';' .

    $default  reduce using rule 131 (statement)


State 344

  136 statement: "unset (T_UNSET)" '(' unset_variables . ')' ';'
  151 unset_variables: unset_variables . ',' unset_variable

    ','  shift, and go to state 565
    ')'  shift, and go to state 566


State 345

  150 unset_variables: unset_variable .

    $default  reduce using rule 150 (unset_variables)


State 346

  152 unset_variable: variable .
  415 dereferencable: variable .

    ','       reduce using rule 152 (unset_variable)
    ')'       reduce using rule 152 (unset_variable)
    $default  reduce using rule 415 (dereferencable)


State 347

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  483 isset_variable: expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 483 (isset_variable)


State 348

  474 internal_functions_in_yacc: "isset (T_ISSET)" '(' isset_variables . ')'
  482 isset_variables: isset_variables . ',' isset_variable

    ','  shift, and go to state 567
    ')'  shift, and go to state 568


State 349

  481 isset_variables: isset_variable .

    $default  reduce using rule 481 (isset_variables)


State 350

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  475 internal_functions_in_yacc: "empty (T_EMPTY)" '(' expr . ')'

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ')'                           shift, and go to state 569


State 351

   82 top_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' . ';'

    ';'  shift, and go to state 570


State 352

  161 class_declaration_statement: "class (T_CLASS)" @5 "identifier (T_STRING)" . extends_from implements_list backup_doc_comment '{' class_statement_list '}'

    "extends (T_EXTENDS)"  shift, and go to state 571

    $default  reduce using rule 170 (extends_from)

    extends_from  go to state 572


State 353

  167 trait_declaration_statement: "trait (T_TRAIT)" @6 "identifier (T_STRING)" . backup_doc_comment '{' class_statement_list '}'

    $default  reduce using rule 362 (backup_doc_comment)

    backup_doc_comment  go to state 573


State 354

  169 interface_declaration_statement: "interface (T_INTERFACE)" @7 "identifier (T_STRING)" . interface_extends_list backup_doc_comment '{' class_statement_list '}'

    "extends (T_EXTENDS)"  shift, and go to state 574

    $default  reduce using rule 172 (interface_extends_list)

    interface_extends_list  go to state 575


State 355

  450 assignment_list_element: "list (T_LIST)" . '(' assignment_list ')'

    '('  shift, and go to state 576


State 356

  415 dereferencable: variable .
  449 assignment_list_element: variable .

    ','       reduce using rule 449 (assignment_list_element)
    ')'       reduce using rule 449 (assignment_list_element)
    $default  reduce using rule 415 (dereferencable)


State 357

  286 expr_without_variable: "list (T_LIST)" '(' assignment_list . ')' '=' expr
  447 assignment_list: assignment_list . ',' assignment_list_element

    ','  shift, and go to state 577
    ')'  shift, and go to state 578


State 358

  448 assignment_list: assignment_list_element .

    $default  reduce using rule 448 (assignment_list)


State 359

  386 dereferencable_scalar: "array (T_ARRAY)" '(' array_pair_list . ')'

    ')'  shift, and go to state 579


State 360

  465 encaps_var: "variable (T_VARIABLE)" '[' . encaps_var_offset ']'

    "identifier (T_STRING)"  shift, and go to state 580
    "variable (T_VARIABLE)"  shift, and go to state 581
    "number (T_NUM_STRING)"  shift, and go to state 582

    encaps_var_offset  go to state 583


State 361

  466 encaps_var: "variable (T_VARIABLE)" "-> (T_OBJECT_OPERATOR)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 584


State 362

  399 scalar: "heredoc start (T_START_HEREDOC)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "heredoc end (T_END_HEREDOC)" .

    $default  reduce using rule 399 (scalar)


State 363

  463 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" encaps_var .

    $default  reduce using rule 463 (encaps_list)


State 364

  468 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" . '}'
  469           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" . '[' expr ']' '}'

    '['  shift, and go to state 585
    '}'  shift, and go to state 586


State 365

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  467 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    '}'                           shift, and go to state 587


State 366

  415 dereferencable: variable .
  470 encaps_var: "{$ (T_CURLY_OPEN)" variable . '}'

    '}'  shift, and go to state 588

    $default  reduce using rule 415 (dereferencable)


State 367

  461 encaps_list: encaps_list "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" .

    $default  reduce using rule 461 (encaps_list)


State 368

  402 scalar: "heredoc start (T_START_HEREDOC)" encaps_list "heredoc end (T_END_HEREDOC)" .

    $default  reduce using rule 402 (scalar)


State 369

  460 encaps_list: encaps_list encaps_var .

    $default  reduce using rule 460 (encaps_list)


State 370

   73 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   75 name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 225

    $default  reduce using rule 75 (name)


State 371

   83 top_statement: "namespace (T_NAMESPACE)" namespace_name ';' .

    $default  reduce using rule 83 (top_statement)


State 372

   85 top_statement: "namespace (T_NAMESPACE)" namespace_name $@1 . '{' top_statement_list '}'

    '{'  shift, and go to state 589


State 373

   87 top_statement: "namespace (T_NAMESPACE)" $@2 '{' . top_statement_list '}'

    $default  reduce using rule 71 (top_statement_list)

    top_statement_list  go to state 590


State 374

  337 expr_without_variable: '(' expr ')' .
  416 dereferencable: '(' expr ')' .
  419 callable_expr: '(' expr ')' .

    '['                            reduce using rule 416 (dereferencable)
    "-> (T_OBJECT_OPERATOR)"       reduce using rule 416 (dereferencable)
    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 416 (dereferencable)
    '('                            reduce using rule 419 (callable_expr)
    '{'                            reduce using rule 416 (dereferencable)
    $default                       reduce using rule 337 (expr_without_variable)


State 375

  120 inner_statement: "__halt_compiler (T_HALT_COMPILER)" . '(' ')' ';'

    '('  shift, and go to state 591


State 376

  121 statement: '{' inner_statement_list '}' .

    $default  reduce using rule 121 (statement)


State 377

  113 inner_statement_list: inner_statement_list inner_statement .

    $default  reduce using rule 113 (inner_statement_list)


State 378

  115 inner_statement: statement .

    $default  reduce using rule 115 (inner_statement)


State 379

  116 inner_statement: function_declaration_statement .

    $default  reduce using rule 116 (inner_statement)


State 380

  117 inner_statement: class_declaration_statement .

    $default  reduce using rule 117 (inner_statement)


State 381

  118 inner_statement: trait_declaration_statement .

    $default  reduce using rule 118 (inner_statement)


State 382

  119 inner_statement: interface_declaration_statement .

    $default  reduce using rule 119 (inner_statement)


State 383

  353 expr_without_variable: '`' backticks_expr '`' .

    $default  reduce using rule 353 (expr_without_variable)


State 384

  401 scalar: '"' encaps_list '"' .

    $default  reduce using rule 401 (scalar)


State 385

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  431 simple_variable: '$' '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    '}'                           shift, and go to state 592


State 386

   73 namespace_name: namespace_name "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)" .

    $default  reduce using rule 73 (namespace_name)


State 387

  222 argument: "... (T_ELLIPSIS)" . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 593
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 388

  217 argument_list: '(' ')' .

    $default  reduce using rule 217 (argument_list)


State 389

  218 argument_list: '(' non_empty_argument_list . ')'
  220 non_empty_argument_list: non_empty_argument_list . ',' argument

    ','  shift, and go to state 594
    ')'  shift, and go to state 595


State 390

  219 non_empty_argument_list: argument .

    $default  reduce using rule 219 (non_empty_argument_list)


State 391

  221 argument: expr .
  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 221 (argument)


State 392

  159 class_declaration_statement: class_modifiers "class (T_CLASS)" @4 . "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' class_statement_list '}'

    "identifier (T_STRING)"  shift, and go to state 596


State 393

  197 if_stmt_without_else: if_stmt_without_else "elseif (T_ELSEIF)" '(' . expr ')' statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 597
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 394

  199 if_stmt: if_stmt_without_else "else (T_ELSE)" statement .

    $default  reduce using rule 199 (if_stmt)


State 395

  201 alt_if_stmt_without_else: alt_if_stmt_without_else "elseif (T_ELSEIF)" '(' . expr ')' ':' inner_statement_list

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 598
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 396

  203 alt_if_stmt: alt_if_stmt_without_else "else (T_ELSE)" ':' . inner_statement_list "endif (T_ENDIF)" ';'

    $default  reduce using rule 114 (inner_statement_list)

    inner_statement_list  go to state 599


State 397

  202 alt_if_stmt: alt_if_stmt_without_else "endif (T_ENDIF)" ';' .

    $default  reduce using rule 202 (alt_if_stmt)


State 398

  153 function_declaration_statement: function returns_ref "identifier (T_STRING)" . '(' parameter_list ')' return_type backup_doc_comment '{' inner_statement_list '}'

    '('  shift, and go to state 600


State 399

  359 expr_without_variable: function returns_ref '(' . parameter_list ')' lexical_vars return_type backup_doc_comment '{' inner_statement_list '}'

    "identifier (T_STRING)"    shift, and go to state 115
    "array (T_ARRAY)"          shift, and go to state 601
    "callable (T_CALLABLE)"    shift, and go to state 602
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    ')'       reduce using rule 205 (parameter_list)
    $default  reduce using rule 210 (optional_type)

    namespace_name            go to state 83
    name                      go to state 603
    parameter_list            go to state 604
    non_empty_parameter_list  go to state 605
    parameter                 go to state 606
    optional_type             go to state 607
    type                      go to state 608


State 400

    2 reserved_non_modifiers: "include (T_INCLUDE)" .

    $default  reduce using rule 2 (reserved_non_modifiers)


State 401

    3 reserved_non_modifiers: "include_once (T_INCLUDE_ONCE)" .

    $default  reduce using rule 3 (reserved_non_modifiers)


State 402

    4 reserved_non_modifiers: "eval (T_EVAL)" .

    $default  reduce using rule 4 (reserved_non_modifiers)


State 403

    5 reserved_non_modifiers: "require (T_REQUIRE)" .

    $default  reduce using rule 5 (reserved_non_modifiers)


State 404

    6 reserved_non_modifiers: "require_once (T_REQUIRE_ONCE)" .

    $default  reduce using rule 6 (reserved_non_modifiers)


State 405

    7 reserved_non_modifiers: "or (T_LOGICAL_OR)" .

    $default  reduce using rule 7 (reserved_non_modifiers)


State 406

    8 reserved_non_modifiers: "xor (T_LOGICAL_XOR)" .

    $default  reduce using rule 8 (reserved_non_modifiers)


State 407

    9 reserved_non_modifiers: "and (T_LOGICAL_AND)" .

    $default  reduce using rule 9 (reserved_non_modifiers)


State 408

   45 reserved_non_modifiers: "print (T_PRINT)" .

    $default  reduce using rule 45 (reserved_non_modifiers)


State 409

   46 reserved_non_modifiers: "yield (T_YIELD)" .

    $default  reduce using rule 46 (reserved_non_modifiers)


State 410

   10 reserved_non_modifiers: "instanceof (T_INSTANCEOF)" .

    $default  reduce using rule 10 (reserved_non_modifiers)


State 411

   11 reserved_non_modifiers: "new (T_NEW)" .

    $default  reduce using rule 11 (reserved_non_modifiers)


State 412

   12 reserved_non_modifiers: "clone (T_CLONE)" .

    $default  reduce using rule 12 (reserved_non_modifiers)


State 413

   15 reserved_non_modifiers: "elseif (T_ELSEIF)" .

    $default  reduce using rule 15 (reserved_non_modifiers)


State 414

   16 reserved_non_modifiers: "else (T_ELSE)" .

    $default  reduce using rule 16 (reserved_non_modifiers)


State 415

   17 reserved_non_modifiers: "endif (T_ENDIF)" .

    $default  reduce using rule 17 (reserved_non_modifiers)


State 416

   62 semi_reserved: "static (T_STATIC)" .

    $default  reduce using rule 62 (semi_reserved)


State 417

   63 semi_reserved: "abstract (T_ABSTRACT)" .

    $default  reduce using rule 63 (semi_reserved)


State 418

   64 semi_reserved: "final (T_FINAL)" .

    $default  reduce using rule 64 (semi_reserved)


State 419

   65 semi_reserved: "private (T_PRIVATE)" .

    $default  reduce using rule 65 (semi_reserved)


State 420

   66 semi_reserved: "protected (T_PROTECTED)" .

    $default  reduce using rule 66 (semi_reserved)


State 421

   67 semi_reserved: "public (T_PUBLIC)" .

    $default  reduce using rule 67 (semi_reserved)


State 422

   68 identifier: "identifier (T_STRING)" .

    $default  reduce using rule 68 (identifier)


State 423

   13 reserved_non_modifiers: "exit (T_EXIT)" .

    $default  reduce using rule 13 (reserved_non_modifiers)


State 424

   14 reserved_non_modifiers: "if (T_IF)" .

    $default  reduce using rule 14 (reserved_non_modifiers)


State 425

   18 reserved_non_modifiers: "echo (T_ECHO)" .

    $default  reduce using rule 18 (reserved_non_modifiers)


State 426

   19 reserved_non_modifiers: "do (T_DO)" .

    $default  reduce using rule 19 (reserved_non_modifiers)


State 427

   20 reserved_non_modifiers: "while (T_WHILE)" .

    $default  reduce using rule 20 (reserved_non_modifiers)


State 428

   21 reserved_non_modifiers: "endwhile (T_ENDWHILE)" .

    $default  reduce using rule 21 (reserved_non_modifiers)


State 429

   22 reserved_non_modifiers: "for (T_FOR)" .

    $default  reduce using rule 22 (reserved_non_modifiers)


State 430

   23 reserved_non_modifiers: "endfor (T_ENDFOR)" .

    $default  reduce using rule 23 (reserved_non_modifiers)


State 431

   24 reserved_non_modifiers: "foreach (T_FOREACH)" .

    $default  reduce using rule 24 (reserved_non_modifiers)


State 432

   25 reserved_non_modifiers: "endforeach (T_ENDFOREACH)" .

    $default  reduce using rule 25 (reserved_non_modifiers)


State 433

   26 reserved_non_modifiers: "declare (T_DECLARE)" .

    $default  reduce using rule 26 (reserved_non_modifiers)


State 434

   27 reserved_non_modifiers: "enddeclare (T_ENDDECLARE)" .

    $default  reduce using rule 27 (reserved_non_modifiers)


State 435

   28 reserved_non_modifiers: "as (T_AS)" .

    $default  reduce using rule 28 (reserved_non_modifiers)


State 436

   48 reserved_non_modifiers: "switch (T_SWITCH)" .

    $default  reduce using rule 48 (reserved_non_modifiers)


State 437

   49 reserved_non_modifiers: "endswitch (T_ENDSWITCH)" .

    $default  reduce using rule 49 (reserved_non_modifiers)


State 438

   50 reserved_non_modifiers: "case (T_CASE)" .

    $default  reduce using rule 50 (reserved_non_modifiers)


State 439

   51 reserved_non_modifiers: "default (T_DEFAULT)" .

    $default  reduce using rule 51 (reserved_non_modifiers)


State 440

   52 reserved_non_modifiers: "break (T_BREAK)" .

    $default  reduce using rule 52 (reserved_non_modifiers)


State 441

   40 reserved_non_modifiers: "continue (T_CONTINUE)" .

    $default  reduce using rule 40 (reserved_non_modifiers)


State 442

   41 reserved_non_modifiers: "goto (T_GOTO)" .

    $default  reduce using rule 41 (reserved_non_modifiers)


State 443

   42 reserved_non_modifiers: "function (T_FUNCTION)" .

    $default  reduce using rule 42 (reserved_non_modifiers)


State 444

   43 reserved_non_modifiers: "const (T_CONST)" .

    $default  reduce using rule 43 (reserved_non_modifiers)


State 445

   44 reserved_non_modifiers: "return (T_RETURN)" .

    $default  reduce using rule 44 (reserved_non_modifiers)


State 446

   29 reserved_non_modifiers: "try (T_TRY)" .

    $default  reduce using rule 29 (reserved_non_modifiers)


State 447

   30 reserved_non_modifiers: "catch (T_CATCH)" .

    $default  reduce using rule 30 (reserved_non_modifiers)


State 448

   31 reserved_non_modifiers: "finally (T_FINALLY)" .

    $default  reduce using rule 31 (reserved_non_modifiers)


State 449

   32 reserved_non_modifiers: "throw (T_THROW)" .

    $default  reduce using rule 32 (reserved_non_modifiers)


State 450

   33 reserved_non_modifiers: "use (T_USE)" .

    $default  reduce using rule 33 (reserved_non_modifiers)


State 451

   34 reserved_non_modifiers: "insteadof (T_INSTEADOF)" .

    $default  reduce using rule 34 (reserved_non_modifiers)


State 452

   35 reserved_non_modifiers: "global (T_GLOBAL)" .

    $default  reduce using rule 35 (reserved_non_modifiers)


State 453

   36 reserved_non_modifiers: "var (T_VAR)" .

    $default  reduce using rule 36 (reserved_non_modifiers)


State 454

   37 reserved_non_modifiers: "unset (T_UNSET)" .

    $default  reduce using rule 37 (reserved_non_modifiers)


State 455

   38 reserved_non_modifiers: "isset (T_ISSET)" .

    $default  reduce using rule 38 (reserved_non_modifiers)


State 456

   39 reserved_non_modifiers: "empty (T_EMPTY)" .

    $default  reduce using rule 39 (reserved_non_modifiers)


State 457

   60 reserved_non_modifiers: "class (T_CLASS)" .

    $default  reduce using rule 60 (reserved_non_modifiers)


State 458

   58 reserved_non_modifiers: "trait (T_TRAIT)" .

    $default  reduce using rule 58 (reserved_non_modifiers)


State 459

   59 reserved_non_modifiers: "interface (T_INTERFACE)" .

    $default  reduce using rule 59 (reserved_non_modifiers)


State 460

   55 reserved_non_modifiers: "extends (T_EXTENDS)" .

    $default  reduce using rule 55 (reserved_non_modifiers)


State 461

   56 reserved_non_modifiers: "implements (T_IMPLEMENTS)" .

    $default  reduce using rule 56 (reserved_non_modifiers)


State 462

   47 reserved_non_modifiers: "list (T_LIST)" .

    $default  reduce using rule 47 (reserved_non_modifiers)


State 463

   53 reserved_non_modifiers: "array (T_ARRAY)" .

    $default  reduce using rule 53 (reserved_non_modifiers)


State 464

   54 reserved_non_modifiers: "callable (T_CALLABLE)" .

    $default  reduce using rule 54 (reserved_non_modifiers)


State 465

   57 reserved_non_modifiers: "namespace (T_NAMESPACE)" .

    $default  reduce using rule 57 (reserved_non_modifiers)


State 466

  442 member_name: '{' . expr '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 609
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 467

   61 semi_reserved: reserved_non_modifiers .

    $default  reduce using rule 61 (semi_reserved)


State 468

   69 identifier: semi_reserved .

    $default  reduce using rule 69 (identifier)


State 469

  406 constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" identifier .
  441 member_name: identifier .

    '('       reduce using rule 441 (member_name)
    $default  reduce using rule 406 (constant)


State 470

  433 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable .
  443 member_name: simple_variable .

    '('       reduce using rule 443 (member_name)
    $default  reduce using rule 433 (static_member)


State 471

  372 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" member_name . argument_list

    '('  shift, and go to state 226

    argument_list  go to state 610


State 472

  423 callable_variable: constant '[' optional_expr . ']'

    ']'  shift, and go to state 611


State 473

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  308                      | expr "or (T_LOGICAL_OR)" expr .
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 308 (expr_without_variable)


State 474

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  310                      | expr "xor (T_LOGICAL_XOR)" expr .
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 310 (expr_without_variable)


State 475

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  309                      | expr "and (T_LOGICAL_AND)" expr .
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 309 (expr_without_variable)


State 476

  340 expr_without_variable: expr '?' ':' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 612
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 477

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  339                      | expr '?' expr . ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    ':'                           shift, and go to state 613
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267


State 478

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  341                      | expr "?? (T_COALESCE)" expr .

    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 341 (expr_without_variable)


State 479

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  306                      | expr "|| (T_BOOLEAN_OR)" expr .
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 306 (expr_without_variable)


State 480

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  307                      | expr "&& (T_BOOLEAN_AND)" expr .
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 307 (expr_without_variable)


State 481

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  311                      | expr '|' expr .
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 311 (expr_without_variable)


State 482

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  313                      | expr '^' expr .
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 313 (expr_without_variable)


State 483

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  312                      | expr '&' expr .
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 312 (expr_without_variable)


State 484

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  329                      | expr "== (T_IS_EQUAL)" expr .
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    "== (T_IS_EQUAL)"           error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "<=> (T_SPACESHIP)"         error (nonassociative)

    $default  reduce using rule 329 (expr_without_variable)


State 485

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  330                      | expr "!= (T_IS_NOT_EQUAL)" expr .
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    "== (T_IS_EQUAL)"           error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "<=> (T_SPACESHIP)"         error (nonassociative)

    $default  reduce using rule 330 (expr_without_variable)


State 486

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  327                      | expr "=== (T_IS_IDENTICAL)" expr .
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    "== (T_IS_EQUAL)"           error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "<=> (T_SPACESHIP)"         error (nonassociative)

    $default  reduce using rule 327 (expr_without_variable)


State 487

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  328                      | expr "!== (T_IS_NOT_IDENTICAL)" expr .
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    "== (T_IS_EQUAL)"           error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "<=> (T_SPACESHIP)"         error (nonassociative)

    $default  reduce using rule 328 (expr_without_variable)


State 488

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  335                      | expr "<=> (T_SPACESHIP)" expr .
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    "== (T_IS_EQUAL)"           error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "<=> (T_SPACESHIP)"         error (nonassociative)

    $default  reduce using rule 335 (expr_without_variable)


State 489

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  331                      | expr '<' expr .
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "<< (T_SL)"                  shift, and go to state 258
    ">> (T_SR)"                  shift, and go to state 259
    '+'                          shift, and go to state 260
    '-'                          shift, and go to state 261
    '.'                          shift, and go to state 262
    '*'                          shift, and go to state 263
    '/'                          shift, and go to state 264
    '%'                          shift, and go to state 265
    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    '<'                           error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 331 (expr_without_variable)


State 490

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  332                      | expr "<= (T_IS_SMALLER_OR_EQUAL)" expr .
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "<< (T_SL)"                  shift, and go to state 258
    ">> (T_SR)"                  shift, and go to state 259
    '+'                          shift, and go to state 260
    '-'                          shift, and go to state 261
    '.'                          shift, and go to state 262
    '*'                          shift, and go to state 263
    '/'                          shift, and go to state 264
    '%'                          shift, and go to state 265
    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    '<'                           error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 332 (expr_without_variable)


State 491

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  333                      | expr '>' expr .
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "<< (T_SL)"                  shift, and go to state 258
    ">> (T_SR)"                  shift, and go to state 259
    '+'                          shift, and go to state 260
    '-'                          shift, and go to state 261
    '.'                          shift, and go to state 262
    '*'                          shift, and go to state 263
    '/'                          shift, and go to state 264
    '%'                          shift, and go to state 265
    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    '<'                           error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 333 (expr_without_variable)


State 492

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  334                      | expr ">= (T_IS_GREATER_OR_EQUAL)" expr .
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "<< (T_SL)"                  shift, and go to state 258
    ">> (T_SR)"                  shift, and go to state 259
    '+'                          shift, and go to state 260
    '-'                          shift, and go to state 261
    '.'                          shift, and go to state 262
    '*'                          shift, and go to state 263
    '/'                          shift, and go to state 264
    '%'                          shift, and go to state 265
    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    '<'                           error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 334 (expr_without_variable)


State 493

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  321                      | expr "<< (T_SL)" expr .
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '+'                          shift, and go to state 260
    '-'                          shift, and go to state 261
    '.'                          shift, and go to state 262
    '*'                          shift, and go to state 263
    '/'                          shift, and go to state 264
    '%'                          shift, and go to state 265
    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    $default  reduce using rule 321 (expr_without_variable)


State 494

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  322                      | expr ">> (T_SR)" expr .
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '+'                          shift, and go to state 260
    '-'                          shift, and go to state 261
    '.'                          shift, and go to state 262
    '*'                          shift, and go to state 263
    '/'                          shift, and go to state 264
    '%'                          shift, and go to state 265
    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    $default  reduce using rule 322 (expr_without_variable)


State 495

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  315                      | expr '+' expr .
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '*'                          shift, and go to state 263
    '/'                          shift, and go to state 264
    '%'                          shift, and go to state 265
    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    $default  reduce using rule 315 (expr_without_variable)


State 496

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  316                      | expr '-' expr .
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '*'                          shift, and go to state 263
    '/'                          shift, and go to state 264
    '%'                          shift, and go to state 265
    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    $default  reduce using rule 316 (expr_without_variable)


State 497

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  314                      | expr '.' expr .
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '*'                          shift, and go to state 263
    '/'                          shift, and go to state 264
    '%'                          shift, and go to state 265
    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    $default  reduce using rule 314 (expr_without_variable)


State 498

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  317                      | expr '*' expr .
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    $default  reduce using rule 317 (expr_without_variable)


State 499

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  319                      | expr '/' expr .
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    $default  reduce using rule 319 (expr_without_variable)


State 500

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  320                      | expr '%' expr .
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "instanceof (T_INSTANCEOF)"  shift, and go to state 266
    "** (T_POW)"                 shift, and go to state 267

    $default  reduce using rule 320 (expr_without_variable)


State 501

  336 expr_without_variable: expr "instanceof (T_INSTANCEOF)" class_name_reference .

    $default  reduce using rule 336 (expr_without_variable)


State 502

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  318                      | expr "** (T_POW)" expr .
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "** (T_POW)"  shift, and go to state 267

    $default  reduce using rule 318 (expr_without_variable)


State 503

  407 constant: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" identifier .
  441 member_name: identifier .

    '('       reduce using rule 441 (member_name)
    $default  reduce using rule 407 (constant)


State 504

  434 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable .
  443 member_name: simple_variable .

    '('       reduce using rule 443 (member_name)
    $default  reduce using rule 434 (static_member)


State 505

  373 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" member_name . argument_list

    '('  shift, and go to state 226

    argument_list  go to state 614


State 506

  422 callable_variable: dereferencable '[' optional_expr . ']'

    ']'  shift, and go to state 615


State 507

  444 property_name: "identifier (T_STRING)" .

    $default  reduce using rule 444 (property_name)


State 508

  445 property_name: '{' . expr '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 616
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 509

  446 property_name: simple_variable .

    $default  reduce using rule 446 (property_name)


State 510

  425 callable_variable: dereferencable "-> (T_OBJECT_OPERATOR)" property_name . argument_list
  429 variable: dereferencable "-> (T_OBJECT_OPERATOR)" property_name .

    '('  shift, and go to state 226

    $default  reduce using rule 429 (variable)

    argument_list  go to state 617


State 511

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  424 callable_variable: dereferencable '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    '}'                           shift, and go to state 618


State 512

  288 expr_without_variable: variable '=' '&' . variable

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    namespace_name         go to state 83
    name                   go to state 84
    function_call          go to state 100
    class_name             go to state 101
    dereferencable_scalar  go to state 132
    constant               go to state 133
    variable_class_name    go to state 106
    dereferencable         go to state 107
    callable_expr          go to state 108
    callable_variable      go to state 109
    variable               go to state 619
    simple_variable        go to state 111
    static_member          go to state 112


State 513

  287 expr_without_variable: variable '=' expr .
  306                      | expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 287 (expr_without_variable)


State 514

  290 expr_without_variable: variable "+= (T_PLUS_EQUAL)" expr .
  306                      | expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 290 (expr_without_variable)


State 515

  291 expr_without_variable: variable "-= (T_MINUS_EQUAL)" expr .
  306                      | expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 291 (expr_without_variable)


State 516

  292 expr_without_variable: variable "*= (T_MUL_EQUAL)" expr .
  306                      | expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 292 (expr_without_variable)


State 517

  294 expr_without_variable: variable "/= (T_DIV_EQUAL)" expr .
  306                      | expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 294 (expr_without_variable)


State 518

  295 expr_without_variable: variable ".= (T_CONCAT_EQUAL)" expr .
  306                      | expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 295 (expr_without_variable)


State 519

  296 expr_without_variable: variable "%= (T_MOD_EQUAL)" expr .
  306                      | expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 296 (expr_without_variable)


State 520

  297 expr_without_variable: variable "&= (T_AND_EQUAL)" expr .
  306                      | expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 297 (expr_without_variable)


State 521

  298 expr_without_variable: variable "|= (T_OR_EQUAL)" expr .
  306                      | expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 298 (expr_without_variable)


State 522

  299 expr_without_variable: variable "^= (T_XOR_EQUAL)" expr .
  306                      | expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 299 (expr_without_variable)


State 523

  300 expr_without_variable: variable "<<= (T_SL_EQUAL)" expr .
  306                      | expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 300 (expr_without_variable)


State 524

  301 expr_without_variable: variable ">>= (T_SR_EQUAL)" expr .
  306                      | expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 301 (expr_without_variable)


State 525

  293 expr_without_variable: variable "**= (T_POW_EQUAL)" expr .
  306                      | expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 293 (expr_without_variable)


State 526

  478 internal_functions_in_yacc: "eval (T_EVAL)" '(' expr ')' .

    $default  reduce using rule 478 (internal_functions_in_yacc)


State 527

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  357                      | "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" expr .

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 357 (expr_without_variable)


State 528

  416 dereferencable: '(' expr ')' .
  419 callable_expr: '(' expr ')' .

    '('       reduce using rule 419 (callable_expr)
    $default  reduce using rule 416 (dereferencable)


State 529

  458 array_pair: expr "=> (T_DOUBLE_ARROW)" '&' . variable

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    namespace_name         go to state 83
    name                   go to state 84
    function_call          go to state 100
    class_name             go to state 101
    dereferencable_scalar  go to state 132
    constant               go to state 133
    variable_class_name    go to state 106
    dereferencable         go to state 107
    callable_expr          go to state 108
    callable_variable      go to state 109
    variable               go to state 620
    simple_variable        go to state 111
    static_member          go to state 112


State 530

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  456 array_pair: expr "=> (T_DOUBLE_ARROW)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 456 (array_pair)


State 531

  454 non_empty_array_pair_list: non_empty_array_pair_list ',' array_pair .

    $default  reduce using rule 454 (non_empty_array_pair_list)


State 532

  283 anonymous_class: "class (T_CLASS)" @8 ctor_arguments . extends_from implements_list backup_doc_comment '{' class_statement_list '}'

    "extends (T_EXTENDS)"  shift, and go to state 571

    $default  reduce using rule 170 (extends_from)

    extends_from  go to state 621


State 533

  439 new_variable: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable .

    $default  reduce using rule 439 (new_variable)


State 534

  436 new_variable: new_variable '[' optional_expr . ']'

    ']'  shift, and go to state 622


State 535

  438 new_variable: new_variable "-> (T_OBJECT_OPERATOR)" property_name .

    $default  reduce using rule 438 (new_variable)


State 536

  440 new_variable: new_variable ":: (T_PAAMAYIM_NEKUDOTAYIM)" simple_variable .

    $default  reduce using rule 440 (new_variable)


State 537

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  437 new_variable: new_variable '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    '}'                           shift, and go to state 623


State 538

  229 static_var: "variable (T_VARIABLE)" '=' expr .
  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 229 (static_var)


State 539

  226 static_var_list: static_var_list ',' static_var .

    $default  reduce using rule 226 (static_var_list)


State 540

  360 expr_without_variable: "static (T_STATIC)" function returns_ref '(' . parameter_list ')' lexical_vars return_type backup_doc_comment '{' inner_statement_list '}'

    "identifier (T_STRING)"    shift, and go to state 115
    "array (T_ARRAY)"          shift, and go to state 601
    "callable (T_CALLABLE)"    shift, and go to state 602
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    ')'       reduce using rule 205 (parameter_list)
    $default  reduce using rule 210 (optional_type)

    namespace_name            go to state 83
    name                      go to state 603
    parameter_list            go to state 624
    non_empty_parameter_list  go to state 605
    parameter                 go to state 606
    optional_type             go to state 607
    type                      go to state 608


State 541

  380 exit_expr: '(' optional_expr ')' .

    $default  reduce using rule 380 (exit_expr)


State 542

  196 if_stmt_without_else: "if (T_IF)" '(' expr ')' . statement
  200 alt_if_stmt_without_else: "if (T_IF)" '(' expr ')' . ':' inner_statement_list

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    ':'                                           shift, and go to state 625
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    statement                   go to state 626
    if_stmt_without_else        go to state 93
    if_stmt                     go to state 94
    alt_if_stmt_without_else    go to state 95
    alt_if_stmt                 go to state 96
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 105
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 543

  275 echo_expr_list: echo_expr_list ',' echo_expr .

    $default  reduce using rule 275 (echo_expr_list)


State 544

  125 statement: "do (T_DO)" statement "while (T_WHILE)" '(' . expr ')' ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 627
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 545

  124 statement: "while (T_WHILE)" '(' expr ')' . while_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    ':'                                           shift, and go to state 628
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    statement                   go to state 629
    while_statement             go to state 630
    if_stmt_without_else        go to state 93
    if_stmt                     go to state 94
    alt_if_stmt_without_else    go to state 95
    alt_if_stmt                 go to state 96
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 105
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 546

  126 statement: "for (T_FOR)" '(' for_exprs ';' . for_exprs ';' for_exprs ')' for_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 278 (for_exprs)

    namespace_name              go to state 83
    name                        go to state 84
    for_exprs                   go to state 631
    non_empty_for_exprs         go to state 317
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 318
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 547

  280 non_empty_for_exprs: non_empty_for_exprs ',' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 632
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 548

  137 statement: "foreach (T_FOREACH)" '(' expr "as (T_AS)" . foreach_variable ')' foreach_statement
  138          | "foreach (T_FOREACH)" '(' expr "as (T_AS)" . foreach_variable "=> (T_DOUBLE_ARROW)" foreach_variable ')' foreach_statement

    '&'                                           shift, and go to state 633
    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "list (T_LIST)"                               shift, and go to state 634
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    namespace_name         go to state 83
    name                   go to state 84
    foreach_variable       go to state 635
    function_call          go to state 100
    class_name             go to state 101
    dereferencable_scalar  go to state 132
    constant               go to state 133
    variable_class_name    go to state 106
    dereferencable         go to state 107
    callable_expr          go to state 108
    callable_variable      go to state 109
    variable               go to state 636
    simple_variable        go to state 111
    static_member          go to state 112


State 549

  140 statement: "declare (T_DECLARE)" '(' const_list ')' . $@3 declare_statement

    $default  reduce using rule 139 ($@3)

    $@3  go to state 637


State 550

  127 statement: "switch (T_SWITCH)" '(' expr ')' . switch_case_list

    ':'  shift, and go to state 638
    '{'  shift, and go to state 639

    switch_case_list  go to state 640


State 551

  274 const_decl: "identifier (T_STRING)" '=' expr .
  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 274 (const_decl)


State 552

  111 const_list: const_list ',' const_decl .

    $default  reduce using rule 111 (const_list)


State 553

  142 statement: "try (T_TRY)" '{' inner_statement_list '}' . catch_list finally_statement

    $default  reduce using rule 146 (catch_list)

    catch_list  go to state 641


State 554

   73 namespace_name: namespace_name "\\ (T_NS_SEPARATOR)" . "identifier (T_STRING)"
   98 mixed_group_use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "\\ (T_NS_SEPARATOR)" . '{' inline_use_declarations '}'

    "identifier (T_STRING)"  shift, and go to state 386
    '{'                      shift, and go to state 642


State 555

  108 unprefixed_use_declaration: namespace_name "as (T_AS)" "identifier (T_STRING)" .

    $default  reduce using rule 108 (unprefixed_use_declaration)


State 556

   97 mixed_group_use_declaration: namespace_name "\\ (T_NS_SEPARATOR)" '{' . inline_use_declarations '}'

    "identifier (T_STRING)"  shift, and go to state 115
    "function (T_FUNCTION)"  shift, and go to state 184
    "const (T_CONST)"        shift, and go to state 185

    namespace_name              go to state 562
    use_type                    go to state 643
    inline_use_declarations     go to state 644
    inline_use_declaration      go to state 645
    unprefixed_use_declaration  go to state 646


State 557

   73 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   96 group_use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name . "\\ (T_NS_SEPARATOR)" '{' unprefixed_use_declarations '}'
  107 unprefixed_use_declaration: namespace_name .
  108                           | namespace_name . "as (T_AS)" "identifier (T_STRING)"

    "as (T_AS)"            shift, and go to state 333
    "\\ (T_NS_SEPARATOR)"  shift, and go to state 647

    $default  reduce using rule 107 (unprefixed_use_declaration)


State 558

   73 namespace_name: namespace_name "\\ (T_NS_SEPARATOR)" . "identifier (T_STRING)"
   95 group_use_declaration: namespace_name "\\ (T_NS_SEPARATOR)" . '{' unprefixed_use_declarations '}'

    "identifier (T_STRING)"  shift, and go to state 386
    '{'                      shift, and go to state 648


State 559

   89 top_statement: "use (T_USE)" use_type group_use_declaration ';' .

    $default  reduce using rule 89 (top_statement)


State 560

   91 top_statement: "use (T_USE)" use_type use_declarations ';' .

    $default  reduce using rule 91 (top_statement)


State 561

  110 use_declaration: "\\ (T_NS_SEPARATOR)" . unprefixed_use_declaration

    "identifier (T_STRING)"  shift, and go to state 115

    namespace_name              go to state 562
    unprefixed_use_declaration  go to state 332


State 562

   73 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  107 unprefixed_use_declaration: namespace_name .
  108                           | namespace_name . "as (T_AS)" "identifier (T_STRING)"

    "as (T_AS)"            shift, and go to state 333
    "\\ (T_NS_SEPARATOR)"  shift, and go to state 225

    $default  reduce using rule 107 (unprefixed_use_declaration)


State 563

  103 use_declarations: use_declarations ',' use_declaration .

    $default  reduce using rule 103 (use_declarations)


State 564

  223 global_var_list: global_var_list ',' global_var .

    $default  reduce using rule 223 (global_var_list)


State 565

  151 unset_variables: unset_variables ',' . unset_variable

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    namespace_name         go to state 83
    name                   go to state 84
    unset_variable         go to state 649
    function_call          go to state 100
    class_name             go to state 101
    dereferencable_scalar  go to state 132
    constant               go to state 133
    variable_class_name    go to state 106
    dereferencable         go to state 107
    callable_expr          go to state 108
    callable_variable      go to state 109
    variable               go to state 346
    simple_variable        go to state 111
    static_member          go to state 112


State 566

  136 statement: "unset (T_UNSET)" '(' unset_variables ')' . ';'

    ';'  shift, and go to state 650


State 567

  482 isset_variables: isset_variables ',' . isset_variable

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 347
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113
    isset_variable              go to state 651


State 568

  474 internal_functions_in_yacc: "isset (T_ISSET)" '(' isset_variables ')' .

    $default  reduce using rule 474 (internal_functions_in_yacc)


State 569

  475 internal_functions_in_yacc: "empty (T_EMPTY)" '(' expr ')' .

    $default  reduce using rule 475 (internal_functions_in_yacc)


State 570

   82 top_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';' .

    $default  reduce using rule 82 (top_statement)


State 571

  171 extends_from: "extends (T_EXTENDS)" . name

    "identifier (T_STRING)"    shift, and go to state 115
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    namespace_name  go to state 83
    name            go to state 652


State 572

  161 class_declaration_statement: "class (T_CLASS)" @5 "identifier (T_STRING)" extends_from . implements_list backup_doc_comment '{' class_statement_list '}'

    "implements (T_IMPLEMENTS)"  shift, and go to state 653

    $default  reduce using rule 174 (implements_list)

    implements_list  go to state 654


State 573

  167 trait_declaration_statement: "trait (T_TRAIT)" @6 "identifier (T_STRING)" backup_doc_comment . '{' class_statement_list '}'

    '{'  shift, and go to state 655


State 574

  173 interface_extends_list: "extends (T_EXTENDS)" . name_list

    "identifier (T_STRING)"    shift, and go to state 115
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    namespace_name  go to state 83
    name            go to state 656
    name_list       go to state 657


State 575

  169 interface_declaration_statement: "interface (T_INTERFACE)" @7 "identifier (T_STRING)" interface_extends_list . backup_doc_comment '{' class_statement_list '}'

    $default  reduce using rule 362 (backup_doc_comment)

    backup_doc_comment  go to state 658


State 576

  450 assignment_list_element: "list (T_LIST)" '(' . assignment_list ')'

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "list (T_LIST)"                               shift, and go to state 355
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    $default  reduce using rule 451 (assignment_list_element)

    namespace_name           go to state 83
    name                     go to state 84
    function_call            go to state 100
    class_name               go to state 101
    dereferencable_scalar    go to state 132
    constant                 go to state 133
    variable_class_name      go to state 106
    dereferencable           go to state 107
    callable_expr            go to state 108
    callable_variable        go to state 109
    variable                 go to state 356
    simple_variable          go to state 111
    static_member            go to state 112
    assignment_list          go to state 659
    assignment_list_element  go to state 358


State 577

  447 assignment_list: assignment_list ',' . assignment_list_element

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "list (T_LIST)"                               shift, and go to state 355
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    $default  reduce using rule 451 (assignment_list_element)

    namespace_name           go to state 83
    name                     go to state 84
    function_call            go to state 100
    class_name               go to state 101
    dereferencable_scalar    go to state 132
    constant                 go to state 133
    variable_class_name      go to state 106
    dereferencable           go to state 107
    callable_expr            go to state 108
    callable_variable        go to state 109
    variable                 go to state 356
    simple_variable          go to state 111
    static_member            go to state 112
    assignment_list_element  go to state 660


State 578

  286 expr_without_variable: "list (T_LIST)" '(' assignment_list ')' . '=' expr

    '='  shift, and go to state 661


State 579

  386 dereferencable_scalar: "array (T_ARRAY)" '(' array_pair_list ')' .

    $default  reduce using rule 386 (dereferencable_scalar)


State 580

  471 encaps_var_offset: "identifier (T_STRING)" .

    $default  reduce using rule 471 (encaps_var_offset)


State 581

  473 encaps_var_offset: "variable (T_VARIABLE)" .

    $default  reduce using rule 473 (encaps_var_offset)


State 582

  472 encaps_var_offset: "number (T_NUM_STRING)" .

    $default  reduce using rule 472 (encaps_var_offset)


State 583

  465 encaps_var: "variable (T_VARIABLE)" '[' encaps_var_offset . ']'

    ']'  shift, and go to state 662


State 584

  466 encaps_var: "variable (T_VARIABLE)" "-> (T_OBJECT_OPERATOR)" "identifier (T_STRING)" .

    $default  reduce using rule 466 (encaps_var)


State 585

  469 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' . expr ']' '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 663
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 586

  468 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '}' .

    $default  reduce using rule 468 (encaps_var)


State 587

  467 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" expr '}' .

    $default  reduce using rule 467 (encaps_var)


State 588

  470 encaps_var: "{$ (T_CURLY_OPEN)" variable '}' .

    $default  reduce using rule 470 (encaps_var)


State 589

   85 top_statement: "namespace (T_NAMESPACE)" namespace_name $@1 '{' . top_statement_list '}'

    $default  reduce using rule 71 (top_statement_list)

    top_statement_list  go to state 664


State 590

   70 top_statement_list: top_statement_list . top_statement
   87 top_statement: "namespace (T_NAMESPACE)" $@2 '{' top_statement_list . '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "const (T_CONST)"                             shift, and go to state 51
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "use (T_USE)"                                 shift, and go to state 55
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 60
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 74
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '}'                                           shift, and go to state 665
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    top_statement                    go to state 85
    statement                        go to state 86
    function_declaration_statement   go to state 87
    class_declaration_statement      go to state 88
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 91
    interface_declaration_statement  go to state 92
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 591

  120 inner_statement: "__halt_compiler (T_HALT_COMPILER)" '(' . ')' ';'

    ')'  shift, and go to state 666


State 592

  431 simple_variable: '$' '{' expr '}' .

    $default  reduce using rule 431 (simple_variable)


State 593

  222 argument: "... (T_ELLIPSIS)" expr .
  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 222 (argument)


State 594

  220 non_empty_argument_list: non_empty_argument_list ',' . argument

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    "... (T_ELLIPSIS)"                            shift, and go to state 387
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    argument                    go to state 667
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 391
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 595

  218 argument_list: '(' non_empty_argument_list ')' .

    $default  reduce using rule 218 (argument_list)


State 596

  159 class_declaration_statement: class_modifiers "class (T_CLASS)" @4 "identifier (T_STRING)" . extends_from implements_list backup_doc_comment '{' class_statement_list '}'

    "extends (T_EXTENDS)"  shift, and go to state 571

    $default  reduce using rule 170 (extends_from)

    extends_from  go to state 668


State 597

  197 if_stmt_without_else: if_stmt_without_else "elseif (T_ELSEIF)" '(' expr . ')' statement
  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ')'                           shift, and go to state 669


State 598

  201 alt_if_stmt_without_else: alt_if_stmt_without_else "elseif (T_ELSEIF)" '(' expr . ')' ':' inner_statement_list
  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ')'                           shift, and go to state 670


State 599

  113 inner_statement_list: inner_statement_list . inner_statement
  203 alt_if_stmt: alt_if_stmt_without_else "else (T_ELSE)" ':' inner_statement_list . "endif (T_ENDIF)" ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "endif (T_ENDIF)"                             shift, and go to state 671
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 600

  153 function_declaration_statement: function returns_ref "identifier (T_STRING)" '(' . parameter_list ')' return_type backup_doc_comment '{' inner_statement_list '}'

    "identifier (T_STRING)"    shift, and go to state 115
    "array (T_ARRAY)"          shift, and go to state 601
    "callable (T_CALLABLE)"    shift, and go to state 602
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    ')'       reduce using rule 205 (parameter_list)
    $default  reduce using rule 210 (optional_type)

    namespace_name            go to state 83
    name                      go to state 603
    parameter_list            go to state 672
    non_empty_parameter_list  go to state 605
    parameter                 go to state 606
    optional_type             go to state 607
    type                      go to state 608


State 601

  212 type: "array (T_ARRAY)" .

    $default  reduce using rule 212 (type)


State 602

  213 type: "callable (T_CALLABLE)" .

    $default  reduce using rule 213 (type)


State 603

  214 type: name .

    $default  reduce using rule 214 (type)


State 604

  359 expr_without_variable: function returns_ref '(' parameter_list . ')' lexical_vars return_type backup_doc_comment '{' inner_statement_list '}'

    ')'  shift, and go to state 673


State 605

  204 parameter_list: non_empty_parameter_list .
  207 non_empty_parameter_list: non_empty_parameter_list . ',' parameter

    ','  shift, and go to state 674

    $default  reduce using rule 204 (parameter_list)


State 606

  206 non_empty_parameter_list: parameter .

    $default  reduce using rule 206 (non_empty_parameter_list)


State 607

  208 parameter: optional_type . is_reference is_variadic "variable (T_VARIABLE)"
  209          | optional_type . is_reference is_variadic "variable (T_VARIABLE)" '=' expr

    '&'  shift, and go to state 675

    $default  reduce using rule 154 (is_reference)

    is_reference  go to state 676


State 608

  211 optional_type: type .

    $default  reduce using rule 211 (optional_type)


State 609

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  442 member_name: '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    '}'                           shift, and go to state 677


State 610

  372 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" member_name argument_list .

    $default  reduce using rule 372 (function_call)


State 611

  423 callable_variable: constant '[' optional_expr ']' .

    $default  reduce using rule 423 (callable_variable)


State 612

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  340                      | expr '?' ':' expr .
  341                      | expr . "?? (T_COALESCE)" expr

    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 340 (expr_without_variable)


State 613

  339 expr_without_variable: expr '?' expr ':' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 678
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 614

  373 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" member_name argument_list .

    $default  reduce using rule 373 (function_call)


State 615

  422 callable_variable: dereferencable '[' optional_expr ']' .

    $default  reduce using rule 422 (callable_variable)


State 616

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  445 property_name: '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    '}'                           shift, and go to state 679


State 617

  425 callable_variable: dereferencable "-> (T_OBJECT_OPERATOR)" property_name argument_list .

    $default  reduce using rule 425 (callable_variable)


State 618

  424 callable_variable: dereferencable '{' expr '}' .

    $default  reduce using rule 424 (callable_variable)


State 619

  288 expr_without_variable: variable '=' '&' variable .
  415 dereferencable: variable .

    '['                            reduce using rule 415 (dereferencable)
    "-> (T_OBJECT_OPERATOR)"       reduce using rule 415 (dereferencable)
    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 415 (dereferencable)
    '{'                            reduce using rule 415 (dereferencable)
    $default                       reduce using rule 288 (expr_without_variable)


State 620

  415 dereferencable: variable .
  458 array_pair: expr "=> (T_DOUBLE_ARROW)" '&' variable .

    ','       reduce using rule 458 (array_pair)
    ')'       reduce using rule 458 (array_pair)
    ']'       reduce using rule 458 (array_pair)
    $default  reduce using rule 415 (dereferencable)


State 621

  283 anonymous_class: "class (T_CLASS)" @8 ctor_arguments extends_from . implements_list backup_doc_comment '{' class_statement_list '}'

    "implements (T_IMPLEMENTS)"  shift, and go to state 653

    $default  reduce using rule 174 (implements_list)

    implements_list  go to state 680


State 622

  436 new_variable: new_variable '[' optional_expr ']' .

    $default  reduce using rule 436 (new_variable)


State 623

  437 new_variable: new_variable '{' expr '}' .

    $default  reduce using rule 437 (new_variable)


State 624

  360 expr_without_variable: "static (T_STATIC)" function returns_ref '(' parameter_list . ')' lexical_vars return_type backup_doc_comment '{' inner_statement_list '}'

    ')'  shift, and go to state 681


State 625

  200 alt_if_stmt_without_else: "if (T_IF)" '(' expr ')' ':' . inner_statement_list

    $default  reduce using rule 114 (inner_statement_list)

    inner_statement_list  go to state 682


State 626

  196 if_stmt_without_else: "if (T_IF)" '(' expr ')' statement .

    $default  reduce using rule 196 (if_stmt_without_else)


State 627

  125 statement: "do (T_DO)" statement "while (T_WHILE)" '(' expr . ')' ';'
  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ')'                           shift, and go to state 683


State 628

  195 while_statement: ':' . inner_statement_list "endwhile (T_ENDWHILE)" ';'

    $default  reduce using rule 114 (inner_statement_list)

    inner_statement_list  go to state 684


State 629

  194 while_statement: statement .

    $default  reduce using rule 194 (while_statement)


State 630

  124 statement: "while (T_WHILE)" '(' expr ')' while_statement .

    $default  reduce using rule 124 (statement)


State 631

  126 statement: "for (T_FOR)" '(' for_exprs ';' for_exprs . ';' for_exprs ')' for_statement

    ';'  shift, and go to state 685


State 632

  280 non_empty_for_exprs: non_empty_for_exprs ',' expr .
  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 280 (non_empty_for_exprs)


State 633

  177 foreach_variable: '&' . variable

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    namespace_name         go to state 83
    name                   go to state 84
    function_call          go to state 100
    class_name             go to state 101
    dereferencable_scalar  go to state 132
    constant               go to state 133
    variable_class_name    go to state 106
    dereferencable         go to state 107
    callable_expr          go to state 108
    callable_variable      go to state 109
    variable               go to state 686
    simple_variable        go to state 111
    static_member          go to state 112


State 634

  178 foreach_variable: "list (T_LIST)" . '(' assignment_list ')'

    '('  shift, and go to state 687


State 635

  137 statement: "foreach (T_FOREACH)" '(' expr "as (T_AS)" foreach_variable . ')' foreach_statement
  138          | "foreach (T_FOREACH)" '(' expr "as (T_AS)" foreach_variable . "=> (T_DOUBLE_ARROW)" foreach_variable ')' foreach_statement

    "=> (T_DOUBLE_ARROW)"  shift, and go to state 688
    ')'                    shift, and go to state 689


State 636

  176 foreach_variable: variable .
  415 dereferencable: variable .

    "=> (T_DOUBLE_ARROW)"  reduce using rule 176 (foreach_variable)
    ')'                    reduce using rule 176 (foreach_variable)
    $default               reduce using rule 415 (dereferencable)


State 637

  140 statement: "declare (T_DECLARE)" '(' const_list ')' $@3 . declare_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    ':'                                           shift, and go to state 690
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    statement                   go to state 691
    declare_statement           go to state 692
    if_stmt_without_else        go to state 93
    if_stmt                     go to state 94
    alt_if_stmt_without_else    go to state 95
    alt_if_stmt                 go to state 96
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 105
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 638

  187 switch_case_list: ':' . case_list "endswitch (T_ENDSWITCH)" ';'
  188                 | ':' . ';' case_list "endswitch (T_ENDSWITCH)" ';'

    ';'  shift, and go to state 693

    $default  reduce using rule 189 (case_list)

    case_list  go to state 694


State 639

  185 switch_case_list: '{' . case_list '}'
  186                 | '{' . ';' case_list '}'

    ';'  shift, and go to state 695

    $default  reduce using rule 189 (case_list)

    case_list  go to state 696


State 640

  127 statement: "switch (T_SWITCH)" '(' expr ')' switch_case_list .

    $default  reduce using rule 127 (statement)


State 641

  142 statement: "try (T_TRY)" '{' inner_statement_list '}' catch_list . finally_statement
  147 catch_list: catch_list . "catch (T_CATCH)" '(' name "variable (T_VARIABLE)" ')' '{' inner_statement_list '}'

    "catch (T_CATCH)"      shift, and go to state 697
    "finally (T_FINALLY)"  shift, and go to state 698

    $default  reduce using rule 148 (finally_statement)

    finally_statement  go to state 699


State 642

   98 mixed_group_use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "\\ (T_NS_SEPARATOR)" '{' . inline_use_declarations '}'

    "identifier (T_STRING)"  shift, and go to state 115
    "function (T_FUNCTION)"  shift, and go to state 184
    "const (T_CONST)"        shift, and go to state 185

    namespace_name              go to state 562
    use_type                    go to state 643
    inline_use_declarations     go to state 700
    inline_use_declaration      go to state 645
    unprefixed_use_declaration  go to state 646


State 643

  106 inline_use_declaration: use_type . unprefixed_use_declaration

    "identifier (T_STRING)"  shift, and go to state 115

    namespace_name              go to state 562
    unprefixed_use_declaration  go to state 701


State 644

   97 mixed_group_use_declaration: namespace_name "\\ (T_NS_SEPARATOR)" '{' inline_use_declarations . '}'
   99 inline_use_declarations: inline_use_declarations . ',' inline_use_declaration

    ','  shift, and go to state 702
    '}'  shift, and go to state 703


State 645

  100 inline_use_declarations: inline_use_declaration .

    $default  reduce using rule 100 (inline_use_declarations)


State 646

  105 inline_use_declaration: unprefixed_use_declaration .

    $default  reduce using rule 105 (inline_use_declaration)


State 647

   73 namespace_name: namespace_name "\\ (T_NS_SEPARATOR)" . "identifier (T_STRING)"
   96 group_use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "\\ (T_NS_SEPARATOR)" . '{' unprefixed_use_declarations '}'

    "identifier (T_STRING)"  shift, and go to state 386
    '{'                      shift, and go to state 704


State 648

   95 group_use_declaration: namespace_name "\\ (T_NS_SEPARATOR)" '{' . unprefixed_use_declarations '}'

    "identifier (T_STRING)"  shift, and go to state 115

    namespace_name               go to state 562
    unprefixed_use_declarations  go to state 705
    unprefixed_use_declaration   go to state 706


State 649

  151 unset_variables: unset_variables ',' unset_variable .

    $default  reduce using rule 151 (unset_variables)


State 650

  136 statement: "unset (T_UNSET)" '(' unset_variables ')' ';' .

    $default  reduce using rule 136 (statement)


State 651

  482 isset_variables: isset_variables ',' isset_variable .

    $default  reduce using rule 482 (isset_variables)


State 652

  171 extends_from: "extends (T_EXTENDS)" name .

    $default  reduce using rule 171 (extends_from)


State 653

  175 implements_list: "implements (T_IMPLEMENTS)" . name_list

    "identifier (T_STRING)"    shift, and go to state 115
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    namespace_name  go to state 83
    name            go to state 656
    name_list       go to state 707


State 654

  161 class_declaration_statement: "class (T_CLASS)" @5 "identifier (T_STRING)" extends_from implements_list . backup_doc_comment '{' class_statement_list '}'

    $default  reduce using rule 362 (backup_doc_comment)

    backup_doc_comment  go to state 708


State 655

  167 trait_declaration_statement: "trait (T_TRAIT)" @6 "identifier (T_STRING)" backup_doc_comment '{' . class_statement_list '}'

    $default  reduce using rule 231 (class_statement_list)

    class_statement_list  go to state 709


State 656

  236 name_list: name .

    $default  reduce using rule 236 (name_list)


State 657

  173 interface_extends_list: "extends (T_EXTENDS)" name_list .
  237 name_list: name_list . ',' name

    ','  shift, and go to state 710

    $default  reduce using rule 173 (interface_extends_list)


State 658

  169 interface_declaration_statement: "interface (T_INTERFACE)" @7 "identifier (T_STRING)" interface_extends_list backup_doc_comment . '{' class_statement_list '}'

    '{'  shift, and go to state 711


State 659

  447 assignment_list: assignment_list . ',' assignment_list_element
  450 assignment_list_element: "list (T_LIST)" '(' assignment_list . ')'

    ','  shift, and go to state 577
    ')'  shift, and go to state 712


State 660

  447 assignment_list: assignment_list ',' assignment_list_element .

    $default  reduce using rule 447 (assignment_list)


State 661

  286 expr_without_variable: "list (T_LIST)" '(' assignment_list ')' '=' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 713
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 662

  465 encaps_var: "variable (T_VARIABLE)" '[' encaps_var_offset ']' .

    $default  reduce using rule 465 (encaps_var)


State 663

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr
  469 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr . ']' '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ']'                           shift, and go to state 714


State 664

   70 top_statement_list: top_statement_list . top_statement
   85 top_statement: "namespace (T_NAMESPACE)" namespace_name $@1 '{' top_statement_list . '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "const (T_CONST)"                             shift, and go to state 51
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "use (T_USE)"                                 shift, and go to state 55
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 60
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 74
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '}'                                           shift, and go to state 715
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    top_statement                    go to state 85
    statement                        go to state 86
    function_declaration_statement   go to state 87
    class_declaration_statement      go to state 88
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 91
    interface_declaration_statement  go to state 92
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 665

   87 top_statement: "namespace (T_NAMESPACE)" $@2 '{' top_statement_list '}' .

    $default  reduce using rule 87 (top_statement)


State 666

  120 inner_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' . ';'

    ';'  shift, and go to state 716


State 667

  220 non_empty_argument_list: non_empty_argument_list ',' argument .

    $default  reduce using rule 220 (non_empty_argument_list)


State 668

  159 class_declaration_statement: class_modifiers "class (T_CLASS)" @4 "identifier (T_STRING)" extends_from . implements_list backup_doc_comment '{' class_statement_list '}'

    "implements (T_IMPLEMENTS)"  shift, and go to state 653

    $default  reduce using rule 174 (implements_list)

    implements_list  go to state 717


State 669

  197 if_stmt_without_else: if_stmt_without_else "elseif (T_ELSEIF)" '(' expr ')' . statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    statement                   go to state 718
    if_stmt_without_else        go to state 93
    if_stmt                     go to state 94
    alt_if_stmt_without_else    go to state 95
    alt_if_stmt                 go to state 96
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 105
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 670

  201 alt_if_stmt_without_else: alt_if_stmt_without_else "elseif (T_ELSEIF)" '(' expr ')' . ':' inner_statement_list

    ':'  shift, and go to state 719


State 671

  203 alt_if_stmt: alt_if_stmt_without_else "else (T_ELSE)" ':' inner_statement_list "endif (T_ENDIF)" . ';'

    ';'  shift, and go to state 720


State 672

  153 function_declaration_statement: function returns_ref "identifier (T_STRING)" '(' parameter_list . ')' return_type backup_doc_comment '{' inner_statement_list '}'

    ')'  shift, and go to state 721


State 673

  359 expr_without_variable: function returns_ref '(' parameter_list ')' . lexical_vars return_type backup_doc_comment '{' inner_statement_list '}'

    "use (T_USE)"  shift, and go to state 722

    $default  reduce using rule 365 (lexical_vars)

    lexical_vars  go to state 723


State 674

  207 non_empty_parameter_list: non_empty_parameter_list ',' . parameter

    "identifier (T_STRING)"    shift, and go to state 115
    "array (T_ARRAY)"          shift, and go to state 601
    "callable (T_CALLABLE)"    shift, and go to state 602
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    $default  reduce using rule 210 (optional_type)

    namespace_name  go to state 83
    name            go to state 603
    parameter       go to state 724
    optional_type   go to state 607
    type            go to state 608


State 675

  155 is_reference: '&' .

    $default  reduce using rule 155 (is_reference)


State 676

  208 parameter: optional_type is_reference . is_variadic "variable (T_VARIABLE)"
  209          | optional_type is_reference . is_variadic "variable (T_VARIABLE)" '=' expr

    "... (T_ELLIPSIS)"  shift, and go to state 725

    $default  reduce using rule 156 (is_variadic)

    is_variadic  go to state 726


State 677

  442 member_name: '{' expr '}' .

    $default  reduce using rule 442 (member_name)


State 678

  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  339                      | expr '?' expr ':' expr .
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 339 (expr_without_variable)


State 679

  445 property_name: '{' expr '}' .

    $default  reduce using rule 445 (property_name)


State 680

  283 anonymous_class: "class (T_CLASS)" @8 ctor_arguments extends_from implements_list . backup_doc_comment '{' class_statement_list '}'

    $default  reduce using rule 362 (backup_doc_comment)

    backup_doc_comment  go to state 727


State 681

  360 expr_without_variable: "static (T_STATIC)" function returns_ref '(' parameter_list ')' . lexical_vars return_type backup_doc_comment '{' inner_statement_list '}'

    "use (T_USE)"  shift, and go to state 722

    $default  reduce using rule 365 (lexical_vars)

    lexical_vars  go to state 728


State 682

  113 inner_statement_list: inner_statement_list . inner_statement
  200 alt_if_stmt_without_else: "if (T_IF)" '(' expr ')' ':' inner_statement_list .

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 200 (alt_if_stmt_without_else)

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 683

  125 statement: "do (T_DO)" statement "while (T_WHILE)" '(' expr ')' . ';'

    ';'  shift, and go to state 729


State 684

  113 inner_statement_list: inner_statement_list . inner_statement
  195 while_statement: ':' inner_statement_list . "endwhile (T_ENDWHILE)" ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "endwhile (T_ENDWHILE)"                       shift, and go to state 730
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 685

  126 statement: "for (T_FOR)" '(' for_exprs ';' for_exprs ';' . for_exprs ')' for_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 278 (for_exprs)

    namespace_name              go to state 83
    name                        go to state 84
    for_exprs                   go to state 731
    non_empty_for_exprs         go to state 317
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 318
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 686

  177 foreach_variable: '&' variable .
  415 dereferencable: variable .

    "=> (T_DOUBLE_ARROW)"  reduce using rule 177 (foreach_variable)
    ')'                    reduce using rule 177 (foreach_variable)
    $default               reduce using rule 415 (dereferencable)


State 687

  178 foreach_variable: "list (T_LIST)" '(' . assignment_list ')'

    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "list (T_LIST)"                               shift, and go to state 355
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    $default  reduce using rule 451 (assignment_list_element)

    namespace_name           go to state 83
    name                     go to state 84
    function_call            go to state 100
    class_name               go to state 101
    dereferencable_scalar    go to state 132
    constant                 go to state 133
    variable_class_name      go to state 106
    dereferencable           go to state 107
    callable_expr            go to state 108
    callable_variable        go to state 109
    variable                 go to state 356
    simple_variable          go to state 111
    static_member            go to state 112
    assignment_list          go to state 732
    assignment_list_element  go to state 358


State 688

  138 statement: "foreach (T_FOREACH)" '(' expr "as (T_AS)" foreach_variable "=> (T_DOUBLE_ARROW)" . foreach_variable ')' foreach_statement

    '&'                                           shift, and go to state 633
    '['                                           shift, and go to state 26
    "static (T_STATIC)"                           shift, and go to state 130
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "list (T_LIST)"                               shift, and go to state 634
    "array (T_ARRAY)"                             shift, and go to state 65
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 131
    '$'                                           shift, and go to state 82

    namespace_name         go to state 83
    name                   go to state 84
    foreach_variable       go to state 733
    function_call          go to state 100
    class_name             go to state 101
    dereferencable_scalar  go to state 132
    constant               go to state 133
    variable_class_name    go to state 106
    dereferencable         go to state 107
    callable_expr          go to state 108
    callable_variable      go to state 109
    variable               go to state 636
    simple_variable        go to state 111
    static_member          go to state 112


State 689

  137 statement: "foreach (T_FOREACH)" '(' expr "as (T_AS)" foreach_variable ')' . foreach_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    ':'                                           shift, and go to state 734
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    statement                   go to state 735
    foreach_statement           go to state 736
    if_stmt_without_else        go to state 93
    if_stmt                     go to state 94
    alt_if_stmt_without_else    go to state 95
    alt_if_stmt                 go to state 96
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 105
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 690

  184 declare_statement: ':' . inner_statement_list "enddeclare (T_ENDDECLARE)" ';'

    $default  reduce using rule 114 (inner_statement_list)

    inner_statement_list  go to state 737


State 691

  183 declare_statement: statement .

    $default  reduce using rule 183 (declare_statement)


State 692

  140 statement: "declare (T_DECLARE)" '(' const_list ')' $@3 declare_statement .

    $default  reduce using rule 140 (statement)


State 693

  188 switch_case_list: ':' ';' . case_list "endswitch (T_ENDSWITCH)" ';'

    $default  reduce using rule 189 (case_list)

    case_list  go to state 738


State 694

  187 switch_case_list: ':' case_list . "endswitch (T_ENDSWITCH)" ';'
  190 case_list: case_list . "case (T_CASE)" expr case_separator inner_statement_list
  191          | case_list . "default (T_DEFAULT)" case_separator inner_statement_list

    "endswitch (T_ENDSWITCH)"  shift, and go to state 739
    "case (T_CASE)"            shift, and go to state 740
    "default (T_DEFAULT)"      shift, and go to state 741


State 695

  186 switch_case_list: '{' ';' . case_list '}'

    $default  reduce using rule 189 (case_list)

    case_list  go to state 742


State 696

  185 switch_case_list: '{' case_list . '}'
  190 case_list: case_list . "case (T_CASE)" expr case_separator inner_statement_list
  191          | case_list . "default (T_DEFAULT)" case_separator inner_statement_list

    "case (T_CASE)"        shift, and go to state 740
    "default (T_DEFAULT)"  shift, and go to state 741
    '}'                    shift, and go to state 743


State 697

  147 catch_list: catch_list "catch (T_CATCH)" . '(' name "variable (T_VARIABLE)" ')' '{' inner_statement_list '}'

    '('  shift, and go to state 744


State 698

  149 finally_statement: "finally (T_FINALLY)" . '{' inner_statement_list '}'

    '{'  shift, and go to state 745


State 699

  142 statement: "try (T_TRY)" '{' inner_statement_list '}' catch_list finally_statement .

    $default  reduce using rule 142 (statement)


State 700

   98 mixed_group_use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "\\ (T_NS_SEPARATOR)" '{' inline_use_declarations . '}'
   99 inline_use_declarations: inline_use_declarations . ',' inline_use_declaration

    ','  shift, and go to state 702
    '}'  shift, and go to state 746


State 701

  106 inline_use_declaration: use_type unprefixed_use_declaration .

    $default  reduce using rule 106 (inline_use_declaration)


State 702

   99 inline_use_declarations: inline_use_declarations ',' . inline_use_declaration

    "identifier (T_STRING)"  shift, and go to state 115
    "function (T_FUNCTION)"  shift, and go to state 184
    "const (T_CONST)"        shift, and go to state 185

    namespace_name              go to state 562
    use_type                    go to state 643
    inline_use_declaration      go to state 747
    unprefixed_use_declaration  go to state 646


State 703

   97 mixed_group_use_declaration: namespace_name "\\ (T_NS_SEPARATOR)" '{' inline_use_declarations '}' .

    $default  reduce using rule 97 (mixed_group_use_declaration)


State 704

   96 group_use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "\\ (T_NS_SEPARATOR)" '{' . unprefixed_use_declarations '}'

    "identifier (T_STRING)"  shift, and go to state 115

    namespace_name               go to state 562
    unprefixed_use_declarations  go to state 748
    unprefixed_use_declaration   go to state 706


State 705

   95 group_use_declaration: namespace_name "\\ (T_NS_SEPARATOR)" '{' unprefixed_use_declarations . '}'
  101 unprefixed_use_declarations: unprefixed_use_declarations . ',' unprefixed_use_declaration

    ','  shift, and go to state 749
    '}'  shift, and go to state 750


State 706

  102 unprefixed_use_declarations: unprefixed_use_declaration .

    $default  reduce using rule 102 (unprefixed_use_declarations)


State 707

  175 implements_list: "implements (T_IMPLEMENTS)" name_list .
  237 name_list: name_list . ',' name

    ','  shift, and go to state 710

    $default  reduce using rule 175 (implements_list)


State 708

  161 class_declaration_statement: "class (T_CLASS)" @5 "identifier (T_STRING)" extends_from implements_list backup_doc_comment . '{' class_statement_list '}'

    '{'  shift, and go to state 751


State 709

  167 trait_declaration_statement: "trait (T_TRAIT)" @6 "identifier (T_STRING)" backup_doc_comment '{' class_statement_list . '}'
  230 class_statement_list: class_statement_list . class_statement

    "static (T_STATIC)"        shift, and go to state 752
    "abstract (T_ABSTRACT)"    shift, and go to state 753
    "final (T_FINAL)"          shift, and go to state 754
    "private (T_PRIVATE)"      shift, and go to state 755
    "protected (T_PROTECTED)"  shift, and go to state 756
    "public (T_PUBLIC)"        shift, and go to state 757
    "const (T_CONST)"          shift, and go to state 758
    "use (T_USE)"              shift, and go to state 759
    "var (T_VAR)"              shift, and go to state 760
    '}'                        shift, and go to state 761

    $default  reduce using rule 257 (method_modifiers)

    class_statement             go to state 762
    variable_modifiers          go to state 763
    method_modifiers            go to state 764
    non_empty_member_modifiers  go to state 765
    member_modifier             go to state 766


State 710

  237 name_list: name_list ',' . name

    "identifier (T_STRING)"    shift, and go to state 115
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    namespace_name  go to state 83
    name            go to state 767


State 711

  169 interface_declaration_statement: "interface (T_INTERFACE)" @7 "identifier (T_STRING)" interface_extends_list backup_doc_comment '{' . class_statement_list '}'

    $default  reduce using rule 231 (class_statement_list)

    class_statement_list  go to state 768


State 712

  450 assignment_list_element: "list (T_LIST)" '(' assignment_list ')' .

    $default  reduce using rule 450 (assignment_list_element)


State 713

  286 expr_without_variable: "list (T_LIST)" '(' assignment_list ')' '=' expr .
  306                      | expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 286 (expr_without_variable)


State 714

  469 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr ']' . '}'

    '}'  shift, and go to state 769


State 715

   85 top_statement: "namespace (T_NAMESPACE)" namespace_name $@1 '{' top_statement_list '}' .

    $default  reduce using rule 85 (top_statement)


State 716

  120 inner_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';' .

    $default  reduce using rule 120 (inner_statement)


State 717

  159 class_declaration_statement: class_modifiers "class (T_CLASS)" @4 "identifier (T_STRING)" extends_from implements_list . backup_doc_comment '{' class_statement_list '}'

    $default  reduce using rule 362 (backup_doc_comment)

    backup_doc_comment  go to state 770


State 718

  197 if_stmt_without_else: if_stmt_without_else "elseif (T_ELSEIF)" '(' expr ')' statement .

    $default  reduce using rule 197 (if_stmt_without_else)


State 719

  201 alt_if_stmt_without_else: alt_if_stmt_without_else "elseif (T_ELSEIF)" '(' expr ')' ':' . inner_statement_list

    $default  reduce using rule 114 (inner_statement_list)

    inner_statement_list  go to state 771


State 720

  203 alt_if_stmt: alt_if_stmt_without_else "else (T_ELSE)" ':' inner_statement_list "endif (T_ENDIF)" ';' .

    $default  reduce using rule 203 (alt_if_stmt)


State 721

  153 function_declaration_statement: function returns_ref "identifier (T_STRING)" '(' parameter_list ')' . return_type backup_doc_comment '{' inner_statement_list '}'

    ':'  shift, and go to state 772

    $default  reduce using rule 215 (return_type)

    return_type  go to state 773


State 722

  366 lexical_vars: "use (T_USE)" . '(' lexical_var_list ')'

    '('  shift, and go to state 774


State 723

  359 expr_without_variable: function returns_ref '(' parameter_list ')' lexical_vars . return_type backup_doc_comment '{' inner_statement_list '}'

    ':'  shift, and go to state 772

    $default  reduce using rule 215 (return_type)

    return_type  go to state 775


State 724

  207 non_empty_parameter_list: non_empty_parameter_list ',' parameter .

    $default  reduce using rule 207 (non_empty_parameter_list)


State 725

  157 is_variadic: "... (T_ELLIPSIS)" .

    $default  reduce using rule 157 (is_variadic)


State 726

  208 parameter: optional_type is_reference is_variadic . "variable (T_VARIABLE)"
  209          | optional_type is_reference is_variadic . "variable (T_VARIABLE)" '=' expr

    "variable (T_VARIABLE)"  shift, and go to state 776


State 727

  283 anonymous_class: "class (T_CLASS)" @8 ctor_arguments extends_from implements_list backup_doc_comment . '{' class_statement_list '}'

    '{'  shift, and go to state 777


State 728

  360 expr_without_variable: "static (T_STATIC)" function returns_ref '(' parameter_list ')' lexical_vars . return_type backup_doc_comment '{' inner_statement_list '}'

    ':'  shift, and go to state 772

    $default  reduce using rule 215 (return_type)

    return_type  go to state 778


State 729

  125 statement: "do (T_DO)" statement "while (T_WHILE)" '(' expr ')' ';' .

    $default  reduce using rule 125 (statement)


State 730

  195 while_statement: ':' inner_statement_list "endwhile (T_ENDWHILE)" . ';'

    ';'  shift, and go to state 779


State 731

  126 statement: "for (T_FOR)" '(' for_exprs ';' for_exprs ';' for_exprs . ')' for_statement

    ')'  shift, and go to state 780


State 732

  178 foreach_variable: "list (T_LIST)" '(' assignment_list . ')'
  447 assignment_list: assignment_list . ',' assignment_list_element

    ','  shift, and go to state 577
    ')'  shift, and go to state 781


State 733

  138 statement: "foreach (T_FOREACH)" '(' expr "as (T_AS)" foreach_variable "=> (T_DOUBLE_ARROW)" foreach_variable . ')' foreach_statement

    ')'  shift, and go to state 782


State 734

  182 foreach_statement: ':' . inner_statement_list "endforeach (T_ENDFOREACH)" ';'

    $default  reduce using rule 114 (inner_statement_list)

    inner_statement_list  go to state 783


State 735

  181 foreach_statement: statement .

    $default  reduce using rule 181 (foreach_statement)


State 736

  137 statement: "foreach (T_FOREACH)" '(' expr "as (T_AS)" foreach_variable ')' foreach_statement .

    $default  reduce using rule 137 (statement)


State 737

  113 inner_statement_list: inner_statement_list . inner_statement
  184 declare_statement: ':' inner_statement_list . "enddeclare (T_ENDDECLARE)" ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "enddeclare (T_ENDDECLARE)"                   shift, and go to state 784
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 738

  188 switch_case_list: ':' ';' case_list . "endswitch (T_ENDSWITCH)" ';'
  190 case_list: case_list . "case (T_CASE)" expr case_separator inner_statement_list
  191          | case_list . "default (T_DEFAULT)" case_separator inner_statement_list

    "endswitch (T_ENDSWITCH)"  shift, and go to state 785
    "case (T_CASE)"            shift, and go to state 740
    "default (T_DEFAULT)"      shift, and go to state 741


State 739

  187 switch_case_list: ':' case_list "endswitch (T_ENDSWITCH)" . ';'

    ';'  shift, and go to state 786


State 740

  190 case_list: case_list "case (T_CASE)" . expr case_separator inner_statement_list

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 787
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 741

  191 case_list: case_list "default (T_DEFAULT)" . case_separator inner_statement_list

    ':'  shift, and go to state 788
    ';'  shift, and go to state 789

    case_separator  go to state 790


State 742

  186 switch_case_list: '{' ';' case_list . '}'
  190 case_list: case_list . "case (T_CASE)" expr case_separator inner_statement_list
  191          | case_list . "default (T_DEFAULT)" case_separator inner_statement_list

    "case (T_CASE)"        shift, and go to state 740
    "default (T_DEFAULT)"  shift, and go to state 741
    '}'                    shift, and go to state 791


State 743

  185 switch_case_list: '{' case_list '}' .

    $default  reduce using rule 185 (switch_case_list)


State 744

  147 catch_list: catch_list "catch (T_CATCH)" '(' . name "variable (T_VARIABLE)" ')' '{' inner_statement_list '}'

    "identifier (T_STRING)"    shift, and go to state 115
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    namespace_name  go to state 83
    name            go to state 792


State 745

  149 finally_statement: "finally (T_FINALLY)" '{' . inner_statement_list '}'

    $default  reduce using rule 114 (inner_statement_list)

    inner_statement_list  go to state 793


State 746

   98 mixed_group_use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "\\ (T_NS_SEPARATOR)" '{' inline_use_declarations '}' .

    $default  reduce using rule 98 (mixed_group_use_declaration)


State 747

   99 inline_use_declarations: inline_use_declarations ',' inline_use_declaration .

    $default  reduce using rule 99 (inline_use_declarations)


State 748

   96 group_use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "\\ (T_NS_SEPARATOR)" '{' unprefixed_use_declarations . '}'
  101 unprefixed_use_declarations: unprefixed_use_declarations . ',' unprefixed_use_declaration

    ','  shift, and go to state 749
    '}'  shift, and go to state 794


State 749

  101 unprefixed_use_declarations: unprefixed_use_declarations ',' . unprefixed_use_declaration

    "identifier (T_STRING)"  shift, and go to state 115

    namespace_name              go to state 562
    unprefixed_use_declaration  go to state 795


State 750

   95 group_use_declaration: namespace_name "\\ (T_NS_SEPARATOR)" '{' unprefixed_use_declarations '}' .

    $default  reduce using rule 95 (group_use_declaration)


State 751

  161 class_declaration_statement: "class (T_CLASS)" @5 "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' . class_statement_list '}'

    $default  reduce using rule 231 (class_statement_list)

    class_statement_list  go to state 796


State 752

  264 member_modifier: "static (T_STATIC)" .

    $default  reduce using rule 264 (member_modifier)


State 753

  265 member_modifier: "abstract (T_ABSTRACT)" .

    $default  reduce using rule 265 (member_modifier)


State 754

  266 member_modifier: "final (T_FINAL)" .

    $default  reduce using rule 266 (member_modifier)


State 755

  263 member_modifier: "private (T_PRIVATE)" .

    $default  reduce using rule 263 (member_modifier)


State 756

  262 member_modifier: "protected (T_PROTECTED)" .

    $default  reduce using rule 262 (member_modifier)


State 757

  261 member_modifier: "public (T_PUBLIC)" .

    $default  reduce using rule 261 (member_modifier)


State 758

  233 class_statement: "const (T_CONST)" . class_const_list ';'

    "include (T_INCLUDE)"            shift, and go to state 400
    "include_once (T_INCLUDE_ONCE)"  shift, and go to state 401
    "eval (T_EVAL)"                  shift, and go to state 402
    "require (T_REQUIRE)"            shift, and go to state 403
    "require_once (T_REQUIRE_ONCE)"  shift, and go to state 404
    "or (T_LOGICAL_OR)"              shift, and go to state 405
    "xor (T_LOGICAL_XOR)"            shift, and go to state 406
    "and (T_LOGICAL_AND)"            shift, and go to state 407
    "print (T_PRINT)"                shift, and go to state 408
    "yield (T_YIELD)"                shift, and go to state 409
    "instanceof (T_INSTANCEOF)"      shift, and go to state 410
    "new (T_NEW)"                    shift, and go to state 411
    "clone (T_CLONE)"                shift, and go to state 412
    "elseif (T_ELSEIF)"              shift, and go to state 413
    "else (T_ELSE)"                  shift, and go to state 414
    "endif (T_ENDIF)"                shift, and go to state 415
    "static (T_STATIC)"              shift, and go to state 416
    "abstract (T_ABSTRACT)"          shift, and go to state 417
    "final (T_FINAL)"                shift, and go to state 418
    "private (T_PRIVATE)"            shift, and go to state 419
    "protected (T_PROTECTED)"        shift, and go to state 420
    "public (T_PUBLIC)"              shift, and go to state 421
    "identifier (T_STRING)"          shift, and go to state 422
    "exit (T_EXIT)"                  shift, and go to state 423
    "if (T_IF)"                      shift, and go to state 424
    "echo (T_ECHO)"                  shift, and go to state 425
    "do (T_DO)"                      shift, and go to state 426
    "while (T_WHILE)"                shift, and go to state 427
    "endwhile (T_ENDWHILE)"          shift, and go to state 428
    "for (T_FOR)"                    shift, and go to state 429
    "endfor (T_ENDFOR)"              shift, and go to state 430
    "foreach (T_FOREACH)"            shift, and go to state 431
    "endforeach (T_ENDFOREACH)"      shift, and go to state 432
    "declare (T_DECLARE)"            shift, and go to state 433
    "enddeclare (T_ENDDECLARE)"      shift, and go to state 434
    "as (T_AS)"                      shift, and go to state 435
    "switch (T_SWITCH)"              shift, and go to state 436
    "endswitch (T_ENDSWITCH)"        shift, and go to state 437
    "case (T_CASE)"                  shift, and go to state 438
    "default (T_DEFAULT)"            shift, and go to state 439
    "break (T_BREAK)"                shift, and go to state 440
    "continue (T_CONTINUE)"          shift, and go to state 441
    "goto (T_GOTO)"                  shift, and go to state 442
    "function (T_FUNCTION)"          shift, and go to state 443
    "const (T_CONST)"                shift, and go to state 444
    "return (T_RETURN)"              shift, and go to state 445
    "try (T_TRY)"                    shift, and go to state 446
    "catch (T_CATCH)"                shift, and go to state 447
    "finally (T_FINALLY)"            shift, and go to state 448
    "throw (T_THROW)"                shift, and go to state 449
    "use (T_USE)"                    shift, and go to state 450
    "insteadof (T_INSTEADOF)"        shift, and go to state 451
    "global (T_GLOBAL)"              shift, and go to state 452
    "var (T_VAR)"                    shift, and go to state 453
    "unset (T_UNSET)"                shift, and go to state 454
    "isset (T_ISSET)"                shift, and go to state 455
    "empty (T_EMPTY)"                shift, and go to state 456
    "class (T_CLASS)"                shift, and go to state 457
    "trait (T_TRAIT)"                shift, and go to state 458
    "interface (T_INTERFACE)"        shift, and go to state 459
    "extends (T_EXTENDS)"            shift, and go to state 460
    "implements (T_IMPLEMENTS)"      shift, and go to state 461
    "list (T_LIST)"                  shift, and go to state 462
    "array (T_ARRAY)"                shift, and go to state 463
    "callable (T_CALLABLE)"          shift, and go to state 464
    "namespace (T_NAMESPACE)"        shift, and go to state 465

    reserved_non_modifiers  go to state 467
    semi_reserved           go to state 468
    identifier              go to state 797
    class_const_list        go to state 798
    class_const_decl        go to state 799


State 759

  234 class_statement: "use (T_USE)" . name_list trait_adaptations

    "identifier (T_STRING)"    shift, and go to state 115
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    namespace_name  go to state 83
    name            go to state 656
    name_list       go to state 800


State 760

  256 variable_modifiers: "var (T_VAR)" .

    $default  reduce using rule 256 (variable_modifiers)


State 761

  167 trait_declaration_statement: "trait (T_TRAIT)" @6 "identifier (T_STRING)" backup_doc_comment '{' class_statement_list '}' .

    $default  reduce using rule 167 (trait_declaration_statement)


State 762

  230 class_statement_list: class_statement_list class_statement .

    $default  reduce using rule 230 (class_statement_list)


State 763

  232 class_statement: variable_modifiers . property_list ';'

    "variable (T_VARIABLE)"  shift, and go to state 801

    property_list  go to state 802
    property       go to state 803


State 764

  235 class_statement: method_modifiers . function returns_ref identifier '(' parameter_list ')' return_type backup_doc_comment method_body

    "function (T_FUNCTION)"  shift, and go to state 50

    function  go to state 804


State 765

  255 variable_modifiers: non_empty_member_modifiers .
  258 method_modifiers: non_empty_member_modifiers .
  260 non_empty_member_modifiers: non_empty_member_modifiers . member_modifier

    "static (T_STATIC)"        shift, and go to state 752
    "abstract (T_ABSTRACT)"    shift, and go to state 753
    "final (T_FINAL)"          shift, and go to state 754
    "private (T_PRIVATE)"      shift, and go to state 755
    "protected (T_PROTECTED)"  shift, and go to state 756
    "public (T_PUBLIC)"        shift, and go to state 757

    "function (T_FUNCTION)"  reduce using rule 258 (method_modifiers)
    $default                 reduce using rule 255 (variable_modifiers)

    member_modifier  go to state 805


State 766

  259 non_empty_member_modifiers: member_modifier .

    $default  reduce using rule 259 (non_empty_member_modifiers)


State 767

  237 name_list: name_list ',' name .

    $default  reduce using rule 237 (name_list)


State 768

  169 interface_declaration_statement: "interface (T_INTERFACE)" @7 "identifier (T_STRING)" interface_extends_list backup_doc_comment '{' class_statement_list . '}'
  230 class_statement_list: class_statement_list . class_statement

    "static (T_STATIC)"        shift, and go to state 752
    "abstract (T_ABSTRACT)"    shift, and go to state 753
    "final (T_FINAL)"          shift, and go to state 754
    "private (T_PRIVATE)"      shift, and go to state 755
    "protected (T_PROTECTED)"  shift, and go to state 756
    "public (T_PUBLIC)"        shift, and go to state 757
    "const (T_CONST)"          shift, and go to state 758
    "use (T_USE)"              shift, and go to state 759
    "var (T_VAR)"              shift, and go to state 760
    '}'                        shift, and go to state 806

    $default  reduce using rule 257 (method_modifiers)

    class_statement             go to state 762
    variable_modifiers          go to state 763
    method_modifiers            go to state 764
    non_empty_member_modifiers  go to state 765
    member_modifier             go to state 766


State 769

  469 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr ']' '}' .

    $default  reduce using rule 469 (encaps_var)


State 770

  159 class_declaration_statement: class_modifiers "class (T_CLASS)" @4 "identifier (T_STRING)" extends_from implements_list backup_doc_comment . '{' class_statement_list '}'

    '{'  shift, and go to state 807


State 771

  113 inner_statement_list: inner_statement_list . inner_statement
  201 alt_if_stmt_without_else: alt_if_stmt_without_else "elseif (T_ELSEIF)" '(' expr ')' ':' inner_statement_list .

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 201 (alt_if_stmt_without_else)

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 772

  216 return_type: ':' . type

    "identifier (T_STRING)"    shift, and go to state 115
    "array (T_ARRAY)"          shift, and go to state 601
    "callable (T_CALLABLE)"    shift, and go to state 602
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    namespace_name  go to state 83
    name            go to state 603
    type            go to state 808


State 773

  153 function_declaration_statement: function returns_ref "identifier (T_STRING)" '(' parameter_list ')' return_type . backup_doc_comment '{' inner_statement_list '}'

    $default  reduce using rule 362 (backup_doc_comment)

    backup_doc_comment  go to state 809


State 774

  366 lexical_vars: "use (T_USE)" '(' . lexical_var_list ')'

    '&'                      shift, and go to state 810
    "variable (T_VARIABLE)"  shift, and go to state 811

    lexical_var_list  go to state 812
    lexical_var       go to state 813


State 775

  359 expr_without_variable: function returns_ref '(' parameter_list ')' lexical_vars return_type . backup_doc_comment '{' inner_statement_list '}'

    $default  reduce using rule 362 (backup_doc_comment)

    backup_doc_comment  go to state 814


State 776

  208 parameter: optional_type is_reference is_variadic "variable (T_VARIABLE)" .
  209          | optional_type is_reference is_variadic "variable (T_VARIABLE)" . '=' expr

    '='  shift, and go to state 815

    $default  reduce using rule 208 (parameter)


State 777

  283 anonymous_class: "class (T_CLASS)" @8 ctor_arguments extends_from implements_list backup_doc_comment '{' . class_statement_list '}'

    $default  reduce using rule 231 (class_statement_list)

    class_statement_list  go to state 816


State 778

  360 expr_without_variable: "static (T_STATIC)" function returns_ref '(' parameter_list ')' lexical_vars return_type . backup_doc_comment '{' inner_statement_list '}'

    $default  reduce using rule 362 (backup_doc_comment)

    backup_doc_comment  go to state 817


State 779

  195 while_statement: ':' inner_statement_list "endwhile (T_ENDWHILE)" ';' .

    $default  reduce using rule 195 (while_statement)


State 780

  126 statement: "for (T_FOR)" '(' for_exprs ';' for_exprs ';' for_exprs ')' . for_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    ':'                                           shift, and go to state 818
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    statement                   go to state 819
    for_statement               go to state 820
    if_stmt_without_else        go to state 93
    if_stmt                     go to state 94
    alt_if_stmt_without_else    go to state 95
    alt_if_stmt                 go to state 96
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 105
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 781

  178 foreach_variable: "list (T_LIST)" '(' assignment_list ')' .

    $default  reduce using rule 178 (foreach_variable)


State 782

  138 statement: "foreach (T_FOREACH)" '(' expr "as (T_AS)" foreach_variable "=> (T_DOUBLE_ARROW)" foreach_variable ')' . foreach_statement

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    ':'                                           shift, and go to state 734
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    statement                   go to state 735
    foreach_statement           go to state 821
    if_stmt_without_else        go to state 93
    if_stmt                     go to state 94
    alt_if_stmt_without_else    go to state 95
    alt_if_stmt                 go to state 96
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 105
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 783

  113 inner_statement_list: inner_statement_list . inner_statement
  182 foreach_statement: ':' inner_statement_list . "endforeach (T_ENDFOREACH)" ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "endforeach (T_ENDFOREACH)"                   shift, and go to state 822
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 784

  184 declare_statement: ':' inner_statement_list "enddeclare (T_ENDDECLARE)" . ';'

    ';'  shift, and go to state 823


State 785

  188 switch_case_list: ':' ';' case_list "endswitch (T_ENDSWITCH)" . ';'

    ';'  shift, and go to state 824


State 786

  187 switch_case_list: ':' case_list "endswitch (T_ENDSWITCH)" ';' .

    $default  reduce using rule 187 (switch_case_list)


State 787

  190 case_list: case_list "case (T_CASE)" expr . case_separator inner_statement_list
  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    ':'                           shift, and go to state 788
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267
    ';'                           shift, and go to state 789

    case_separator  go to state 825


State 788

  192 case_separator: ':' .

    $default  reduce using rule 192 (case_separator)


State 789

  193 case_separator: ';' .

    $default  reduce using rule 193 (case_separator)


State 790

  191 case_list: case_list "default (T_DEFAULT)" case_separator . inner_statement_list

    $default  reduce using rule 114 (inner_statement_list)

    inner_statement_list  go to state 826


State 791

  186 switch_case_list: '{' ';' case_list '}' .

    $default  reduce using rule 186 (switch_case_list)


State 792

  147 catch_list: catch_list "catch (T_CATCH)" '(' name . "variable (T_VARIABLE)" ')' '{' inner_statement_list '}'

    "variable (T_VARIABLE)"  shift, and go to state 827


State 793

  113 inner_statement_list: inner_statement_list . inner_statement
  149 finally_statement: "finally (T_FINALLY)" '{' inner_statement_list . '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '}'                                           shift, and go to state 828
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 794

   96 group_use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "\\ (T_NS_SEPARATOR)" '{' unprefixed_use_declarations '}' .

    $default  reduce using rule 96 (group_use_declaration)


State 795

  101 unprefixed_use_declarations: unprefixed_use_declarations ',' unprefixed_use_declaration .

    $default  reduce using rule 101 (unprefixed_use_declarations)


State 796

  161 class_declaration_statement: "class (T_CLASS)" @5 "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' class_statement_list . '}'
  230 class_statement_list: class_statement_list . class_statement

    "static (T_STATIC)"        shift, and go to state 752
    "abstract (T_ABSTRACT)"    shift, and go to state 753
    "final (T_FINAL)"          shift, and go to state 754
    "private (T_PRIVATE)"      shift, and go to state 755
    "protected (T_PROTECTED)"  shift, and go to state 756
    "public (T_PUBLIC)"        shift, and go to state 757
    "const (T_CONST)"          shift, and go to state 758
    "use (T_USE)"              shift, and go to state 759
    "var (T_VAR)"              shift, and go to state 760
    '}'                        shift, and go to state 829

    $default  reduce using rule 257 (method_modifiers)

    class_statement             go to state 762
    variable_modifiers          go to state 763
    method_modifiers            go to state 764
    non_empty_member_modifiers  go to state 765
    member_modifier             go to state 766


State 797

  273 class_const_decl: identifier . '=' expr

    '='  shift, and go to state 830


State 798

  233 class_statement: "const (T_CONST)" class_const_list . ';'
  271 class_const_list: class_const_list . ',' class_const_decl

    ','  shift, and go to state 831
    ';'  shift, and go to state 832


State 799

  272 class_const_list: class_const_decl .

    $default  reduce using rule 272 (class_const_list)


State 800

  234 class_statement: "use (T_USE)" name_list . trait_adaptations
  237 name_list: name_list . ',' name

    ','  shift, and go to state 710
    ';'  shift, and go to state 833
    '{'  shift, and go to state 834

    trait_adaptations  go to state 835


State 801

  269 property: "variable (T_VARIABLE)" .
  270         | "variable (T_VARIABLE)" . '=' expr

    '='  shift, and go to state 836

    $default  reduce using rule 269 (property)


State 802

  232 class_statement: variable_modifiers property_list . ';'
  267 property_list: property_list . ',' property

    ','  shift, and go to state 837
    ';'  shift, and go to state 838


State 803

  268 property_list: property .

    $default  reduce using rule 268 (property_list)


State 804

  235 class_statement: method_modifiers function . returns_ref identifier '(' parameter_list ')' return_type backup_doc_comment method_body

    '&'  shift, and go to state 235

    $default  reduce using rule 363 (returns_ref)

    returns_ref  go to state 839


State 805

  260 non_empty_member_modifiers: non_empty_member_modifiers member_modifier .

    $default  reduce using rule 260 (non_empty_member_modifiers)


State 806

  169 interface_declaration_statement: "interface (T_INTERFACE)" @7 "identifier (T_STRING)" interface_extends_list backup_doc_comment '{' class_statement_list '}' .

    $default  reduce using rule 169 (interface_declaration_statement)


State 807

  159 class_declaration_statement: class_modifiers "class (T_CLASS)" @4 "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' . class_statement_list '}'

    $default  reduce using rule 231 (class_statement_list)

    class_statement_list  go to state 840


State 808

  216 return_type: ':' type .

    $default  reduce using rule 216 (return_type)


State 809

  153 function_declaration_statement: function returns_ref "identifier (T_STRING)" '(' parameter_list ')' return_type backup_doc_comment . '{' inner_statement_list '}'

    '{'  shift, and go to state 841


State 810

  370 lexical_var: '&' . "variable (T_VARIABLE)"

    "variable (T_VARIABLE)"  shift, and go to state 842


State 811

  369 lexical_var: "variable (T_VARIABLE)" .

    $default  reduce using rule 369 (lexical_var)


State 812

  366 lexical_vars: "use (T_USE)" '(' lexical_var_list . ')'
  367 lexical_var_list: lexical_var_list . ',' lexical_var

    ','  shift, and go to state 843
    ')'  shift, and go to state 844


State 813

  368 lexical_var_list: lexical_var .

    $default  reduce using rule 368 (lexical_var_list)


State 814

  359 expr_without_variable: function returns_ref '(' parameter_list ')' lexical_vars return_type backup_doc_comment . '{' inner_statement_list '}'

    '{'  shift, and go to state 845


State 815

  209 parameter: optional_type is_reference is_variadic "variable (T_VARIABLE)" '=' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 846
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 816

  230 class_statement_list: class_statement_list . class_statement
  283 anonymous_class: "class (T_CLASS)" @8 ctor_arguments extends_from implements_list backup_doc_comment '{' class_statement_list . '}'

    "static (T_STATIC)"        shift, and go to state 752
    "abstract (T_ABSTRACT)"    shift, and go to state 753
    "final (T_FINAL)"          shift, and go to state 754
    "private (T_PRIVATE)"      shift, and go to state 755
    "protected (T_PROTECTED)"  shift, and go to state 756
    "public (T_PUBLIC)"        shift, and go to state 757
    "const (T_CONST)"          shift, and go to state 758
    "use (T_USE)"              shift, and go to state 759
    "var (T_VAR)"              shift, and go to state 760
    '}'                        shift, and go to state 847

    $default  reduce using rule 257 (method_modifiers)

    class_statement             go to state 762
    variable_modifiers          go to state 763
    method_modifiers            go to state 764
    non_empty_member_modifiers  go to state 765
    member_modifier             go to state 766


State 817

  360 expr_without_variable: "static (T_STATIC)" function returns_ref '(' parameter_list ')' lexical_vars return_type backup_doc_comment . '{' inner_statement_list '}'

    '{'  shift, and go to state 848


State 818

  180 for_statement: ':' . inner_statement_list "endfor (T_ENDFOR)" ';'

    $default  reduce using rule 114 (inner_statement_list)

    inner_statement_list  go to state 849


State 819

  179 for_statement: statement .

    $default  reduce using rule 179 (for_statement)


State 820

  126 statement: "for (T_FOR)" '(' for_exprs ';' for_exprs ';' for_exprs ')' for_statement .

    $default  reduce using rule 126 (statement)


State 821

  138 statement: "foreach (T_FOREACH)" '(' expr "as (T_AS)" foreach_variable "=> (T_DOUBLE_ARROW)" foreach_variable ')' foreach_statement .

    $default  reduce using rule 138 (statement)


State 822

  182 foreach_statement: ':' inner_statement_list "endforeach (T_ENDFOREACH)" . ';'

    ';'  shift, and go to state 850


State 823

  184 declare_statement: ':' inner_statement_list "enddeclare (T_ENDDECLARE)" ';' .

    $default  reduce using rule 184 (declare_statement)


State 824

  188 switch_case_list: ':' ';' case_list "endswitch (T_ENDSWITCH)" ';' .

    $default  reduce using rule 188 (switch_case_list)


State 825

  190 case_list: case_list "case (T_CASE)" expr case_separator . inner_statement_list

    $default  reduce using rule 114 (inner_statement_list)

    inner_statement_list  go to state 851


State 826

  113 inner_statement_list: inner_statement_list . inner_statement
  191 case_list: case_list "default (T_DEFAULT)" case_separator inner_statement_list .

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 191 (case_list)

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 827

  147 catch_list: catch_list "catch (T_CATCH)" '(' name "variable (T_VARIABLE)" . ')' '{' inner_statement_list '}'

    ')'  shift, and go to state 852


State 828

  149 finally_statement: "finally (T_FINALLY)" '{' inner_statement_list '}' .

    $default  reduce using rule 149 (finally_statement)


State 829

  161 class_declaration_statement: "class (T_CLASS)" @5 "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' class_statement_list '}' .

    $default  reduce using rule 161 (class_declaration_statement)


State 830

  273 class_const_decl: identifier '=' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 853
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 831

  271 class_const_list: class_const_list ',' . class_const_decl

    "include (T_INCLUDE)"            shift, and go to state 400
    "include_once (T_INCLUDE_ONCE)"  shift, and go to state 401
    "eval (T_EVAL)"                  shift, and go to state 402
    "require (T_REQUIRE)"            shift, and go to state 403
    "require_once (T_REQUIRE_ONCE)"  shift, and go to state 404
    "or (T_LOGICAL_OR)"              shift, and go to state 405
    "xor (T_LOGICAL_XOR)"            shift, and go to state 406
    "and (T_LOGICAL_AND)"            shift, and go to state 407
    "print (T_PRINT)"                shift, and go to state 408
    "yield (T_YIELD)"                shift, and go to state 409
    "instanceof (T_INSTANCEOF)"      shift, and go to state 410
    "new (T_NEW)"                    shift, and go to state 411
    "clone (T_CLONE)"                shift, and go to state 412
    "elseif (T_ELSEIF)"              shift, and go to state 413
    "else (T_ELSE)"                  shift, and go to state 414
    "endif (T_ENDIF)"                shift, and go to state 415
    "static (T_STATIC)"              shift, and go to state 416
    "abstract (T_ABSTRACT)"          shift, and go to state 417
    "final (T_FINAL)"                shift, and go to state 418
    "private (T_PRIVATE)"            shift, and go to state 419
    "protected (T_PROTECTED)"        shift, and go to state 420
    "public (T_PUBLIC)"              shift, and go to state 421
    "identifier (T_STRING)"          shift, and go to state 422
    "exit (T_EXIT)"                  shift, and go to state 423
    "if (T_IF)"                      shift, and go to state 424
    "echo (T_ECHO)"                  shift, and go to state 425
    "do (T_DO)"                      shift, and go to state 426
    "while (T_WHILE)"                shift, and go to state 427
    "endwhile (T_ENDWHILE)"          shift, and go to state 428
    "for (T_FOR)"                    shift, and go to state 429
    "endfor (T_ENDFOR)"              shift, and go to state 430
    "foreach (T_FOREACH)"            shift, and go to state 431
    "endforeach (T_ENDFOREACH)"      shift, and go to state 432
    "declare (T_DECLARE)"            shift, and go to state 433
    "enddeclare (T_ENDDECLARE)"      shift, and go to state 434
    "as (T_AS)"                      shift, and go to state 435
    "switch (T_SWITCH)"              shift, and go to state 436
    "endswitch (T_ENDSWITCH)"        shift, and go to state 437
    "case (T_CASE)"                  shift, and go to state 438
    "default (T_DEFAULT)"            shift, and go to state 439
    "break (T_BREAK)"                shift, and go to state 440
    "continue (T_CONTINUE)"          shift, and go to state 441
    "goto (T_GOTO)"                  shift, and go to state 442
    "function (T_FUNCTION)"          shift, and go to state 443
    "const (T_CONST)"                shift, and go to state 444
    "return (T_RETURN)"              shift, and go to state 445
    "try (T_TRY)"                    shift, and go to state 446
    "catch (T_CATCH)"                shift, and go to state 447
    "finally (T_FINALLY)"            shift, and go to state 448
    "throw (T_THROW)"                shift, and go to state 449
    "use (T_USE)"                    shift, and go to state 450
    "insteadof (T_INSTEADOF)"        shift, and go to state 451
    "global (T_GLOBAL)"              shift, and go to state 452
    "var (T_VAR)"                    shift, and go to state 453
    "unset (T_UNSET)"                shift, and go to state 454
    "isset (T_ISSET)"                shift, and go to state 455
    "empty (T_EMPTY)"                shift, and go to state 456
    "class (T_CLASS)"                shift, and go to state 457
    "trait (T_TRAIT)"                shift, and go to state 458
    "interface (T_INTERFACE)"        shift, and go to state 459
    "extends (T_EXTENDS)"            shift, and go to state 460
    "implements (T_IMPLEMENTS)"      shift, and go to state 461
    "list (T_LIST)"                  shift, and go to state 462
    "array (T_ARRAY)"                shift, and go to state 463
    "callable (T_CALLABLE)"          shift, and go to state 464
    "namespace (T_NAMESPACE)"        shift, and go to state 465

    reserved_non_modifiers  go to state 467
    semi_reserved           go to state 468
    identifier              go to state 797
    class_const_decl        go to state 854


State 832

  233 class_statement: "const (T_CONST)" class_const_list ';' .

    $default  reduce using rule 233 (class_statement)


State 833

  238 trait_adaptations: ';' .

    $default  reduce using rule 238 (trait_adaptations)


State 834

  239 trait_adaptations: '{' . '}'
  240                  | '{' . trait_adaptation_list '}'

    "include (T_INCLUDE)"            shift, and go to state 400
    "include_once (T_INCLUDE_ONCE)"  shift, and go to state 401
    "eval (T_EVAL)"                  shift, and go to state 402
    "require (T_REQUIRE)"            shift, and go to state 403
    "require_once (T_REQUIRE_ONCE)"  shift, and go to state 404
    "or (T_LOGICAL_OR)"              shift, and go to state 405
    "xor (T_LOGICAL_XOR)"            shift, and go to state 406
    "and (T_LOGICAL_AND)"            shift, and go to state 407
    "print (T_PRINT)"                shift, and go to state 408
    "yield (T_YIELD)"                shift, and go to state 409
    "instanceof (T_INSTANCEOF)"      shift, and go to state 410
    "new (T_NEW)"                    shift, and go to state 411
    "clone (T_CLONE)"                shift, and go to state 412
    "elseif (T_ELSEIF)"              shift, and go to state 413
    "else (T_ELSE)"                  shift, and go to state 414
    "endif (T_ENDIF)"                shift, and go to state 415
    "static (T_STATIC)"              shift, and go to state 416
    "abstract (T_ABSTRACT)"          shift, and go to state 417
    "final (T_FINAL)"                shift, and go to state 418
    "private (T_PRIVATE)"            shift, and go to state 419
    "protected (T_PROTECTED)"        shift, and go to state 420
    "public (T_PUBLIC)"              shift, and go to state 421
    "identifier (T_STRING)"          shift, and go to state 855
    "exit (T_EXIT)"                  shift, and go to state 423
    "if (T_IF)"                      shift, and go to state 424
    "echo (T_ECHO)"                  shift, and go to state 425
    "do (T_DO)"                      shift, and go to state 426
    "while (T_WHILE)"                shift, and go to state 427
    "endwhile (T_ENDWHILE)"          shift, and go to state 428
    "for (T_FOR)"                    shift, and go to state 429
    "endfor (T_ENDFOR)"              shift, and go to state 430
    "foreach (T_FOREACH)"            shift, and go to state 431
    "endforeach (T_ENDFOREACH)"      shift, and go to state 432
    "declare (T_DECLARE)"            shift, and go to state 433
    "enddeclare (T_ENDDECLARE)"      shift, and go to state 434
    "as (T_AS)"                      shift, and go to state 435
    "switch (T_SWITCH)"              shift, and go to state 436
    "endswitch (T_ENDSWITCH)"        shift, and go to state 437
    "case (T_CASE)"                  shift, and go to state 438
    "default (T_DEFAULT)"            shift, and go to state 439
    "break (T_BREAK)"                shift, and go to state 440
    "continue (T_CONTINUE)"          shift, and go to state 441
    "goto (T_GOTO)"                  shift, and go to state 442
    "function (T_FUNCTION)"          shift, and go to state 443
    "const (T_CONST)"                shift, and go to state 444
    "return (T_RETURN)"              shift, and go to state 445
    "try (T_TRY)"                    shift, and go to state 446
    "catch (T_CATCH)"                shift, and go to state 447
    "finally (T_FINALLY)"            shift, and go to state 448
    "throw (T_THROW)"                shift, and go to state 449
    "use (T_USE)"                    shift, and go to state 450
    "insteadof (T_INSTEADOF)"        shift, and go to state 451
    "global (T_GLOBAL)"              shift, and go to state 452
    "var (T_VAR)"                    shift, and go to state 453
    "unset (T_UNSET)"                shift, and go to state 454
    "isset (T_ISSET)"                shift, and go to state 455
    "empty (T_EMPTY)"                shift, and go to state 456
    "class (T_CLASS)"                shift, and go to state 457
    "trait (T_TRAIT)"                shift, and go to state 458
    "interface (T_INTERFACE)"        shift, and go to state 459
    "extends (T_EXTENDS)"            shift, and go to state 460
    "implements (T_IMPLEMENTS)"      shift, and go to state 461
    "list (T_LIST)"                  shift, and go to state 462
    "array (T_ARRAY)"                shift, and go to state 463
    "callable (T_CALLABLE)"          shift, and go to state 464
    "namespace (T_NAMESPACE)"        shift, and go to state 856
    "\\ (T_NS_SEPARATOR)"            shift, and go to state 76
    '}'                              shift, and go to state 857

    reserved_non_modifiers           go to state 467
    semi_reserved                    go to state 468
    identifier                       go to state 858
    namespace_name                   go to state 83
    name                             go to state 859
    trait_adaptation_list            go to state 860
    trait_adaptation                 go to state 861
    trait_precedence                 go to state 862
    trait_alias                      go to state 863
    trait_method_reference           go to state 864
    absolute_trait_method_reference  go to state 865


State 835

  234 class_statement: "use (T_USE)" name_list trait_adaptations .

    $default  reduce using rule 234 (class_statement)


State 836

  270 property: "variable (T_VARIABLE)" '=' . expr

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 114
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 115
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "function (T_FUNCTION)"                       shift, and go to state 50
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name              go to state 83
    name                        go to state 84
    new_expr                    go to state 97
    expr_without_variable       go to state 98
    function                    go to state 117
    function_call               go to state 100
    class_name                  go to state 101
    dereferencable_scalar       go to state 102
    scalar                      go to state 103
    constant                    go to state 104
    expr                        go to state 866
    variable_class_name         go to state 106
    dereferencable              go to state 107
    callable_expr               go to state 108
    callable_variable           go to state 109
    variable                    go to state 110
    simple_variable             go to state 111
    static_member               go to state 112
    internal_functions_in_yacc  go to state 113


State 837

  267 property_list: property_list ',' . property

    "variable (T_VARIABLE)"  shift, and go to state 801

    property  go to state 867


State 838

  232 class_statement: variable_modifiers property_list ';' .

    $default  reduce using rule 232 (class_statement)


State 839

  235 class_statement: method_modifiers function returns_ref . identifier '(' parameter_list ')' return_type backup_doc_comment method_body

    "include (T_INCLUDE)"            shift, and go to state 400
    "include_once (T_INCLUDE_ONCE)"  shift, and go to state 401
    "eval (T_EVAL)"                  shift, and go to state 402
    "require (T_REQUIRE)"            shift, and go to state 403
    "require_once (T_REQUIRE_ONCE)"  shift, and go to state 404
    "or (T_LOGICAL_OR)"              shift, and go to state 405
    "xor (T_LOGICAL_XOR)"            shift, and go to state 406
    "and (T_LOGICAL_AND)"            shift, and go to state 407
    "print (T_PRINT)"                shift, and go to state 408
    "yield (T_YIELD)"                shift, and go to state 409
    "instanceof (T_INSTANCEOF)"      shift, and go to state 410
    "new (T_NEW)"                    shift, and go to state 411
    "clone (T_CLONE)"                shift, and go to state 412
    "elseif (T_ELSEIF)"              shift, and go to state 413
    "else (T_ELSE)"                  shift, and go to state 414
    "endif (T_ENDIF)"                shift, and go to state 415
    "static (T_STATIC)"              shift, and go to state 416
    "abstract (T_ABSTRACT)"          shift, and go to state 417
    "final (T_FINAL)"                shift, and go to state 418
    "private (T_PRIVATE)"            shift, and go to state 419
    "protected (T_PROTECTED)"        shift, and go to state 420
    "public (T_PUBLIC)"              shift, and go to state 421
    "identifier (T_STRING)"          shift, and go to state 422
    "exit (T_EXIT)"                  shift, and go to state 423
    "if (T_IF)"                      shift, and go to state 424
    "echo (T_ECHO)"                  shift, and go to state 425
    "do (T_DO)"                      shift, and go to state 426
    "while (T_WHILE)"                shift, and go to state 427
    "endwhile (T_ENDWHILE)"          shift, and go to state 428
    "for (T_FOR)"                    shift, and go to state 429
    "endfor (T_ENDFOR)"              shift, and go to state 430
    "foreach (T_FOREACH)"            shift, and go to state 431
    "endforeach (T_ENDFOREACH)"      shift, and go to state 432
    "declare (T_DECLARE)"            shift, and go to state 433
    "enddeclare (T_ENDDECLARE)"      shift, and go to state 434
    "as (T_AS)"                      shift, and go to state 435
    "switch (T_SWITCH)"              shift, and go to state 436
    "endswitch (T_ENDSWITCH)"        shift, and go to state 437
    "case (T_CASE)"                  shift, and go to state 438
    "default (T_DEFAULT)"            shift, and go to state 439
    "break (T_BREAK)"                shift, and go to state 440
    "continue (T_CONTINUE)"          shift, and go to state 441
    "goto (T_GOTO)"                  shift, and go to state 442
    "function (T_FUNCTION)"          shift, and go to state 443
    "const (T_CONST)"                shift, and go to state 444
    "return (T_RETURN)"              shift, and go to state 445
    "try (T_TRY)"                    shift, and go to state 446
    "catch (T_CATCH)"                shift, and go to state 447
    "finally (T_FINALLY)"            shift, and go to state 448
    "throw (T_THROW)"                shift, and go to state 449
    "use (T_USE)"                    shift, and go to state 450
    "insteadof (T_INSTEADOF)"        shift, and go to state 451
    "global (T_GLOBAL)"              shift, and go to state 452
    "var (T_VAR)"                    shift, and go to state 453
    "unset (T_UNSET)"                shift, and go to state 454
    "isset (T_ISSET)"                shift, and go to state 455
    "empty (T_EMPTY)"                shift, and go to state 456
    "class (T_CLASS)"                shift, and go to state 457
    "trait (T_TRAIT)"                shift, and go to state 458
    "interface (T_INTERFACE)"        shift, and go to state 459
    "extends (T_EXTENDS)"            shift, and go to state 460
    "implements (T_IMPLEMENTS)"      shift, and go to state 461
    "list (T_LIST)"                  shift, and go to state 462
    "array (T_ARRAY)"                shift, and go to state 463
    "callable (T_CALLABLE)"          shift, and go to state 464
    "namespace (T_NAMESPACE)"        shift, and go to state 465

    reserved_non_modifiers  go to state 467
    semi_reserved           go to state 468
    identifier              go to state 868


State 840

  159 class_declaration_statement: class_modifiers "class (T_CLASS)" @4 "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' class_statement_list . '}'
  230 class_statement_list: class_statement_list . class_statement

    "static (T_STATIC)"        shift, and go to state 752
    "abstract (T_ABSTRACT)"    shift, and go to state 753
    "final (T_FINAL)"          shift, and go to state 754
    "private (T_PRIVATE)"      shift, and go to state 755
    "protected (T_PROTECTED)"  shift, and go to state 756
    "public (T_PUBLIC)"        shift, and go to state 757
    "const (T_CONST)"          shift, and go to state 758
    "use (T_USE)"              shift, and go to state 759
    "var (T_VAR)"              shift, and go to state 760
    '}'                        shift, and go to state 869

    $default  reduce using rule 257 (method_modifiers)

    class_statement             go to state 762
    variable_modifiers          go to state 763
    method_modifiers            go to state 764
    non_empty_member_modifiers  go to state 765
    member_modifier             go to state 766


State 841

  153 function_declaration_statement: function returns_ref "identifier (T_STRING)" '(' parameter_list ')' return_type backup_doc_comment '{' . inner_statement_list '}'

    $default  reduce using rule 114 (inner_statement_list)

    inner_statement_list  go to state 870


State 842

  370 lexical_var: '&' "variable (T_VARIABLE)" .

    $default  reduce using rule 370 (lexical_var)


State 843

  367 lexical_var_list: lexical_var_list ',' . lexical_var

    '&'                      shift, and go to state 810
    "variable (T_VARIABLE)"  shift, and go to state 811

    lexical_var  go to state 871


State 844

  366 lexical_vars: "use (T_USE)" '(' lexical_var_list ')' .

    $default  reduce using rule 366 (lexical_vars)


State 845

  359 expr_without_variable: function returns_ref '(' parameter_list ')' lexical_vars return_type backup_doc_comment '{' . inner_statement_list '}'

    $default  reduce using rule 114 (inner_statement_list)

    inner_statement_list  go to state 872


State 846

  209 parameter: optional_type is_reference is_variadic "variable (T_VARIABLE)" '=' expr .
  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 209 (parameter)


State 847

  283 anonymous_class: "class (T_CLASS)" @8 ctor_arguments extends_from implements_list backup_doc_comment '{' class_statement_list '}' .

    $default  reduce using rule 283 (anonymous_class)


State 848

  360 expr_without_variable: "static (T_STATIC)" function returns_ref '(' parameter_list ')' lexical_vars return_type backup_doc_comment '{' . inner_statement_list '}'

    $default  reduce using rule 114 (inner_statement_list)

    inner_statement_list  go to state 873


State 849

  113 inner_statement_list: inner_statement_list . inner_statement
  180 for_statement: ':' inner_statement_list . "endfor (T_ENDFOR)" ';'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "endfor (T_ENDFOR)"                           shift, and go to state 874
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 850

  182 foreach_statement: ':' inner_statement_list "endforeach (T_ENDFOREACH)" ';' .

    $default  reduce using rule 182 (foreach_statement)


State 851

  113 inner_statement_list: inner_statement_list . inner_statement
  190 case_list: case_list "case (T_CASE)" expr case_separator inner_statement_list .

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    $default  reduce using rule 190 (case_list)

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 852

  147 catch_list: catch_list "catch (T_CATCH)" '(' name "variable (T_VARIABLE)" ')' . '{' inner_statement_list '}'

    '{'  shift, and go to state 875


State 853

  273 class_const_decl: identifier '=' expr .
  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 273 (class_const_decl)


State 854

  271 class_const_list: class_const_list ',' class_const_decl .

    $default  reduce using rule 271 (class_const_list)


State 855

   68 identifier: "identifier (T_STRING)" .
   72 namespace_name: "identifier (T_STRING)" .

    "as (T_AS)"  reduce using rule 68 (identifier)
    $default     reduce using rule 72 (namespace_name)


State 856

   57 reserved_non_modifiers: "namespace (T_NAMESPACE)" .
   75 name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 212

    $default  reduce using rule 57 (reserved_non_modifiers)


State 857

  239 trait_adaptations: '{' '}' .

    $default  reduce using rule 239 (trait_adaptations)


State 858

  250 trait_method_reference: identifier .

    $default  reduce using rule 250 (trait_method_reference)


State 859

  252 absolute_trait_method_reference: name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" identifier

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 876


State 860

  240 trait_adaptations: '{' trait_adaptation_list . '}'
  242 trait_adaptation_list: trait_adaptation_list . trait_adaptation

    "include (T_INCLUDE)"            shift, and go to state 400
    "include_once (T_INCLUDE_ONCE)"  shift, and go to state 401
    "eval (T_EVAL)"                  shift, and go to state 402
    "require (T_REQUIRE)"            shift, and go to state 403
    "require_once (T_REQUIRE_ONCE)"  shift, and go to state 404
    "or (T_LOGICAL_OR)"              shift, and go to state 405
    "xor (T_LOGICAL_XOR)"            shift, and go to state 406
    "and (T_LOGICAL_AND)"            shift, and go to state 407
    "print (T_PRINT)"                shift, and go to state 408
    "yield (T_YIELD)"                shift, and go to state 409
    "instanceof (T_INSTANCEOF)"      shift, and go to state 410
    "new (T_NEW)"                    shift, and go to state 411
    "clone (T_CLONE)"                shift, and go to state 412
    "elseif (T_ELSEIF)"              shift, and go to state 413
    "else (T_ELSE)"                  shift, and go to state 414
    "endif (T_ENDIF)"                shift, and go to state 415
    "static (T_STATIC)"              shift, and go to state 416
    "abstract (T_ABSTRACT)"          shift, and go to state 417
    "final (T_FINAL)"                shift, and go to state 418
    "private (T_PRIVATE)"            shift, and go to state 419
    "protected (T_PROTECTED)"        shift, and go to state 420
    "public (T_PUBLIC)"              shift, and go to state 421
    "identifier (T_STRING)"          shift, and go to state 855
    "exit (T_EXIT)"                  shift, and go to state 423
    "if (T_IF)"                      shift, and go to state 424
    "echo (T_ECHO)"                  shift, and go to state 425
    "do (T_DO)"                      shift, and go to state 426
    "while (T_WHILE)"                shift, and go to state 427
    "endwhile (T_ENDWHILE)"          shift, and go to state 428
    "for (T_FOR)"                    shift, and go to state 429
    "endfor (T_ENDFOR)"              shift, and go to state 430
    "foreach (T_FOREACH)"            shift, and go to state 431
    "endforeach (T_ENDFOREACH)"      shift, and go to state 432
    "declare (T_DECLARE)"            shift, and go to state 433
    "enddeclare (T_ENDDECLARE)"      shift, and go to state 434
    "as (T_AS)"                      shift, and go to state 435
    "switch (T_SWITCH)"              shift, and go to state 436
    "endswitch (T_ENDSWITCH)"        shift, and go to state 437
    "case (T_CASE)"                  shift, and go to state 438
    "default (T_DEFAULT)"            shift, and go to state 439
    "break (T_BREAK)"                shift, and go to state 440
    "continue (T_CONTINUE)"          shift, and go to state 441
    "goto (T_GOTO)"                  shift, and go to state 442
    "function (T_FUNCTION)"          shift, and go to state 443
    "const (T_CONST)"                shift, and go to state 444
    "return (T_RETURN)"              shift, and go to state 445
    "try (T_TRY)"                    shift, and go to state 446
    "catch (T_CATCH)"                shift, and go to state 447
    "finally (T_FINALLY)"            shift, and go to state 448
    "throw (T_THROW)"                shift, and go to state 449
    "use (T_USE)"                    shift, and go to state 450
    "insteadof (T_INSTEADOF)"        shift, and go to state 451
    "global (T_GLOBAL)"              shift, and go to state 452
    "var (T_VAR)"                    shift, and go to state 453
    "unset (T_UNSET)"                shift, and go to state 454
    "isset (T_ISSET)"                shift, and go to state 455
    "empty (T_EMPTY)"                shift, and go to state 456
    "class (T_CLASS)"                shift, and go to state 457
    "trait (T_TRAIT)"                shift, and go to state 458
    "interface (T_INTERFACE)"        shift, and go to state 459
    "extends (T_EXTENDS)"            shift, and go to state 460
    "implements (T_IMPLEMENTS)"      shift, and go to state 461
    "list (T_LIST)"                  shift, and go to state 462
    "array (T_ARRAY)"                shift, and go to state 463
    "callable (T_CALLABLE)"          shift, and go to state 464
    "namespace (T_NAMESPACE)"        shift, and go to state 856
    "\\ (T_NS_SEPARATOR)"            shift, and go to state 76
    '}'                              shift, and go to state 877

    reserved_non_modifiers           go to state 467
    semi_reserved                    go to state 468
    identifier                       go to state 858
    namespace_name                   go to state 83
    name                             go to state 859
    trait_adaptation                 go to state 878
    trait_precedence                 go to state 862
    trait_alias                      go to state 863
    trait_method_reference           go to state 864
    absolute_trait_method_reference  go to state 865


State 861

  241 trait_adaptation_list: trait_adaptation .

    $default  reduce using rule 241 (trait_adaptation_list)


State 862

  243 trait_adaptation: trait_precedence . ';'

    ';'  shift, and go to state 879


State 863

  244 trait_adaptation: trait_alias . ';'

    ';'  shift, and go to state 880


State 864

  246 trait_alias: trait_method_reference . "as (T_AS)" "identifier (T_STRING)"
  247            | trait_method_reference . "as (T_AS)" reserved_non_modifiers
  248            | trait_method_reference . "as (T_AS)" member_modifier identifier
  249            | trait_method_reference . "as (T_AS)" member_modifier

    "as (T_AS)"  shift, and go to state 881


State 865

  245 trait_precedence: absolute_trait_method_reference . "insteadof (T_INSTEADOF)" name_list
  251 trait_method_reference: absolute_trait_method_reference .

    "insteadof (T_INSTEADOF)"  shift, and go to state 882

    $default  reduce using rule 251 (trait_method_reference)


State 866

  270 property: "variable (T_VARIABLE)" '=' expr .
  306 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" expr
  307                      | expr . "&& (T_BOOLEAN_AND)" expr
  308                      | expr . "or (T_LOGICAL_OR)" expr
  309                      | expr . "and (T_LOGICAL_AND)" expr
  310                      | expr . "xor (T_LOGICAL_XOR)" expr
  311                      | expr . '|' expr
  312                      | expr . '&' expr
  313                      | expr . '^' expr
  314                      | expr . '.' expr
  315                      | expr . '+' expr
  316                      | expr . '-' expr
  317                      | expr . '*' expr
  318                      | expr . "** (T_POW)" expr
  319                      | expr . '/' expr
  320                      | expr . '%' expr
  321                      | expr . "<< (T_SL)" expr
  322                      | expr . ">> (T_SR)" expr
  327                      | expr . "=== (T_IS_IDENTICAL)" expr
  328                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  329                      | expr . "== (T_IS_EQUAL)" expr
  330                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  331                      | expr . '<' expr
  332                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  333                      | expr . '>' expr
  334                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  335                      | expr . "<=> (T_SPACESHIP)" expr
  336                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  339                      | expr . '?' expr ':' expr
  340                      | expr . '?' ':' expr
  341                      | expr . "?? (T_COALESCE)" expr

    "or (T_LOGICAL_OR)"           shift, and go to state 239
    "xor (T_LOGICAL_XOR)"         shift, and go to state 240
    "and (T_LOGICAL_AND)"         shift, and go to state 241
    '?'                           shift, and go to state 242
    "?? (T_COALESCE)"             shift, and go to state 243
    "|| (T_BOOLEAN_OR)"           shift, and go to state 244
    "&& (T_BOOLEAN_AND)"          shift, and go to state 245
    '|'                           shift, and go to state 246
    '^'                           shift, and go to state 247
    '&'                           shift, and go to state 248
    "== (T_IS_EQUAL)"             shift, and go to state 249
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 250
    "=== (T_IS_IDENTICAL)"        shift, and go to state 251
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 252
    "<=> (T_SPACESHIP)"           shift, and go to state 253
    '<'                           shift, and go to state 254
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 255
    '>'                           shift, and go to state 256
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 257
    "<< (T_SL)"                   shift, and go to state 258
    ">> (T_SR)"                   shift, and go to state 259
    '+'                           shift, and go to state 260
    '-'                           shift, and go to state 261
    '.'                           shift, and go to state 262
    '*'                           shift, and go to state 263
    '/'                           shift, and go to state 264
    '%'                           shift, and go to state 265
    "instanceof (T_INSTANCEOF)"   shift, and go to state 266
    "** (T_POW)"                  shift, and go to state 267

    $default  reduce using rule 270 (property)


State 867

  267 property_list: property_list ',' property .

    $default  reduce using rule 267 (property_list)


State 868

  235 class_statement: method_modifiers function returns_ref identifier . '(' parameter_list ')' return_type backup_doc_comment method_body

    '('  shift, and go to state 883


State 869

  159 class_declaration_statement: class_modifiers "class (T_CLASS)" @4 "identifier (T_STRING)" extends_from implements_list backup_doc_comment '{' class_statement_list '}' .

    $default  reduce using rule 159 (class_declaration_statement)


State 870

  113 inner_statement_list: inner_statement_list . inner_statement
  153 function_declaration_statement: function returns_ref "identifier (T_STRING)" '(' parameter_list ')' return_type backup_doc_comment '{' inner_statement_list . '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '}'                                           shift, and go to state 884
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 871

  367 lexical_var_list: lexical_var_list ',' lexical_var .

    $default  reduce using rule 367 (lexical_var_list)


State 872

  113 inner_statement_list: inner_statement_list . inner_statement
  359 expr_without_variable: function returns_ref '(' parameter_list ')' lexical_vars return_type backup_doc_comment '{' inner_statement_list . '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '}'                                           shift, and go to state 885
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 873

  113 inner_statement_list: inner_statement_list . inner_statement
  360 expr_without_variable: "static (T_STATIC)" function returns_ref '(' parameter_list ')' lexical_vars return_type backup_doc_comment '{' inner_statement_list . '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '}'                                           shift, and go to state 886
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 874

  180 for_statement: ':' inner_statement_list "endfor (T_ENDFOR)" . ';'

    ';'  shift, and go to state 887


State 875

  147 catch_list: catch_list "catch (T_CATCH)" '(' name "variable (T_VARIABLE)" ')' '{' . inner_statement_list '}'

    $default  reduce using rule 114 (inner_statement_list)

    inner_statement_list  go to state 888


State 876

  252 absolute_trait_method_reference: name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . identifier

    "include (T_INCLUDE)"            shift, and go to state 400
    "include_once (T_INCLUDE_ONCE)"  shift, and go to state 401
    "eval (T_EVAL)"                  shift, and go to state 402
    "require (T_REQUIRE)"            shift, and go to state 403
    "require_once (T_REQUIRE_ONCE)"  shift, and go to state 404
    "or (T_LOGICAL_OR)"              shift, and go to state 405
    "xor (T_LOGICAL_XOR)"            shift, and go to state 406
    "and (T_LOGICAL_AND)"            shift, and go to state 407
    "print (T_PRINT)"                shift, and go to state 408
    "yield (T_YIELD)"                shift, and go to state 409
    "instanceof (T_INSTANCEOF)"      shift, and go to state 410
    "new (T_NEW)"                    shift, and go to state 411
    "clone (T_CLONE)"                shift, and go to state 412
    "elseif (T_ELSEIF)"              shift, and go to state 413
    "else (T_ELSE)"                  shift, and go to state 414
    "endif (T_ENDIF)"                shift, and go to state 415
    "static (T_STATIC)"              shift, and go to state 416
    "abstract (T_ABSTRACT)"          shift, and go to state 417
    "final (T_FINAL)"                shift, and go to state 418
    "private (T_PRIVATE)"            shift, and go to state 419
    "protected (T_PROTECTED)"        shift, and go to state 420
    "public (T_PUBLIC)"              shift, and go to state 421
    "identifier (T_STRING)"          shift, and go to state 422
    "exit (T_EXIT)"                  shift, and go to state 423
    "if (T_IF)"                      shift, and go to state 424
    "echo (T_ECHO)"                  shift, and go to state 425
    "do (T_DO)"                      shift, and go to state 426
    "while (T_WHILE)"                shift, and go to state 427
    "endwhile (T_ENDWHILE)"          shift, and go to state 428
    "for (T_FOR)"                    shift, and go to state 429
    "endfor (T_ENDFOR)"              shift, and go to state 430
    "foreach (T_FOREACH)"            shift, and go to state 431
    "endforeach (T_ENDFOREACH)"      shift, and go to state 432
    "declare (T_DECLARE)"            shift, and go to state 433
    "enddeclare (T_ENDDECLARE)"      shift, and go to state 434
    "as (T_AS)"                      shift, and go to state 435
    "switch (T_SWITCH)"              shift, and go to state 436
    "endswitch (T_ENDSWITCH)"        shift, and go to state 437
    "case (T_CASE)"                  shift, and go to state 438
    "default (T_DEFAULT)"            shift, and go to state 439
    "break (T_BREAK)"                shift, and go to state 440
    "continue (T_CONTINUE)"          shift, and go to state 441
    "goto (T_GOTO)"                  shift, and go to state 442
    "function (T_FUNCTION)"          shift, and go to state 443
    "const (T_CONST)"                shift, and go to state 444
    "return (T_RETURN)"              shift, and go to state 445
    "try (T_TRY)"                    shift, and go to state 446
    "catch (T_CATCH)"                shift, and go to state 447
    "finally (T_FINALLY)"            shift, and go to state 448
    "throw (T_THROW)"                shift, and go to state 449
    "use (T_USE)"                    shift, and go to state 450
    "insteadof (T_INSTEADOF)"        shift, and go to state 451
    "global (T_GLOBAL)"              shift, and go to state 452
    "var (T_VAR)"                    shift, and go to state 453
    "unset (T_UNSET)"                shift, and go to state 454
    "isset (T_ISSET)"                shift, and go to state 455
    "empty (T_EMPTY)"                shift, and go to state 456
    "class (T_CLASS)"                shift, and go to state 457
    "trait (T_TRAIT)"                shift, and go to state 458
    "interface (T_INTERFACE)"        shift, and go to state 459
    "extends (T_EXTENDS)"            shift, and go to state 460
    "implements (T_IMPLEMENTS)"      shift, and go to state 461
    "list (T_LIST)"                  shift, and go to state 462
    "array (T_ARRAY)"                shift, and go to state 463
    "callable (T_CALLABLE)"          shift, and go to state 464
    "namespace (T_NAMESPACE)"        shift, and go to state 465

    reserved_non_modifiers  go to state 467
    semi_reserved           go to state 468
    identifier              go to state 889


State 877

  240 trait_adaptations: '{' trait_adaptation_list '}' .

    $default  reduce using rule 240 (trait_adaptations)


State 878

  242 trait_adaptation_list: trait_adaptation_list trait_adaptation .

    $default  reduce using rule 242 (trait_adaptation_list)


State 879

  243 trait_adaptation: trait_precedence ';' .

    $default  reduce using rule 243 (trait_adaptation)


State 880

  244 trait_adaptation: trait_alias ';' .

    $default  reduce using rule 244 (trait_adaptation)


State 881

  246 trait_alias: trait_method_reference "as (T_AS)" . "identifier (T_STRING)"
  247            | trait_method_reference "as (T_AS)" . reserved_non_modifiers
  248            | trait_method_reference "as (T_AS)" . member_modifier identifier
  249            | trait_method_reference "as (T_AS)" . member_modifier

    "include (T_INCLUDE)"            shift, and go to state 400
    "include_once (T_INCLUDE_ONCE)"  shift, and go to state 401
    "eval (T_EVAL)"                  shift, and go to state 402
    "require (T_REQUIRE)"            shift, and go to state 403
    "require_once (T_REQUIRE_ONCE)"  shift, and go to state 404
    "or (T_LOGICAL_OR)"              shift, and go to state 405
    "xor (T_LOGICAL_XOR)"            shift, and go to state 406
    "and (T_LOGICAL_AND)"            shift, and go to state 407
    "print (T_PRINT)"                shift, and go to state 408
    "yield (T_YIELD)"                shift, and go to state 409
    "instanceof (T_INSTANCEOF)"      shift, and go to state 410
    "new (T_NEW)"                    shift, and go to state 411
    "clone (T_CLONE)"                shift, and go to state 412
    "elseif (T_ELSEIF)"              shift, and go to state 413
    "else (T_ELSE)"                  shift, and go to state 414
    "endif (T_ENDIF)"                shift, and go to state 415
    "static (T_STATIC)"              shift, and go to state 752
    "abstract (T_ABSTRACT)"          shift, and go to state 753
    "final (T_FINAL)"                shift, and go to state 754
    "private (T_PRIVATE)"            shift, and go to state 755
    "protected (T_PROTECTED)"        shift, and go to state 756
    "public (T_PUBLIC)"              shift, and go to state 757
    "identifier (T_STRING)"          shift, and go to state 890
    "exit (T_EXIT)"                  shift, and go to state 423
    "if (T_IF)"                      shift, and go to state 424
    "echo (T_ECHO)"                  shift, and go to state 425
    "do (T_DO)"                      shift, and go to state 426
    "while (T_WHILE)"                shift, and go to state 427
    "endwhile (T_ENDWHILE)"          shift, and go to state 428
    "for (T_FOR)"                    shift, and go to state 429
    "endfor (T_ENDFOR)"              shift, and go to state 430
    "foreach (T_FOREACH)"            shift, and go to state 431
    "endforeach (T_ENDFOREACH)"      shift, and go to state 432
    "declare (T_DECLARE)"            shift, and go to state 433
    "enddeclare (T_ENDDECLARE)"      shift, and go to state 434
    "as (T_AS)"                      shift, and go to state 435
    "switch (T_SWITCH)"              shift, and go to state 436
    "endswitch (T_ENDSWITCH)"        shift, and go to state 437
    "case (T_CASE)"                  shift, and go to state 438
    "default (T_DEFAULT)"            shift, and go to state 439
    "break (T_BREAK)"                shift, and go to state 440
    "continue (T_CONTINUE)"          shift, and go to state 441
    "goto (T_GOTO)"                  shift, and go to state 442
    "function (T_FUNCTION)"          shift, and go to state 443
    "const (T_CONST)"                shift, and go to state 444
    "return (T_RETURN)"              shift, and go to state 445
    "try (T_TRY)"                    shift, and go to state 446
    "catch (T_CATCH)"                shift, and go to state 447
    "finally (T_FINALLY)"            shift, and go to state 448
    "throw (T_THROW)"                shift, and go to state 449
    "use (T_USE)"                    shift, and go to state 450
    "insteadof (T_INSTEADOF)"        shift, and go to state 451
    "global (T_GLOBAL)"              shift, and go to state 452
    "var (T_VAR)"                    shift, and go to state 453
    "unset (T_UNSET)"                shift, and go to state 454
    "isset (T_ISSET)"                shift, and go to state 455
    "empty (T_EMPTY)"                shift, and go to state 456
    "class (T_CLASS)"                shift, and go to state 457
    "trait (T_TRAIT)"                shift, and go to state 458
    "interface (T_INTERFACE)"        shift, and go to state 459
    "extends (T_EXTENDS)"            shift, and go to state 460
    "implements (T_IMPLEMENTS)"      shift, and go to state 461
    "list (T_LIST)"                  shift, and go to state 462
    "array (T_ARRAY)"                shift, and go to state 463
    "callable (T_CALLABLE)"          shift, and go to state 464
    "namespace (T_NAMESPACE)"        shift, and go to state 465

    reserved_non_modifiers  go to state 891
    member_modifier         go to state 892


State 882

  245 trait_precedence: absolute_trait_method_reference "insteadof (T_INSTEADOF)" . name_list

    "identifier (T_STRING)"    shift, and go to state 115
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    namespace_name  go to state 83
    name            go to state 656
    name_list       go to state 893


State 883

  235 class_statement: method_modifiers function returns_ref identifier '(' . parameter_list ')' return_type backup_doc_comment method_body

    "identifier (T_STRING)"    shift, and go to state 115
    "array (T_ARRAY)"          shift, and go to state 601
    "callable (T_CALLABLE)"    shift, and go to state 602
    "namespace (T_NAMESPACE)"  shift, and go to state 116
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 76

    ')'       reduce using rule 205 (parameter_list)
    $default  reduce using rule 210 (optional_type)

    namespace_name            go to state 83
    name                      go to state 603
    parameter_list            go to state 894
    non_empty_parameter_list  go to state 605
    parameter                 go to state 606
    optional_type             go to state 607
    type                      go to state 608


State 884

  153 function_declaration_statement: function returns_ref "identifier (T_STRING)" '(' parameter_list ')' return_type backup_doc_comment '{' inner_statement_list '}' .

    $default  reduce using rule 153 (function_declaration_statement)


State 885

  359 expr_without_variable: function returns_ref '(' parameter_list ')' lexical_vars return_type backup_doc_comment '{' inner_statement_list '}' .

    $default  reduce using rule 359 (expr_without_variable)


State 886

  360 expr_without_variable: "static (T_STATIC)" function returns_ref '(' parameter_list ')' lexical_vars return_type backup_doc_comment '{' inner_statement_list '}' .

    $default  reduce using rule 360 (expr_without_variable)


State 887

  180 for_statement: ':' inner_statement_list "endfor (T_ENDFOR)" ';' .

    $default  reduce using rule 180 (for_statement)


State 888

  113 inner_statement_list: inner_statement_list . inner_statement
  147 catch_list: catch_list "catch (T_CATCH)" '(' name "variable (T_VARIABLE)" ')' '{' inner_statement_list . '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '}'                                           shift, and go to state 895
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 889

  252 absolute_trait_method_reference: name ":: (T_PAAMAYIM_NEKUDOTAYIM)" identifier .

    $default  reduce using rule 252 (absolute_trait_method_reference)


State 890

  246 trait_alias: trait_method_reference "as (T_AS)" "identifier (T_STRING)" .

    $default  reduce using rule 246 (trait_alias)


State 891

  247 trait_alias: trait_method_reference "as (T_AS)" reserved_non_modifiers .

    $default  reduce using rule 247 (trait_alias)


State 892

  248 trait_alias: trait_method_reference "as (T_AS)" member_modifier . identifier
  249            | trait_method_reference "as (T_AS)" member_modifier .

    "include (T_INCLUDE)"            shift, and go to state 400
    "include_once (T_INCLUDE_ONCE)"  shift, and go to state 401
    "eval (T_EVAL)"                  shift, and go to state 402
    "require (T_REQUIRE)"            shift, and go to state 403
    "require_once (T_REQUIRE_ONCE)"  shift, and go to state 404
    "or (T_LOGICAL_OR)"              shift, and go to state 405
    "xor (T_LOGICAL_XOR)"            shift, and go to state 406
    "and (T_LOGICAL_AND)"            shift, and go to state 407
    "print (T_PRINT)"                shift, and go to state 408
    "yield (T_YIELD)"                shift, and go to state 409
    "instanceof (T_INSTANCEOF)"      shift, and go to state 410
    "new (T_NEW)"                    shift, and go to state 411
    "clone (T_CLONE)"                shift, and go to state 412
    "elseif (T_ELSEIF)"              shift, and go to state 413
    "else (T_ELSE)"                  shift, and go to state 414
    "endif (T_ENDIF)"                shift, and go to state 415
    "static (T_STATIC)"              shift, and go to state 416
    "abstract (T_ABSTRACT)"          shift, and go to state 417
    "final (T_FINAL)"                shift, and go to state 418
    "private (T_PRIVATE)"            shift, and go to state 419
    "protected (T_PROTECTED)"        shift, and go to state 420
    "public (T_PUBLIC)"              shift, and go to state 421
    "identifier (T_STRING)"          shift, and go to state 422
    "exit (T_EXIT)"                  shift, and go to state 423
    "if (T_IF)"                      shift, and go to state 424
    "echo (T_ECHO)"                  shift, and go to state 425
    "do (T_DO)"                      shift, and go to state 426
    "while (T_WHILE)"                shift, and go to state 427
    "endwhile (T_ENDWHILE)"          shift, and go to state 428
    "for (T_FOR)"                    shift, and go to state 429
    "endfor (T_ENDFOR)"              shift, and go to state 430
    "foreach (T_FOREACH)"            shift, and go to state 431
    "endforeach (T_ENDFOREACH)"      shift, and go to state 432
    "declare (T_DECLARE)"            shift, and go to state 433
    "enddeclare (T_ENDDECLARE)"      shift, and go to state 434
    "as (T_AS)"                      shift, and go to state 435
    "switch (T_SWITCH)"              shift, and go to state 436
    "endswitch (T_ENDSWITCH)"        shift, and go to state 437
    "case (T_CASE)"                  shift, and go to state 438
    "default (T_DEFAULT)"            shift, and go to state 439
    "break (T_BREAK)"                shift, and go to state 440
    "continue (T_CONTINUE)"          shift, and go to state 441
    "goto (T_GOTO)"                  shift, and go to state 442
    "function (T_FUNCTION)"          shift, and go to state 443
    "const (T_CONST)"                shift, and go to state 444
    "return (T_RETURN)"              shift, and go to state 445
    "try (T_TRY)"                    shift, and go to state 446
    "catch (T_CATCH)"                shift, and go to state 447
    "finally (T_FINALLY)"            shift, and go to state 448
    "throw (T_THROW)"                shift, and go to state 449
    "use (T_USE)"                    shift, and go to state 450
    "insteadof (T_INSTEADOF)"        shift, and go to state 451
    "global (T_GLOBAL)"              shift, and go to state 452
    "var (T_VAR)"                    shift, and go to state 453
    "unset (T_UNSET)"                shift, and go to state 454
    "isset (T_ISSET)"                shift, and go to state 455
    "empty (T_EMPTY)"                shift, and go to state 456
    "class (T_CLASS)"                shift, and go to state 457
    "trait (T_TRAIT)"                shift, and go to state 458
    "interface (T_INTERFACE)"        shift, and go to state 459
    "extends (T_EXTENDS)"            shift, and go to state 460
    "implements (T_IMPLEMENTS)"      shift, and go to state 461
    "list (T_LIST)"                  shift, and go to state 462
    "array (T_ARRAY)"                shift, and go to state 463
    "callable (T_CALLABLE)"          shift, and go to state 464
    "namespace (T_NAMESPACE)"        shift, and go to state 465

    $default  reduce using rule 249 (trait_alias)

    reserved_non_modifiers  go to state 467
    semi_reserved           go to state 468
    identifier              go to state 896


State 893

  237 name_list: name_list . ',' name
  245 trait_precedence: absolute_trait_method_reference "insteadof (T_INSTEADOF)" name_list .

    ','  shift, and go to state 710

    $default  reduce using rule 245 (trait_precedence)


State 894

  235 class_statement: method_modifiers function returns_ref identifier '(' parameter_list . ')' return_type backup_doc_comment method_body

    ')'  shift, and go to state 897


State 895

  147 catch_list: catch_list "catch (T_CATCH)" '(' name "variable (T_VARIABLE)" ')' '{' inner_statement_list '}' .

    $default  reduce using rule 147 (catch_list)


State 896

  248 trait_alias: trait_method_reference "as (T_AS)" member_modifier identifier .

    $default  reduce using rule 248 (trait_alias)


State 897

  235 class_statement: method_modifiers function returns_ref identifier '(' parameter_list ')' . return_type backup_doc_comment method_body

    ':'  shift, and go to state 772

    $default  reduce using rule 215 (return_type)

    return_type  go to state 898


State 898

  235 class_statement: method_modifiers function returns_ref identifier '(' parameter_list ')' return_type . backup_doc_comment method_body

    $default  reduce using rule 362 (backup_doc_comment)

    backup_doc_comment  go to state 899


State 899

  235 class_statement: method_modifiers function returns_ref identifier '(' parameter_list ')' return_type backup_doc_comment . method_body

    ';'  shift, and go to state 900
    '{'  shift, and go to state 901

    method_body  go to state 902


State 900

  253 method_body: ';' .

    $default  reduce using rule 253 (method_body)


State 901

  254 method_body: '{' . inner_statement_list '}'

    $default  reduce using rule 114 (inner_statement_list)

    inner_statement_list  go to state 903


State 902

  235 class_statement: method_modifiers function returns_ref identifier '(' parameter_list ')' return_type backup_doc_comment method_body .

    $default  reduce using rule 235 (class_statement)


State 903

  113 inner_statement_list: inner_statement_list . inner_statement
  254 method_body: '{' inner_statement_list . '}'

    "include (T_INCLUDE)"                         shift, and go to state 4
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 5
    "eval (T_EVAL)"                               shift, and go to state 6
    "require (T_REQUIRE)"                         shift, and go to state 7
    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 8
    "print (T_PRINT)"                             shift, and go to state 9
    "yield (T_YIELD)"                             shift, and go to state 10
    "yield from (T_YIELD_FROM)"                   shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    "++ (T_INC)"                                  shift, and go to state 16
    "-- (T_DEC)"                                  shift, and go to state 17
    "(int) (T_INT_CAST)"                          shift, and go to state 18
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 19
    "(string) (T_STRING_CAST)"                    shift, and go to state 20
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 21
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 22
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 23
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 24
    '@'                                           shift, and go to state 25
    '['                                           shift, and go to state 26
    "new (T_NEW)"                                 shift, and go to state 27
    "clone (T_CLONE)"                             shift, and go to state 28
    "static (T_STATIC)"                           shift, and go to state 29
    "abstract (T_ABSTRACT)"                       shift, and go to state 30
    "final (T_FINAL)"                             shift, and go to state 31
    "integer number (T_LNUMBER)"                  shift, and go to state 32
    "floating-point number (T_DNUMBER)"           shift, and go to state 33
    "identifier (T_STRING)"                       shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "exit (T_EXIT)"                               shift, and go to state 38
    "if (T_IF)"                                   shift, and go to state 39
    "echo (T_ECHO)"                               shift, and go to state 40
    "do (T_DO)"                                   shift, and go to state 41
    "while (T_WHILE)"                             shift, and go to state 42
    "for (T_FOR)"                                 shift, and go to state 43
    "foreach (T_FOREACH)"                         shift, and go to state 44
    "declare (T_DECLARE)"                         shift, and go to state 45
    "switch (T_SWITCH)"                           shift, and go to state 46
    "break (T_BREAK)"                             shift, and go to state 47
    "continue (T_CONTINUE)"                       shift, and go to state 48
    "goto (T_GOTO)"                               shift, and go to state 49
    "function (T_FUNCTION)"                       shift, and go to state 50
    "return (T_RETURN)"                           shift, and go to state 52
    "try (T_TRY)"                                 shift, and go to state 53
    "throw (T_THROW)"                             shift, and go to state 54
    "global (T_GLOBAL)"                           shift, and go to state 56
    "unset (T_UNSET)"                             shift, and go to state 57
    "isset (T_ISSET)"                             shift, and go to state 58
    "empty (T_EMPTY)"                             shift, and go to state 59
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 375
    "class (T_CLASS)"                             shift, and go to state 61
    "trait (T_TRAIT)"                             shift, and go to state 62
    "interface (T_INTERFACE)"                     shift, and go to state 63
    "list (T_LIST)"                               shift, and go to state 64
    "array (T_ARRAY)"                             shift, and go to state 65
    "__LINE__ (T_LINE)"                           shift, and go to state 66
    "__FILE__ (T_FILE)"                           shift, and go to state 67
    "__DIR__ (T_DIR)"                             shift, and go to state 68
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 69
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 70
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 71
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 116
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 76
    '('                                           shift, and go to state 77
    ';'                                           shift, and go to state 78
    '{'                                           shift, and go to state 79
    '}'                                           shift, and go to state 904
    '`'                                           shift, and go to state 80
    '"'                                           shift, and go to state 81
    '$'                                           shift, and go to state 82

    namespace_name                   go to state 83
    name                             go to state 84
    inner_statement                  go to state 377
    statement                        go to state 378
    function_declaration_statement   go to state 379
    class_declaration_statement      go to state 380
    class_modifiers                  go to state 89
    class_modifier                   go to state 90
    trait_declaration_statement      go to state 381
    interface_declaration_statement  go to state 382
    if_stmt_without_else             go to state 93
    if_stmt                          go to state 94
    alt_if_stmt_without_else         go to state 95
    alt_if_stmt                      go to state 96
    new_expr                         go to state 97
    expr_without_variable            go to state 98
    function                         go to state 99
    function_call                    go to state 100
    class_name                       go to state 101
    dereferencable_scalar            go to state 102
    scalar                           go to state 103
    constant                         go to state 104
    expr                             go to state 105
    variable_class_name              go to state 106
    dereferencable                   go to state 107
    callable_expr                    go to state 108
    callable_variable                go to state 109
    variable                         go to state 110
    simple_variable                  go to state 111
    static_member                    go to state 112
    internal_functions_in_yacc       go to state 113


State 904

  254 method_body: '{' inner_statement_list '}' .

    $default  reduce using rule 254 (method_body)
